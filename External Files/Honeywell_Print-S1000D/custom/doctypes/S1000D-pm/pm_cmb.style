<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2014, v.4002-->
<?Pub Inc?>
<?APT StylesheetID Title="S1000D PM Stylesheet (ATA Version) (for 6.0) 5.3.6" Description="" CompositionTypes="print,pdf" StylerVersion="6.02"?>
<Styler xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:noNamespaceSchemaLocation="http://www.arbortext.com/namespace/doctypes/styler"
xmlns:atidlm="http://www.arbortext.com/namespace/atidlm"
xmlns:ch="http://www.arbortext.com/namespace/chunker"
xmlns:_gte="http://www.arbortext.com/namespace/Styler/GeneratedTextElements"
xmlns:_sfe="http://www.arbortext.com/namespace/Styler/StylerFormattingElements"
xmlns:_ufe="http://www.arbortext.com/namespace/Styler/UserFormattingElements"
xmlns:_dtd="http://www.arbortext.com/namespace/Styler/UserElements"
xmlns:_acl="java:com.arbortext.epic.Acl"
xmlns:_js="java:com.arbortext.epic.internal.js.JavaScript"
xmlns:saxon="http://saxon.sf.net/"
xmlns:dc="http://www.purl.org/dc/elements/1.1/"
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:xlink="http://www.w3.org/1999/xlink"
xmlns:sono="java:com.sonovision.arbortext.XslHelper">
<StyleSheetInfo appTemplateFile="pm_addInTemplate.3f" minorVersion="2"
printPdfEngine="APP" stylerVersion="6">
<ElementSet/>
<ChunkConfig/>
<HtmlOutputConfig cssStyleLocation="inHtmlHead"
cssStyling="allProperties" listItemsAsTables="yes" output="htmlfile"
outputXhtml="no" titlesAsTables="yes"/>
<HtmlOutputConfig cssStyleLocation="externalCssFile"
cssStyling="allProperties" listItemsAsTables="yes" output="web"
outputXhtml="no" titlesAsTables="no"/>
<HtmlOutputConfig cssStyleLocation="inHtmlHead"
cssStyling="allProperties" listItemsAsTables="yes" output="epub"
outputHtml5="yes" outputXhtml="yes" titlesAsTables="no"/>
<HtmlOutputConfig cssStyleLocation="externalCssFile"
cssStyling="allProperties" listItemsAsTables="yes" output="htmlhelp"
outputXhtml="no" titlesAsTables="no"/>
<HtmlOutputConfig cssStyleLocation="externalCssFile"
cssStyling="allProperties" listItemsAsTables="yes" output="dmp"
outputXhtml="no" titlesAsTables="no"/>
<Language defaultLanguage="en" langAttribute="xml:lang"
langDetermination="attribute" multiLanguage="yes">
<GentextLanguage gentextLanguageName="en"/>
<LanguageMap sourceLanguage="de" targetLanguage="de-1996"/>
<LanguageMap sourceLanguage="en" targetLanguage="en-US"/></Language>
</StyleSheetInfo>
<PropertySets>
<PropertySet propertySetId="bold">
<BaseProperties>
<Font weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet
comment="Edited source is used to get as close as possible to the desired effect for all outputs."
propertySetId="box">
<BaseProperties>
<Highlight shading="#F0F0F0"/></BaseProperties>
<EditedSource minorVersion="23" sourceType="app" stylerVersion="5"
><OnEnter type="application/x-javascript" xml:space="preserve"><![CDATA[//APP source for applying boxing around a block. This should not be applied to inline elements.
var block = arguments[0];
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;

//Apply a -2.999pt rule to the block to offset the main rule
var rule = new fRule();
with (rule) {
   thickness = "-2.999pt";
   lineColor = "None";
   sides = "tblr";
}
block.rules.addRule(rule);

//Apply the main rule to the block
var rule = new fRule();
with (rule) {
   //Line thickness
   thickness = "1pt";
   //Line colour
   lineColor = "Black";
   //Sides (top, bottom, left and right)
   sides = "tblr";
   //Fill colour specifies background for boxing
   fillColor = "#F0F0F0";
}
block.rules.addRule(rule);

//Apply a final rule to the block to remove the offset
var rule = new fRule();
with (rule) {
   thickness = "2pt";
   lineColor = "None";
   sides = "tblr";
}
block.rules.addRule(rule);

]]></OnEnter>
<OnExit type="application/x-javascript" xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
<EditedSource sourceType="fosi">&lt;charsubset
charsubsetid="box">
&lt;boxing toffset="3pt" boffset="4pt" loffset="2pt" roffset="2pt"
thick="1pt" inclr="#F0F0F0"/>&lt;/charsubset></EditedSource>
<EditedSource sourceType="xslFo">&lt;xsl:template name="ps-box"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">     &lt;xsl:attribute
name="background-color">#F0F0F0&lt;/xsl:attribute>     &lt;xsl:attribute
name="border">thin solid&lt;/xsl:attribute>   &lt;xsl:attribute name="padding"
>2pt&lt;/xsl:attribute>   &lt;/xsl:template></EditedSource>
<EditedSource sourceType="xslFoRtf">&lt;xsl:template name="ps-box"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">     &lt;xsl:attribute
name="background-color">#F0F0F0&lt;/xsl:attribute>     &lt;xsl:attribute
name="border">thin solid&lt;/xsl:attribute>   &lt;xsl:attribute name="padding"
>2pt&lt;/xsl:attribute>   &lt;/xsl:template></EditedSource>
<EditedSource sourceType="xslHtml">&lt;xsl:variable name="ps-box"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">background-color:
#F0F0F0; border: thin  solid; padding: 2pt; &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslDmp">&lt;xsl:variable name="ps-box"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">background-color:
#F0F0F0; border: thin  solid; padding: 2pt; &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslHtmlHelp">&lt;xsl:variable name="ps-box"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">background-color:
#F0F0F0; border: thin  solid; padding: 2pt; &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslEpub">&lt;xsl:variable name="ps-box"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">background-color:
#F0F0F0; border: thin  solid; padding: 2pt; &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslWeb">&lt;xsl:variable name="ps-box"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform">background-color:
#F0F0F0; border: thin  solid; padding: 2pt; &lt;/xsl:variable></EditedSource>
</PropertySet>
<PropertySet
comment="Edited source is used to get as close as possible to the desired effect for all outputs."
propertySetId="box__nobackground">
<BaseProperties>
<Highlight shading="transparent"/>
<Alignment align="center"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;
style.backgroundRule.color = 'transparent';
style.backgroundRule.show = 1;
contextProp.preformatted = false;
if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_CENTER;
if ( block.defaultRegion) block.defaultRegion.horizontalAlign = fBlockRegion.ALIGN_CENTER;
//Apply the main rule to the block
var rule = new fRule();
with (rule) {
   //Line thickness
   thickness = "0.5pt";
   //Line colour
   lineColor = "Black";
   //Sides (top, bottom, left and right)
   sides = "tblr";
}
block.rules.addRule(rule);

// Add an inner rule for spacing
with (rule) {
   //Line thickness
   thickness = "3pt";
   //Line colour
   lineColor = "none";
   //Sides (top, left and right; bottom added below bigger)
   sides = "tlr";
}
block.rules.addRule(rule);

with (rule) {
   //Line thickness
   thickness = "5pt";
   //Line colour
   lineColor = "none";
   sides = "b";
}
block.rules.addRule(rule);
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Centred_Heading">
<BaseProperties>
<Font italic="yes" size="14pt" weight="bold"/>
<Alignment align="center"/>
<SpaceBefore optimum="Medium_Space_Above"/>
<Breaks blockOrInline="block"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Centred_Heading_TOC">
<BaseProperties>
<Font italic="no" size="14pt" weight="bold"/>
<Alignment align="center"/>
<SpaceBefore optimum="Medium_Space_Above"/>
<Breaks blockOrInline="block"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Change_bar">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A94e8d41d-b514-4d1f-b87c-baad89eb9c26"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afb7cd421-0f22-4809-9d04-5f7ab7866a60"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</PropertySet>
<PropertySet propertySetId="customTableTitle">
<BaseProperties>
<Font size="14pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Default_Font_Size">
<BaseProperties>
<Font size="10pt"/></BaseProperties>
</PropertySet>
<PropertySet
comment="Edited source is used to get as close as possible to the desired effect for HTML outputs."
propertySetId="double-underline">
<BaseProperties>
<Highlight textUnderlineStyle="double"/></BaseProperties>
<EditedSource sourceType="xslHtml">&lt;xsl:variable name="ps-double-underline">border-bottom:
0.2em double;     &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslHtmlHelp">&lt;xsl:variable name="ps-double-underline">border-bottom:
0.2em double;     &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslDmp">&lt;xsl:variable name="ps-double-underline">border-bottom:
0.2em double;     &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslEpub">&lt;xsl:variable name="ps-double-underline">border-bottom:
0.2em double;     &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslWeb">&lt;xsl:variable name="ps-double-underline">border-bottom:
0.2em double;     &lt;/xsl:variable></EditedSource>
</PropertySet>
<PropertySet propertySetId="Footnote_font">
<BaseProperties>
<Font family="Serif" italic="no" size="12pt" weight="normal"/>
<Highlight allcaps="no" color="#000000" shading="#FFFFFF" smallcaps="no"
strikeThrough="no" textUnderlineStyle="none"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Hidden">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Honeywell_Standard_Space">
<BaseProperties>
<SpaceBefore optimum="Honeywell_Standard_Space"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Index_grouphead_space">
<BaseProperties>
<SpaceAfter minimum="0.3pc" optimum="0.5pc" precedence="medium"/>
</BaseProperties>
</PropertySet>
<PropertySet propertySetId="Index_group_space">
<BaseProperties>
<SpaceBefore maximum="1.6pc" minimum="1.2pc" optimum="1.5pc"
precedence="medium"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Inline">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="italic">
<BaseProperties>
<Font italic="yes"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Link">
<BaseProperties>
<Highlight textUnderlineColor="#FFFFFF" underline="yes"/>
</BaseProperties>
</PropertySet>
<PropertySet propertySetId="List_item_space">
<BaseProperties>
<SpaceBefore conditionality="discard" maximum="8pt" minimum="4pt"
optimum="6pt" precedence="medium"/>
<SpaceAfter maximum="8pt" minimum="4pt" optimum="6pt"
precedence="medium"/>
<Breaks blockOrInline="block"/></BaseProperties>
</PropertySet>
<PropertySet
comment="Edited source is used to get as close as possible to the desired effect for all outputs."
propertySetId="overline">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="23" sourceType="app" stylerVersion="5"
><OnEnter type="application/x-javascript" xml:space="preserve"><![CDATA[//APP source code edit to turn on overlines
var block = arguments[0];
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;

//Use the inbuilt function to set the overline rule's properties to that used for underline. Use other line style names from Styler to set different line styles eg heavy, double, dot, jagged
template.content.functions._app.LineStyle( style.overlineRule, 'underline' );

//Set the overline colour to the font colour
style.overlineRule.color = 'fontColor';

]]></OnEnter>
<OnExit type="application/x-javascript" xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
<EditedSource sourceType="fosi">&lt;charsubset
charsubsetid="overline">&lt;highlt
xscoring="1" xscorewt="0.05em" xscoreoff="-0.8em">&lt;/charsubset></EditedSource>
<EditedSource sourceType="xslFo">&lt;xsl:template name="ps-overline">&lt;xsl:attribute
name="text-decoration">overline&lt;/xsl:attribute>&lt;/xsl:template></EditedSource>
<EditedSource sourceType="xslHtml">&lt;xsl:variable name="ps-overline">text-decoration:
overline; &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslDmp">&lt;xsl:variable name="ps-overline">text-decoration:
overline; &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslHtmlHelp">&lt;xsl:variable name="ps-overline">text-decoration:
overline; &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslEpub">&lt;xsl:variable name="ps-overline">text-decoration:
overline; &lt;/xsl:variable></EditedSource>
<EditedSource sourceType="xslWeb">&lt;xsl:variable name="ps-overline">text-decoration:
overline; &lt;/xsl:variable></EditedSource>
</PropertySet>
<PropertySet
comment="Edited source is used to get as close as possible to the desired effect for print/pdf output. For HTML outputs, this property set will simply result in a single line through text."
propertySetId="overstrike-with-slash">
<BaseProperties>
<Highlight textLineThroughStyle="wordsAndSpaces"/></BaseProperties>
<EditedSource minorVersion="23" sourceType="app" stylerVersion="5"
><OnEnter type="application/x-javascript" xml:space="preserve"><![CDATA[//APP source code edit for overstrike-with-slash
var block = arguments[0];
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;

with (style.strikethroughRule) {
   color = "fontColor";
   thickness = "0.76em";
   offset = "-0.4em";
   lineStyle = "_li_slashes1";
   show = true;
}

]]></OnEnter>
<OnExit type="application/x-javascript" xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
<EditedSource sourceType="fosi">&lt;charsubset
charsubsetid="overstrike-with-slash">
&lt;highlt scorechron="1" scorechr="/"/>&lt;/charsubset></EditedSource>
<EditedSource sourceType="xslFo">&lt;xsl:template name="ps-overstrike-with-slash">
    &lt;xsl:attribute name="atixslfoext:overstrike">true&lt;/xsl:attribute>
    &lt;xsl:attribute name="atixslfoext:overstrike-character">/&lt;/xsl:attribute>
  &lt;/xsl:template></EditedSource>
</PropertySet>
<PropertySet propertySetId="preformatted_font">
<BaseProperties>
<Font family="Monospace"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="ProcedureStep_spacing">
<BaseProperties>
<SpaceBefore optimum="10pt"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Reverse_relative_indent">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

formatting.output("<?ri->");

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Sans-Serif_Font">
<BaseProperties>
<Font family="Arial"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Save_LEP_pages">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.1M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

var currentPage = formatting.currentPage.pageNumber;

//currentNode.setUserString( 'LEP_start_page', currentPage ); // Doesn't seem to work...
currentNode.setAttribute('LEP_start_page', currentPage );

var entryType = formatting.evaluateXPath( "@pmEntryType");
var doctype = formatting.evaluateXPath("/pm/@type");
var isSPM =  doctype == 'spm';

if ( entryType == 'pmt52' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_page_prefix', 'TI');
  currentNode.setAttribute('LEP_subheading', 'Transmittal Information');
}
else if ( entryType == 'pmt53' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_page_prefix', 'RR');
  currentNode.setAttribute('LEP_subheading', 'Record of Revisions');
}
else if ( entryType == 'pmt54' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_page_prefix', 'RTR');
  currentNode.setAttribute('LEP_subheading', 'Record of Temporary Revisions');
}
else if ( entryType == 'pmt55' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_page_prefix', 'SBL');
  currentNode.setAttribute('LEP_subheading', 'Service Bulletin List');
}
else if ( entryType == 'pmt56' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_page_prefix', 'LEP');
  currentNode.setAttribute('LEP_subheading', 'List of Effective Pages');
}
else if ( entryType == 'pmt57' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_page_prefix', 'TC');
  currentNode.setAttribute('LEP_subheading', 'Diagrams and Schematics');
}
else if ( entryType == 'pmt58' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_page_prefix', 'INTRO');
  currentNode.setAttribute('LEP_subheading', 'Introduction');
}
else if ( entryType == 'pmt59' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_subheading', 'Description and Operation');
}
else if ( entryType == 'pmt60' )
{
  currentNode.setAttribute('LEP_numeric_page', '1001');
  currentNode.setAttribute('LEP_subheading', 'Testing and Fault Isolation');
}
else if ( entryType == 'pmt61' )
{
  currentNode.setAttribute('LEP_numeric_page', '2001');
  currentNode.setAttribute('LEP_subheading', 'Schematic and Wiring Diagrams');
}
else if ( entryType == 'pmt62' )
{
  currentNode.setAttribute('LEP_numeric_page', '3001');
  currentNode.setAttribute('LEP_subheading', 'Disassembly');
	if (isSPM == "1") {
	  currentNode.setAttribute('LEP_numeric_page', '1001');
	}
}
else if ( entryType == 'pmt63' )
{
  currentNode.setAttribute('LEP_numeric_page', '4001');
  currentNode.setAttribute('LEP_subheading', 'Cleaning');
	if (isSPM == "1") {
	  currentNode.setAttribute('LEP_numeric_page', '2001');
	}
}
else if ( entryType == 'pmt64' )
{
  currentNode.setAttribute('LEP_numeric_page', '5001');
  currentNode.setAttribute('LEP_subheading', 'Inspection/Check');
	if (isSPM == "1") {
	  currentNode.setAttribute('LEP_numeric_page', '3001');
	  currentNode.setAttribute('LEP_subheading', 'Inspection');
	}
}
else if ( entryType == 'pmt65' )
{
  currentNode.setAttribute('LEP_numeric_page', '6001');
  currentNode.setAttribute('LEP_subheading', 'Repair');
	if (isSPM == "1") {
	  currentNode.setAttribute('LEP_numeric_page', '4001');
	}
}
else if ( entryType == 'pmt66' )
{
  currentNode.setAttribute('LEP_numeric_page', '7001');
  currentNode.setAttribute('LEP_subheading', 'Assembly');
	if (isSPM == "1") {
	  currentNode.setAttribute('LEP_numeric_page', '5001');
	}
}
else if ( entryType == 'pmt67' )
{
  currentNode.setAttribute('LEP_numeric_page', '8001');
  currentNode.setAttribute('LEP_subheading', 'Fits and Clearances');
}
else if ( entryType == 'pmt68' )
{
  currentNode.setAttribute('LEP_numeric_page', '9001');
  currentNode.setAttribute('LEP_subheading', 'Special Tools, Fixtures, Equipment, and Consumables');
}
else if ( entryType == 'pmt69' )
{
  currentNode.setAttribute('LEP_numeric_page', '11001');
  currentNode.setAttribute('LEP_subheading', 'Special Procedures');
}
else if ( entryType == 'pmt70' )
{
  currentNode.setAttribute('LEP_numeric_page', '12001');
  currentNode.setAttribute('LEP_subheading', 'Removal');
}
else if ( entryType == 'pmt71' )
{
  currentNode.setAttribute('LEP_numeric_page', '13001');
  currentNode.setAttribute('LEP_subheading', 'Installation');
}
else if ( entryType == 'pmt72' )
{
  currentNode.setAttribute('LEP_numeric_page', '14001');
  currentNode.setAttribute('LEP_subheading', 'Servicing');
}
else if ( entryType == 'pmt73' )
{
  currentNode.setAttribute('LEP_numeric_page', '15001');
  currentNode.setAttribute('LEP_subheading', 'Storage (Including Transportation)');
}
else if ( entryType == 'pmt74' )
{
  currentNode.setAttribute('LEP_numeric_page', '16001');
  currentNode.setAttribute('LEP_subheading', 'Rework (Service Bulletin Accomplishment Procedures)');
}
else if ( entryType == 'pmt75' )
{
  currentNode.setAttribute('LEP_numeric_page', '10001');
  currentNode.setAttribute('LEP_subheading', 'Illustrated Parts List');
}
else if ( entryType == 'pmt76' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_subheading', 'Rotating Components/Life-Limited Components/Check Interval');
}
else if ( entryType == 'pmt78' )
{
  currentNode.setAttribute('LEP_numeric_page', '5001');
  currentNode.setAttribute('LEP_subheading', 'General Check');
}
else if ( entryType == 'pmt79' )
{
  currentNode.setAttribute('LEP_numeric_page', '5001');
  currentNode.setAttribute('LEP_subheading', 'Inspection/Check');
}
else if ( entryType == 'pmt80' )
{
  currentNode.setAttribute('LEP_numeric_page', '5001');
  currentNode.setAttribute('LEP_subheading', 'Continue-Time Check');
}
else if ( entryType == 'pmt81' )
{
  currentNode.setAttribute('LEP_numeric_page', '5001');
  currentNode.setAttribute('LEP_subheading', 'Zero-Time Check');
}
else if ( entryType == 'pmt82' )
{
  currentNode.setAttribute('LEP_numeric_page', '6001');
  currentNode.setAttribute('LEP_subheading', 'General Repair');
}
else if ( entryType == 'pmt83' )
{
  currentNode.setAttribute('LEP_numeric_page', '6001');
  currentNode.setAttribute('LEP_subheading', 'Repair');
}
// 84 and 85 are SPM-specific entries
else if ( entryType == 'pmt84' )
{
  currentNode.setAttribute('LEP_numeric_page', '6001');
  currentNode.setAttribute('LEP_subheading', 'Packaging');
}
else if ( entryType == 'pmt85' )
{
	currentNode.setAttribute('LEP_subheading', 'Appendix');
  if (isSPM == "1") {
		currentNode.setAttribute('LEP_numeric_page', '7001');
  }
  else {
	  currentNode.setAttribute('LEP_numeric_page', '1');
    currentNode.setAttribute('LEP_page_prefix', 'A');
  }
}
else if ( entryType == 'pmt86' )
{
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('LEP_subheading', 'Heavy Maintenance');
}else
{
  // Unhandled entry type
  currentNode.setAttribute('LEP_numeric_page', '1');
  currentNode.setAttribute('[Unhandled Entry type: ' + entryType + ']', 'LEP');
}

if (doctype == "im" || doctype == "sdim" || doctype == "sdom") {
	var sectionNumber = formatting.evaluateXPath( "@sectionNumber");
  currentNode.setAttribute('LEP_numeric_page', '1');
  if (sectionNumber) {
    currentNode.setAttribute('LEP_page_prefix', sectionNumber);
    if (entryType == "pmt85") {
      currentNode.setAttribute('LEP_subheading', "Appendix " + sectionNumber);
    }
    else {
      currentNode.setAttribute('LEP_subheading', "Section " + sectionNumber);
    }
  }
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Serif_Font">
<BaseProperties>
<Font family="Times New Roman"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Set_APP_Variables">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M040" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

// FYI: It's handy to use template.variableName to store semi-global variables. You can
// reset them here.

// Reset the Perl array that keeps track of page number prefixes
formatting.evaluateShowString("$^[perl undef @pageNumberPrefixes;]");

template.sheetGraphicCtr = 0;

// Counter to make unique "addBefore" streams for legends
template.legendCtr = 0;

// Counter to make unique streams for xrefs to a sheet within a figure
template.sheetXrefCtr = 0;
template.sheetToolCtr = 0;

template.warningAndCautionCtr = 0;

template.referredFragmentCtr = 0;
template.internalRefCtr = 0;

template.lastPageNumber = 0;

template.debugOn = false;
template.debugFilename = "c:/temp/ATA_dbg.log";

// Append a debug message to the external log file. Special characters in Perl might
// cause problems, so make sure the messages are plain text.
// (TODO: make a Javascript-only version)

template.debugToFile = function (str) {

	if (template.debugOn) {
		formatting.evaluateShowString("\"junk\"$^[perl open(TMP, '>>" + template.debugFilename + "'); print TMP '" + str + "\n'; close(TMP);]");
	}
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet
comment="Adjust the pmEntry authorityName attribute to add a dash prefix (used as a suffix to page numbers as well as table and figure numbers for multiple subsections)"
propertySetId="Set_authorityName">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;


var authorityName = formatting.evaluateXPath("@authorityName");

if (authorityName && authorityName.substring(0,1) != '-') {
	authorityName = "-" + authorityName;
}

currentNode.setAttribute('authorityName', authorityName );


// Also need to add it to descendants, so the suffix will appear properly on
// pages with nested pmEntries.

if (authorityName) {
	var nodeList = formatting.currentXMLNode.evaluateXPath("descendant::pmEntry");

	//formatting.output("Descendants; " + nodeList.nodeListValue.length);

	if (nodeList && nodeList.nodeListValue) {
		for (var ndx = 0; ndx < nodeList.nodeListValue.length; ndx++) {
			var node = nodeList.nodeListValue.item(ndx);
			if (node) {
		    //formatting.output("Setting authorityName; ");
		    node.setAttribute('authorityName', authorityName );
		  }
		}
	}
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Set_dmRef_refId">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

// SOURCE EDIT to construct the module ID to link to, which will be the same as
// the data module's "code" (constructed from various attributes in the dmCode).

			var modelIdentCode = formatting.evaluateXPath("dmRefIdent/dmCode/@modelIdentCode"); // "S1000DBIKE"
			var systemDiffCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemDiffCode"); // "AAA"
			var systemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemCode");
			var subSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSystemCode");
			var subSubSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSubSystemCode");
			var disassyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCode");
			var assyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@assyCode");
			var disassyCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCodeVariant");
			var infoCode = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCode");
			var infoCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCodeVariant");
			var itemLocationCode = formatting.evaluateXPath("dmRefIdent/dmCode/@itemLocationCode");

			// A full module code currently looks like this:
			// S1000DBIKE-AAA-A0-10-20-00AA-362B-A

			var moduleId = modelIdentCode + "-" + systemDiffCode + "-" + systemCode
				+ "-" + subSystemCode + subSubSystemCode + "-" + assyCode + "-" + disassyCode + disassyCodeVariant + "-"
				+ infoCode + infoCodeVariant + "-" + itemLocationCode;

currentNode.setAttribute("refId", moduleId); //"R123");


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Set_figureNumber">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

// UPDATE: Now we calculate the figure number and figure number variant based on the
// pmEntry/dmRef structure.

var figureNumber = formatting.evaluateXPath("count(ancestor::pmEntry[1]/preceding-sibling::pmEntry)+1")
if (figureNumber) {
	currentNode.setAttribute('figureNumber', figureNumber);
}

var variantNum = formatting.evaluateXPath("count(ancestor::dmContent[1]/preceding-sibling::dmContent[dmodule/content/illustratedPartsCatalog/figure])");
template.debugToFile("figureNumber: " + figureNumber + "variantNum: " + variantNum);

if (variantNum && variantNum > 0) {
	var variantAlpha = calculateAlphaVariant(variantNum);
  template.debugToFile("variantAlpha: " + variantAlpha);
	currentNode.setAttribute('figureNumberVariant', variantAlpha);
	currentNode.setAttribute('figureNumberVariantTest', variantAlpha);
}
else {
	//currentNode.removeAttribute('figureNumberVariant');
  currentNode.setAttribute('figureNumberVariant', "");
}


// Calculate the alpha variant letter, skipping "I" and "0"
// Max "ZZ" (600th variant)
function calculateAlphaVariant(variantNumber) {
	
  var lookup = "ABCDEFGHJKLMNPQRSTUVWXYZ";
  var len = lookup.length;
  
  if (Math.floor(variantNumber) <= 0) {
  	return "";
  }
  
  var secondDigit = Math.floor((variantNumber - 1) / len);
  if (secondDigit > len) {
    return "TOOBIG";
  }
  
  var result = "";
  if (secondDigit > 0) {
    result = lookup.charAt(secondDigit - 1);
  }
  
  result = result + lookup.charAt((variantNumber - 1) % len);
  return result;
}


/* OLD VERSION (for future reference:
// This removes leading zeroes from the figureNumber attribute
var figureNumber = parseInt(formatting.evaluateXPath("@figureNumber"));

if (figureNumber) {
	currentNode.setAttribute('figureNumber', figureNumber);
}
*/


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Set_figureNumber2">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

// UPDATE: Now we calculate the figure number and figure number variant based on the
// pmEntry/dmRef structure.

var nodeList = formatting.currentXMLNode.evaluateXPath("following-sibling::catalogSeqNumber[1]");
var catalogSeqNumberNode = null;
if (nodeList && nodeList.nodeListValue) {
	catalogSeqNumberNode = nodeList.nodeListValue.item(0);

  var figureNumber = formatting.evaluateXPath("count(ancestor::pmEntry[1]/preceding-sibling::pmEntry)+1")
  if (figureNumber) {
	  catalogSeqNumberNode.setAttribute('figureNumber', figureNumber);
  }

  //var variantNum = formatting.evaluateXPath("count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/illustratedPartsCatalog/figure)");
  var variantNum = formatting.evaluateXPath("count(ancestor::dmContent[1]/preceding-sibling::dmContent[dmodule/content/illustratedPartsCatalog/figure])");
  template.debugToFile("figureNumber: " + figureNumber + "variantNum: " + variantNum);

  if (variantNum && variantNum > 0) {
	  var variantAlpha = calculateAlphaVariant(variantNum);
    template.debugToFile("variantAlpha: " + variantAlpha);
    catalogSeqNumberNode.setAttribute('figureNumberVariant', variantAlpha);
    catalogSeqNumberNode.setAttribute('figureNumberVariantTest', variantAlpha);
  }
  else {
    //currentNode.removeAttribute('figureNumberVariant');
    catalogSeqNumberNode.setAttribute('figureNumberVariant', "z");
  }
}


// Calculate the alpha variant letter, skipping "I" and "0"
// Max "ZZ" (600th variant)
function calculateAlphaVariant(variantNumber) {
	
  var lookup = "ABCDEFGHJKLMNPQRSTUVWXYZ";
  var len = lookup.length;
  
  if (Math.floor(variantNumber) <= 0) {
  	return "";
  }
  
  var secondDigit = Math.floor((variantNumber - 1) / len);
  if (secondDigit > len) {
    return "TOOBIG";
  }
  
  var result = "";
  if (secondDigit > 0) {
    result = lookup.charAt(secondDigit - 1);
  }
  
  result = result + lookup.charAt((variantNumber - 1) % len);
  return result;
}


/* OLD VERSION (for future reference:
// This removes leading zeroes from the figureNumber attribute
var figureNumber = parseInt(formatting.evaluateXPath("@figureNumber"));

if (figureNumber) {
	currentNode.setAttribute('figureNumber', figureNumber);
}
*/


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Set_figureNumbers">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

// UPDATE: Now we calculate the figure number and figure number variant based on the
// pmEntry/dmRef structure.

var nodeList = formatting.currentXMLNode.evaluateXPath("descendant::illustratedPartsCatalog/catalogSeqNumber");
if (nodeList && nodeList.nodeListValue) {

	for (var ndx = 0; ndx < nodeList.nodeListValue.length; ndx++) {
		var node = nodeList.nodeListValue.item(ndx);
		if (node) {

			var pmEntries = node.evaluateXPath("ancestor::pmEntry[1]/preceding-sibling::pmEntry");
			if (pmEntries && pmEntries.nodeListValue) {
				template.debugToFile("XfigureNumber: " + (pmEntries.nodeListValue.length + 1));
				node.setAttribute('figureNumber', pmEntries.nodeListValue.length + 1);
				node.setAttribute('figureNumberTemp', pmEntries.nodeListValue.length + 1);
			}
			else {
				node.setAttribute('figureNumberTemp', "1");
			}

			var dmContents = node.evaluateXPath("ancestor::dmContent[1]/preceding-sibling::dmContent[dmodule/content/illustratedPartsCatalog/figure]");

			if (dmContents && dmContents.nodeListValue && dmContents.nodeListValue.length > 0) {
				var variantAlpha = calculateAlphaVariant(dmContents.nodeListValue.length);
				template.debugToFile("XvariantAlpha: " + variantAlpha);
				node.setAttribute('figureNumberVariant', variantAlpha);
				node.setAttribute('figureNumberVariantTemp', variantAlpha);
			}
			else {
				//currentNode.removeAttribute('figureNumberVariant');
				node.setAttribute('figureNumberVariant', "");
				//node.setAttribute('figureNumberVariantTemp', "");
			}
		}
	}
}

// Calculate the alpha variant letter, skipping "I" and "0"
// Max "ZZ" (600th variant)
function calculateAlphaVariant(variantNumber) {
	
  var lookup = "ABCDEFGHJKLMNPQRSTUVWXYZ";
  var len = lookup.length;
  
  if (Math.floor(variantNumber) <= 0) {
  	return "";
  }
  
  var secondDigit = Math.floor((variantNumber - 1) / len);
  if (secondDigit > len) {
    return "TOOBIG";
  }
  
  var result = "";
  if (secondDigit > 0) {
    result = lookup.charAt(secondDigit - 1);
  }
  
  result = result + lookup.charAt((variantNumber - 1) % len);
  return result;
}


/* OLD VERSION (for future reference:
// This removes leading zeroes from the figureNumber attribute
var figureNumber = parseInt(formatting.evaluateXPath("@figureNumber"));

if (figureNumber) {
	currentNode.setAttribute('figureNumber', figureNumber);
}
*/


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet
comment="Invoked to assign attributes to a changed element to be used in generating the table of highlights"
propertySetId="Set_Figure_Highlight_Info">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;


//var currentPage = formatting.currentPage.pageNumber;
var currentPage = formatting.evaluateShowString("$^[pagestr]");

var effectiveNode = currentNode;

// This is normally invoked from a UFE, so we need to get the ancestor figure element to
// apply attributes.
if (currentNode.nodeName != 'figure') {
	var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::figure");
	if (nodeList && nodeList.nodeListValue) {
		effectiveNode = nodeList.nodeListValue.item(0);
	}
}

effectiveNode.setAttribute('pageNo', currentPage);

//formatting.output("Setting TEST");
//effectiveNode.setAttribute('reasonForUpdateRefIds', "TEST" );

var figureId = formatting.evaluateXPath("ancestor-or-self::figure/@id");

effectiveNode.setAttribute('figureId', figureId );

var authorityDocument = formatting.evaluateXPath("ancestor::dmContent[1]/preceding-sibling::dmRef[1]/@authorityDocument");

if (authorityDocument) {
	effectiveNode.setAttribute('highlightType', "Subtask" );
	effectiveNode.setAttribute('highlightAuthorityDocument', authorityDocument );
}
else {
	// If there was no authorityDocument on the current dmRef, check for authorityDocument on the
	// second-level pmEntry
	authorityDocument = formatting.evaluateXPath("ancestor::pmEntry[count(ancestor::pmEntry)=1]/@authorityDocument");
	if (authorityDocument) {
		effectiveNode.setAttribute('highlightType', "TASK" );
		effectiveNode.setAttribute('highlightAuthorityDocument', authorityDocument );
	}
	else {
		// Some kind of error?
		effectiveNode.setAttribute('highlightType', "Subtask" );
		//currentNode.setAttribute('highlightAuthorityDocument', "UNKNOWN" );
	}
}

// Special case for IPL figures: change the highlight type to "Detailed Parts List",
// and set the iplFigureId attribute so it can be output differently in the Table of Highlights
var isIPL = formatting.evaluateXPath("boolean(ancestor::illustratedPartsCatalog)") == "1";

if (isIPL) {
	effectiveNode.setAttribute('highlightType', "Detailed Parts List" );
	effectiveNode.setAttribute('iplFigureId', figureId );
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet
comment="Invoked to assign attributes to a changed element to be used in generating the table of highlights"
propertySetId="Set_Graphic_Highlight_Info">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;


//var currentPage = formatting.currentPage.pageNumber;
var currentPage = formatting.evaluateShowString("$^[pagestr]");

currentNode.setAttribute('pageNo', currentPage);

//formatting.output("Setting TEST");
//currentNode.setAttribute('reasonForUpdateRefIds', "TEST" );

var figureId = formatting.evaluateXPath("ancestor::figure/@id");

currentNode.setAttribute('figureId', figureId );

var authorityDocument = formatting.evaluateXPath("ancestor::dmContent[1]/preceding-sibling::dmRef[1]/@authorityDocument");

if (authorityDocument) {
	currentNode.setAttribute('highlightType', "Subtask" );
	currentNode.setAttribute('highlightAuthorityDocument', authorityDocument );
}
else {
	// If there was no authorityDocument on the current dmRef, check for authorityDocument on the
	// second-level pmEntry
	authorityDocument = formatting.evaluateXPath("ancestor::pmEntry[count(ancestor::pmEntry)=1]/@authorityDocument");
	if (authorityDocument) {
		currentNode.setAttribute('highlightType', "TASK" );
		currentNode.setAttribute('highlightAuthorityDocument', authorityDocument );
	}
	else {
		// Some kind of error?
		currentNode.setAttribute('highlightType', "Subtask" );
		//currentNode.setAttribute('highlightAuthorityDocument', "UNKNOWN" );
	}
}

// Special case for IPL graphics: change the highlight type to "Detailed Parts List",
// and set the iplFigureId attribute so it can be output differently in the Table of Highlights
var isIPL = formatting.evaluateXPath("boolean(ancestor::illustratedPartsCatalog)") == "1";

if (isIPL) {
	currentNode.setAttribute('highlightType', "Detailed Parts List" );
	currentNode.setAttribute('iplFigureId', figureId );
}



]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet
comment="Invoked to assign attributes to a changed element to be used in generating the table of highlights"
propertySetId="Set_itemSeqNumber_Highlight_Info">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

// Note: problem is that a lot of the itemSeqNumber are output as gentext,
// so I don't this node that we're updating is the actual XML node itself...

// So try to find the same node in the real XML to write the properties to
var catalogSeqNumberPos = formatting.evaluateXPath("count(ancestor::catalogSeqNumber/preceding-sibling::catalogSeqNumber) + 1");
var itemSeqNumberPos = formatting.evaluateXPath("count(ancestor::itemSeqNumber/preceding-sibling::itemSeqNumber) + 1");

// There are two catalogSeqNumber ancestors: the gentext one we are in, and the original first
// one all the others are output as gentext from. The following is to test this for debugging.
//var numAncestor = formatting.evaluateXPath("count(ancestor::catalogSeqNumber)");
//formatting.output(numAncestor + "," + catalogSeqNumberPos + "," + itemSeqNumberPos);


// Get the real itemSeqNumber node in the XML
var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::illustratedPartsCatalog/catalogSeqNumber[" + catalogSeqNumberPos + "]/itemSeqNumber[" + itemSeqNumberPos + "]");

var realItemSeqNumber = null;
if (nodeList && nodeList.nodeListValue) {
	realItemSeqNumber = nodeList.nodeListValue.item(0);
}

//var currentPage = formatting.currentPage.pageNumber;
var currentPage = formatting.evaluateShowString("$^[pagestr]");

//realItemSeqNumber.setAttribute('pageNo', currentPage);

var iplFigureId = formatting.evaluateXPath("ancestor::illustratedPartsCatalog/figure/@id");

if (realItemSeqNumber) {
	realItemSeqNumber.setAttribute('highlightType', "Detailed Parts List" );
	realItemSeqNumber.setAttribute('iplFigureId', iplFigureId );
}
else {
	formatting.output("ERROR: Can't get real itemSeqNumber element to set Table of Highlights information");
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Set_pageBlockPrefix">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

var startAt = formatting.evaluateXPath("@startat");
var pageBlockPrefix = "";

if (startAt) {
	var startAtVal = parseInt(startAt);
	if (startAtVal >= 1000) {
		pageBlockPrefix = Math.floor(startAtVal / 1000);
	}
}

currentNode.setAttribute('pageBlockPrefix', pageBlockPrefix);


var nodeList = formatting.currentXMLNode.evaluateXPath("descendant::pmEntry");

//formatting.output("Descendants; " + nodeList.nodeListValue.length);

if (nodeList && nodeList.nodeListValue) {
	for (var ndx = 0; ndx < nodeList.nodeListValue.length; ndx++) {
		var node = nodeList.nodeListValue.item(ndx);
		if (node) {
	    //formatting.output("Setting authorityName; ");
	    node.setAttribute('pageBlockPrefix', pageBlockPrefix );
	  }
	}
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Set_Page_Prefix">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M070" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

var currentPage = formatting.evaluateShowString("$g");
var pagePrefix = formatting.evaluateXPath("ancestor::pmEntry[1]/@shortPrefix");
formatting.evaluateShowString("$^[perl $pageNumberPrefixes[" + currentPage + "] = " + pagePrefix + ";]";

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet
comment="Invoked to assign attributes to a changed element to be used in generating the table of highlights"
propertySetId="Set_Para_Highlight_Info">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;


var nodeList;
var effectiveNode = currentNode;

if (currentNode.nodeName != 'para') {
	template.debugToFile("Set_Para_Highlight_Info: Non-para node found: " + currentNode.nodeName);

	if (currentNode.nodeName == 'proceduralStep'
		 || currentNode.nodeName == 'levelledPara'
		 || currentNode.nodeName == 'table') {
		// Ok to use currentNode (do nothing)
	}
	else if (formatting.evaluateXPath("boolean(ancestor-or-self::_ufe:CheckNoteChangeBarBegin)") == "1") {
		nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::notePara");
		if (nodeList && nodeList.nodeListValue) {
			effectiveNode = nodeList.nodeListValue.item(0);
		}
		else {
			nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::note");
			if (nodeList && nodeList.nodeListValue) {
				effectiveNode = nodeList.nodeListValue.item(0);
			}
		}
	}
}
// Check if we're within a legend: that has special problems because it's output as gentext
else if (formatting.evaluateXPath("boolean(ancestor::legend)") == "1") {
	var paraId = currentNode.getAttribute('id');
	nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::legend//para[@id='" + paraId + "']");
	if (nodeList && nodeList.nodeListValue) {
		effectiveNode = nodeList.nodeListValue.item(0);
		effectiveNode.setAttribute("inLegend", "1");
		var figureId = formatting.evaluateXPath("ancestor::figure/@id");
		if (figureId) {
			effectiveNode.setAttribute("figureId", figureId);
		}
		var legendId = formatting.evaluateXPath("ancestor::legend/@id");
		if (figureId) {
			effectiveNode.setAttribute("legendId", legendId);
		}
	}
}


template.debugToFile("Set_Para_Highlight_Info: effectiveNode: " + effectiveNode.nodeName);

//var currentPage = formatting.currentPage.pageNumber;
var currentPage = formatting.evaluateShowString("$^[pagestr]");

effectiveNode.setAttribute('pageNo', currentPage);

//formatting.output("Setting TEST");
//effectiveNode.setAttribute('reasonForUpdateRefIds', "TEST" );

var pmEntryId = formatting.evaluateXPath("ancestor::pmEntry[1]/@id");
if (pmEntryId) {
	effectiveNode.setAttribute('pmEntryId', pmEntryId);
}

// Save all the ids of ancestor procedure steps
//nodeList = effectiveNode.evaluateXPath("ancestor::proceduralStep");
nodeList = effectiveNode.evaluateXPath("ancestor-or-self::proceduralStep");

if (!nodeList || !nodeList.nodeListValue) {
	nodeList = effectiveNode.evaluateXPath("ancestor-or-self::levelledPara");
	if (nodeList && nodeList.nodeListValue) {
		effectiveNode.setAttribute("isLevelledPara", "1");
	}
}

if (currentNode.nodeName == 'table') {
	template.debugToFile("Checking table: nodeList: " + (nodeList == true) + "; nodeListValue: " + (nodeList.nodeListValue == true));
}


// Special case for tables: can occur after a proceduralStep
if ((!nodeList || !nodeList.nodeListValue) && currentNode.nodeName == 'table') {
	nodeList = effectiveNode.evaluateXPath("preceding-sibling::proceduralStep[1]/ancestor-or-self::proceduralStep");
	template.debugToFile("Table ID: " + currentNode.getAttribute('id'));
	template.debugToFile("Effective Node ID: " + effectiveNode.getAttribute('id'));
	template.debugToFile("Preceding proceduralStep(s): nodeList: " + nodeList);
	if (nodeList) {
		if (nodeList.nodeListValue) {
			template.debugToFile("nodeList.nodeListValue.length: " + nodeList.nodeListValue.length);
		}
	}
}

if (nodeList && nodeList.nodeListValue) {
	var levelCtr = 1;
	template.debugToFile("Set_Para_Highlight_Info: num proceduralSteps: " + nodeList.nodeListValue.length);
	for (var ndx = 0; ndx < nodeList.nodeListValue.length; ndx++) {
		var node = nodeList.nodeListValue.item(ndx);
		if (node) {
			var id = node.getAttribute('id');
			if (id) {
				effectiveNode.setAttribute("paraId" + levelCtr, id);
				template.debugToFile("Setting paraId" + levelCtr + ": " + id);
			}
			if (levelCtr == nodeList.nodeListValue.length) {
				// Also use the last id as the paraId (for linking)
				effectiveNode.setAttribute("paraId", id);
				template.debugToFile("Setting paraId: " + id);
			}
	  }
		levelCtr++;
	}
}



var authorityDocument = formatting.evaluateXPath("ancestor::dmContent[1]/preceding-sibling::dmRef[1]/@authorityDocument");

if (authorityDocument) {
	effectiveNode.setAttribute('highlightType', "Subtask" );
	effectiveNode.setAttribute('highlightAuthorityDocument', authorityDocument );
}
else {
	// If there was no authorityDocument on the current dmRef, check for authorityDocument on the
	// second-level pmEntry
	authorityDocument = formatting.evaluateXPath("ancestor::pmEntry[count(ancestor::pmEntry)=1]/@authorityDocument");
	if (authorityDocument) {
		effectiveNode.setAttribute('highlightType', "TASK" );
		effectiveNode.setAttribute('highlightAuthorityDocument', authorityDocument );
	}
	else {
		// Some kind of error?
		effectiveNode.setAttribute('highlightType', "Subtask" );
		effectiveNode.setAttribute('highlightAuthorityDocument', "UNKNOWN" );
	}
}



]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Set_referredFragment_ID">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

var originalId = formatting.evaluateXPath("@referredFragment");

var modelIdentCode = formatting.evaluateXPath("dmRefIdent/dmCode/@modelIdentCode"); // "S1000DBIKE"
var systemDiffCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemDiffCode"); // "AAA"
var systemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemCode");
var subSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSystemCode");
var subSubSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSubSystemCode");
var disassyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCode");
var assyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@assyCode");
var disassyCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCodeVariant");
var infoCode = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCode");
var infoCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCodeVariant");
var itemLocationCode = formatting.evaluateXPath("dmRefIdent/dmCode/@itemLocationCode");

// A full module code currently looks like this:
// S1000DBIKE-AAA-A0-10-20-00AA-362B-A

var moduleId = modelIdentCode + "-" + systemDiffCode + "-" + systemCode
		+ "-" + subSystemCode + subSubSystemCode + "-" + assyCode + "-" + disassyCode + disassyCodeVariant + "-"
		+ infoCode + infoCodeVariant + "-" + itemLocationCode;


// Find the ID of the referredFragment: the PMC processing script that produces a combined
// file changes the IDs so they are unique across the final document. We need to look for
// an ID in the appropriate DM that ends with the original ID we're looking for.

// So construct an XPath to do that search, and return the new ID we should be using.

// NB: the XPath function "ends-with" doesn't work in APP, so we need to use substring instead

var xpath = "//dmodule[@id='" + moduleId + "']//*[@id][substring(@id, string-length(@id) - " + originalId.length + " + 1)='" + originalId + "']/@id"

var newId = formatting.evaluateXPath(xpath); //  "DMC-d1e8091-f001" (for testing)

//formatting.output("xpath: " + xpath + "; id: " + XnewId);

if (newId == "") {
	formatting.output("<?tic=r>ERROR: Can't find either the data module or the destination id of the dmRef referredFragment (module id: " + moduleId + ")<?tic>");
}
else {
	currentNode.setAttribute("referredFragment", newId);
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet
comment='Set special section names, and sometimes page "startat" values for the footer of IRM and SPM documents'
propertySetId="Set_specialSectionName">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

var doctype = formatting.evaluateXPath("/pm/@type");
var isIRM = doctype == "irm";
var isSPM = doctype == "spm";
var isIM = doctype == "im" || doctype == "sdom" || doctype == "sdim";
var authorityName = formatting.evaluateXPath("@authorityName");

if (isIRM == "1" && authorityName) {

	// Special section names go in the footer of IRM documents (if they also have authorityName set)

	var pmt = formatting.evaluateXPath("@pmEntryType");
	var specialSectionName = "";
	if (pmt == "pmt79") {
		specialSectionName = "Inspection/Check";
	}
	else if (pmt == "pmt80") {
		specialSectionName = "Continue-Time Check";
	}
	else if (pmt == "pmt81") {
		specialSectionName = "Zero-Time Check";
	}
	else if (pmt == "pmt83") {
		specialSectionName = "Repair";
	}

	currentNode.setAttribute('specialSectionName', specialSectionName);

	var nodeList = formatting.currentXMLNode.evaluateXPath("descendant::pmEntry");

	//formatting.output("Descendants; " + nodeList.nodeListValue.length);

	if (nodeList && nodeList.nodeListValue) {
		for (var ndx = 0; ndx < nodeList.nodeListValue.length; ndx++) {
			var node = nodeList.nodeListValue.item(ndx);
			if (node) {
		    //formatting.output("Setting authorityName; ");
		    node.setAttribute('specialSectionName', specialSectionName );
		  }
		}
	}
}
else if (isSPM == "1") {

	// Special section names go also in the footer of SPM documents

	var pmt = formatting.evaluateXPath("@pmEntryType");
	var specialSectionName = "";
	var startat = "";
	if (pmt == "pmt62") {
		specialSectionName = "Disassembly";
		startat = "1001";
	}
	else if (pmt == "pmt63") {
		specialSectionName = "Cleaning";
		startat = "2001";
	}
	else if (pmt == "pmt64") {
		specialSectionName = "Inspection";
		startat = "3001";
	}
	else if (pmt == "pmt65") {
		specialSectionName = "Repair";
		startat = "4001";
	}
	else if (pmt == "pmt66") {
		specialSectionName = "Assembly";
		startat = "5001";
	}
	else if (pmt == "pmt84") {
		specialSectionName = "Packaging";
		startat = "6001";
	}
	else if (pmt == "pmt85") {
		specialSectionName = "Appendix";
		startat = "7001";
	}

	currentNode.setAttribute('specialSectionName', specialSectionName);
	if (startat) {
		currentNode.setAttribute('startat', startat);
	}

	var nodeList = formatting.currentXMLNode.evaluateXPath("descendant::pmEntry");

	//formatting.output("Descendants; " + nodeList.nodeListValue.length);

	if (nodeList && nodeList.nodeListValue) {
		for (var ndx = 0; ndx < nodeList.nodeListValue.length; ndx++) {
			var node = nodeList.nodeListValue.item(ndx);
			if (node) {
		    //formatting.output("Setting authorityName; ");
		    node.setAttribute('specialSectionName', specialSectionName );
		  }
		}
	}
}
else if (isIM) {
	// Make sure the appendix numbering starts at 1 for IM/SDIM/SDOM (defaults to 7000 from
	// the captions file)
	var pmt = formatting.evaluateXPath("@pmEntryType");
	if (pmt == "pmt85") {
		currentNode.setAttribute('startat', "1");
	}
}
else {
	// Normal doctype
	// Set special Appendix prefix
	var pmt = formatting.evaluateXPath("@pmEntryType");
	if (pmt == "pmt85") {
		currentNode.setAttribute('startat', "1");
		currentNode.setAttribute('shortPrefix', "A-");

    // Set the short prefix on descendant pmEntries too, so it's picked up in the footer in all cases
	  var nodeList = formatting.currentXMLNode.evaluateXPath("descendant::pmEntry");

    //formatting.output("Descendants; " + nodeList.nodeListValue.length);

	  if (nodeList && nodeList.nodeListValue) {
		  for (var ndx = 0; ndx < nodeList.nodeListValue.length; ndx++) {
			  var node = nodeList.nodeListValue.item(ndx);
         if (node) {
	 	      node.setAttribute('shortPrefix', "A-" );
		    }
		  }
	  }
	}
}



]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet
comment="Invoked to assign attributes to a changed element to be used in generating the table of highlights"
propertySetId="Set_Table_Highlight_Info">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;


//var currentPage = formatting.currentPage.pageNumber;
var currentPage = formatting.evaluateShowString("$^[pagestr]");

var effectiveNode = currentNode;

// This may be invoked from a UFE, so we need to get the ancestor table element to
// apply attributes.
if (currentNode.nodeName != "table") {
	var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::table");
	if (nodeList && nodeList.nodeListValue) {
		effectiveNode = nodeList.nodeListValue.item(0);
	}
}

effectiveNode.setAttribute('pageNo', currentPage);

//formatting.output("Setting TEST");
//effectiveNode.setAttribute('reasonForUpdateRefIds', "TEST" );

var tableId = formatting.evaluateXPath("ancestor-or-self::table/@id");

effectiveNode.setAttribute('tableId', tableId );

var authorityDocument = formatting.evaluateXPath("ancestor::dmContent[1]/preceding-sibling::dmRef[1]/@authorityDocument");

if (authorityDocument) {
	effectiveNode.setAttribute('highlightType', "Subtask" );
	effectiveNode.setAttribute('highlightAuthorityDocument', authorityDocument );
}
else {
	// If there was no authorityDocument on the current dmRef, check for authorityDocument on the
	// second-level pmEntry
	authorityDocument = formatting.evaluateXPath("ancestor::pmEntry[count(ancestor::pmEntry)=1]/@authorityDocument");
	if (authorityDocument) {
		effectiveNode.setAttribute('highlightType', "TASK" );
		effectiveNode.setAttribute('highlightAuthorityDocument', authorityDocument );
	}
	else {
		// Some kind of error?
		effectiveNode.setAttribute('highlightType', "Subtask" );
		//currentNode.setAttribute('highlightAuthorityDocument', "UNKNOWN" );
	}
}



]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Set_titleNumber">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

var nodeList = formatting.currentXMLNode.evaluateXPath("title");
var titleNumber = formatting.evaluateXPath("count(preceding-sibling::proceduralStep)+count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/procedure/mainProcedure/proceduralStep)+1");

if (nodeList && nodeList.nodeListValue) {
	var node = nodeList.nodeListValue.item(0);
	if (node) {
		node.setAttribute('titleNumber', titleNumber );
	}
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Set_Tool_or_Consumable_table_ID">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;

var title = formatting.evaluateXPath("title");
var tableId = formatting.evaluateXPath("@id");

  //formatting.output("title: " + title + "; tableId: " + tableId);

if (tableId && title == "Special Tools, Fixtures, and Equipment") {
	var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::pmEntry[1]");
	if (nodeList && nodeList.nodeListValue) {
		var pmEntryNode = nodeList.nodeListValue.item(0);
		pmEntryNode.setAttribute("toolTableId", tableId);
	}
  //formatting.output("toolTableId: " + tableId);
}
else if (tableId && title == "Consumables") {
	var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::pmEntry[1]");
	if (nodeList && nodeList.nodeListValue) {
		var pmEntryNode = nodeList.nodeListValue.item(0);
		pmEntryNode.setAttribute("consumableTableId", tableId);
	}
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Standard_space">
<BaseProperties>
<SpaceBefore conditionality="discard" maximum="10pt" minimum="6pt"
optimum="8pt" precedence="none"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="SubHeading">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="14pt" weight="bold"/>
<Alignment align="left"/>
<SpaceBefore optimum="12pt"/>
<SpaceAfter optimum="0pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Table_space">
<BaseProperties>
<SpaceBefore maximum="1.2em" minimum="1.2em" optimum="1.2em"
precedence="low"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_1">
<BaseProperties>
<Font size="20pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_2">
<BaseProperties>
<Font size="12pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_3">
<BaseProperties>
<Font size="12pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_4">
<BaseProperties>
<Font size="14pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_5">
<BaseProperties>
<Font size="12pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_6">
<BaseProperties>
<Font size="12pt"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_7">
<BaseProperties>
<Font size="12pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_8">
<BaseProperties>
<Font size="12pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_9">
<BaseProperties>
<Font size="12pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_alignment">
<BaseProperties>
<Alignment align="left" lastLineAlign="relative"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_Case">
<BaseProperties></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var fish = formatting.fish[ template.stylerFish ];
var block = arguments[0];
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var contextProp = arguments[1];
var currentNode = formatting.currentXMLNode;
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[/* commands to execute before leaving a node go here */
formatting.output("<?:loop><#,32><?up><?tcaps=1> <?char><?down><?{loop>");

]]></OnExit></EditedSource>
</PropertySet>
<PropertySet propertySetId="Title_color">
<BaseProperties></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_document">
<BaseProperties>
<Font size="24pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_font">
<BaseProperties propertySetReferences="Sans-Serif_Font">
</BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_formalBlock">
<BaseProperties>
<Font size="14pt" weight="bold"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_keeps">
<BaseProperties>
<Hyphenation hyphenate="no"/>
<Keep keepScope="withinColumn" together="7" withNext="7"/>
</BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_Level_2">
<BaseProperties>
<Indent leftIndent="0.75in"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_space">
<BaseProperties>
<LineSpacing lineHeight="1.1em"/>
<SpaceBefore maximum="2em" minimum="1em" optimum="1em"
precedence="medium"/>
<SpaceAfter maximum="1.5em" minimum="0.8em" optimum="1em"
precedence="high"/></BaseProperties>
</PropertySet>
<PropertySet propertySetId="Title_TOC">
<BaseProperties>
<Font size="18pt" weight="bold"/></BaseProperties>
</PropertySet>
</PropertySets>
<Elements>
<Element
comment="Centred makes the heading too far to the right, so use a special indent setting instead"
name="_ufe:AbbreviationDefinitionHeading" style="block">
<Context priority="0" selector="_ufe:AbbreviationDefinitionHeading">
<BaseProperties>
<Indent leftIndent="@1in"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="Abbreviations" style="block">
<Context priority="0" selector="Abbreviations">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac517d2f7-f7b9-460c-86bf-dcb04e9bdc76"><_gte:Target lang="en"
><_ufe:ListOfFiguresHeadings></_ufe:ListOfFiguresHeadings><_sfe:TableOfContents
><_sfe:TocList_of_Figures><_gte:TableOfContents
tocNameRef="List_of_Figures"/></_sfe:TocList_of_Figures></_sfe:TableOfContents
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:AuthorityDocument" style="inline">
<Context priority="0" selector="_ufe:AuthorityDocument">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A71dff118-4047-42cf-bb09-e29015aff612"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly" xpath="ancestor::title"
/><_gte:XPathString
expr="(ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="(ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A878bd0f3-2686-419b-8556-0291fab7481d"><_gte:Target lang="en"
><_gte:XPathString
expr="(ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element
description='This element wraps all "Add before" and "Add after" generated text.'
name="_sfe:BeforeOrAfterText" style="nostyle">
<Context priority="0" selector="_sfe:BeforeOrAfterText">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
comment="Add a single space so there's &#x22;content&#x22; on the black page, otherwise it won't be output."
name="_ufe:BlankFoldoutPage" style="block">
<Context priority="0" selector="_ufe:BlankFoldoutPage">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Blank_Foldout_Page"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aae42d014-6405-4d1c-8692-b76e2416e891"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:BlankFooterPageNumber" style="inline">
<Context
comment='Edited source to use the APP "gte" tag PageNumber to pull the plain page number for the
black page footer (since the old prefix mechanism was incorrectly grabbing the following prefix).'
priority="6" selector="_ufe:BlankFooterPageNumber[@bak]">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae78ce1ca-5775-4ae1-b58e-025a82fccd1d"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly" occur="1"
scope="_ufe:BlankFooterPageNumber"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:BlankFooterPageNumber

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 0;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:BlankFooterPageNumber:_ufeBlankFooterPageNumber_everywhere8D2C:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:BlankFooterPageNumber:_ufeBlankFooterPageNumber_everywhere8D2C:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A1abd4c72-2e45-4625-91fd-1300e079e82f\"><_gte:Target lang=\"en\"><_gte:PageNumber/>" );
      stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:BlankFooterPageNumber

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context
comment='Edited source to use the APP "gte" tag PageNumber to pull the plain page number for the
black page footer (since the old prefix mechanism was incorrectly grabbing the following prefix).'
priority="0" selector="_ufe:BlankFooterPageNumber">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1abd4c72-2e45-4625-91fd-1300e079e82f"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly" occur="1"
scope="_ufe:BlankFooterPageNumber"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:BlankFooterPageNumber

formatting.fishSave( template.stylerFish );
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

// Base properties
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:_ufe:BlankFooterPageNumber:_ufeBlankFooterPageNumber_everywhere_elsBF55:addBefore');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:_ufe:BlankFooterPageNumber:_ufeBlankFooterPageNumber_everywhere_elsBF55:addBefore', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A1abd4c72-2e45-4625-91fd-1300e079e82f\"><_gte:Target lang=\"en\"><_gte:PageNumber/>" );
    stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:BlankFooterPageNumber

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:BlankFooterPageNumberPageBlock" style="inline">
<Context priority="0" selector="_ufe:BlankFooterPageNumberPageBlock">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4d62d8e4-96f2-4aa2-b988-95e7cc044eef"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly" occur="1"
scope="_ufe:BlankFooterPageNumber"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:BlankFooterPageNumberPageBlock

formatting.fishSave( template.stylerFish );
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

// Base properties
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:_ufe:BlankFooterPageNumberPageBlock:_ufeBlankFooterPageNumberPageBlock_every93E4:addBefore');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:_ufe:BlankFooterPageNumberPageBlock:_ufeBlankFooterPageNumberPageBlock_every93E4:addBefore', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A4d62d8e4-96f2-4aa2-b988-95e7cc044eef\"><_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagelast\"/><_gte:PageBlockPageNumber/>" );
    stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:BlankFooterPageNumberPageBlock

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element
comment="Used to generate a blank page at the end of the book, when it would otherwise end on an odd page. Uses a new page block page set (good for IPL and usually
any other pmEntry at the end of a book)." name="_ufe:BlankPage"
style="block">
<Context priority="0" selector="_ufe:BlankPage">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Page_Block_Page_Set"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A31dd944f-ac4f-4622-ae05-4bce64e07465"><_gte:Target lang="en"
><_ufe:BlankPageText></_ufe:BlankPageText></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:BlankPageText" style="block">
<Context priority="0" selector="_ufe:BlankPageText">
<BaseProperties>
<Alignment align="center"/>
<SpaceBefore conditionality="keep" optimum="4in"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A97277239-c341-4f29-b203-3219097786d8"><_gte:Target lang="en"
>Blank Page</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:Centre" style="block">
<Context priority="0" selector="_ufe:Centre">
<BaseProperties>
<Font weight="normal"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
comment="Used for headings before Requirements, Section References, Title of List of Effective Data Modules"
name="_ufe:CentredHeading" style="block">
<Context priority="0" selector="_ufe:CentredHeading">
<BaseProperties propertySetReferences="Centred_Heading">
<LineSpacing lineHeight="1.2em"/>
<SpaceAfter optimum="6pt"/>
<Breaks blockOrInline="block"/>
<Keep withNext="4"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:ChangeRecord" style="block">
<Context priority="0" selector="_ufe:ChangeRecord">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/content/pmEntry/dmContent/dmodule[identAndStatusSection/dmAddress/dmIdent/dmCode/@infoCode='003']"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Front_Matter_Page_Set" pageNumber="continue"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A857a63e1-4c36-4993-aea2-6d06dd7b8f2b"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="/pm/content/pmEntry/dmContent/dmodule[identAndStatusSection/dmAddress/dmIdent/dmCode/@infoCode='003']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CheckChangeBarBegin" style="inline">
<Context priority="0" selector="_ufe:CheckChangeBarBegin">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition
comment="Add change bars for graphics, but not if the change bar was added at the figure level"
conditionType="if">
<Tests>
<XPathTest
expression="ancestor::graphic/@changeType = 'add' or ancestor::graphic/@changeType = 'modify'"/>
<XPathTest
expression="not(ancestor::figure/@changeType = 'add' or ancestor::figure/@changeType = 'modify')"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae9bc317c-400d-4573-937b-02063fbfc3f4"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="6pt" ruleThick="2pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="not(ancestor::graphic) and (ancestor::figure/@changeType = 'add' or ancestor::figure/@changeType = 'modify')"/>
</Tests>
<BaseProperties propertySetReferences="Set_Figure_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aca60dbd9-507f-4540-a1c2-f8b89b3126d9"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="6pt" ruleThick="2pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CheckChangeBarEnd" style="inline">
<Context priority="0" selector="_ufe:CheckChangeBarEnd">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition
comment="Add change bars for graphics, but not if the change bar was added at the figure level">
<Tests>
<XPathTest
expression="ancestor::graphic/@changeType = 'add' or ancestor::graphic/@changeType = 'modify'"/>
<XPathTest
expression="not(ancestor::figure/@changeType = 'add' or ancestor::figure/@changeType = 'modify')"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Abe523848-eed5-48a9-8dfe-7fbdffb38c52"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest
expression="not(ancestor::graphic) and (ancestor::figure/@changeType = 'add' or ancestor::figure/@changeType = 'modify')"/>
</Tests>
<BaseProperties></BaseProperties>
<Condition
comment="If it's in a figure title of a foldout, then output the end change bar (before the added blank page after)">
<Tests>
<XPathTest expression="ancestor::title/parent::figure"/></Tests>
<BaseProperties></BaseProperties>
<Condition>
<Tests>
<XPathTest
expression='ancestor::figure/graphic[last()]/@reproductionWidth="355.6 mm"'/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab485c118-6985-485d-998b-22bc5513eea6"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A05bd1b75-7540-41b6-98f7-93419bfced0f"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CheckDMChangeBarBegin" style="block">
<Context
comment='Start a change bar for the whole DM if the changeType of the dmRef is "add" (not for "modify")'
priority="0" selector="_ufe:CheckDMChangeBarBegin">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests logic="or">
<XPathTest
expression="ancestor::dmContent[1]/preceding-sibling::dmRef[1]/@changeType='add'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3703ff81-bb8d-4cd0-b391-d6761ca4b139"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_dm_change_dm></_ufe:LEP_start_dm_change_dm></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CheckDMChangeBarEnd" style="block">
<Context
comment='End the change bar for the whole DM if the changeType of the dmRef is "add" (not for "modify")'
priority="0" selector="_ufe:CheckDMChangeBarEnd">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests logic="or">
<XPathTest
expression="ancestor::dmContent[1]/preceding-sibling::dmRef[1]/@changeType='add'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aafeedc06-1106-43a6-98d7-2f861af54d83"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A985ff290-34d8-44f5-82fd-3954e6664d0c"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_dm_change></_ufe:LEP_end_dm_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CheckIPDChangeBarBegin" style="inline">
<Context priority="0" selector="_ufe:CheckIPDChangeBarBegin">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests logic="and">
<XPathTest
expression="ancestor::itemSeqNumber[1]/@changeType='add' or ancestor::itemSeqNumber[1]/@changeType='delete' or ancestor::itemSeqNumber[1]/@changeType='modify'"/>
<XPathTest expression="ancestor::itemSeqNumber[1]/@changeMark='1'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aed282d4a-f390-4c3e-a340-a4fc72079daa"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Condition
comment="If the following itemSeqNumber is also changed, then don't end the current change bar here
[REMOVED: Not currently working as desired, but may want to reinstate in the future]">
<Tests>
<XPathTest
expression="@false and (ancestor::itemSeqNumber/preceding::itemSeqNumber[1]/@changeType='add' or ancestor::itemSeqNumber/preceding::itemSeqNumber[1]/@changeType='modify' or ancestor::itemSeqNumber/preceding::itemSeqNumber[1]/@changeType='delete')"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8dcd5793-18f1-4098-8f06-36c3b1d2a66b"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CheckIPDChangeBarEnd" style="block">
<Context priority="0" selector="_ufe:CheckIPDChangeBarEnd">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests logic="and">
<XPathTest
expression="ancestor::itemSeqNumber[1]/@changeType='add' or ancestor::itemSeqNumber[1]/@changeType='delete' or ancestor::itemSeqNumber[1]/@changeType='modify'"/>
<XPathTest expression="ancestor::itemSeqNumber[1]/@changeMark='1'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab63fcbf5-31aa-46e1-b705-54509f193f6d"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5d28569f-9656-4b96-8e66-60fcd32e78c2"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition
comment="If the following itemSeqNumber is also changed, then don't end the current change bar here
[REMOVED: Not currently working as desired, but may want to reinstate in the future]">
<Tests>
<XPathTest
expression="@false and (ancestor::itemSeqNumber/following::itemSeqNumber[1]/@changeType='add' or ancestor::itemSeqNumber/following::itemSeqNumber[1]/@changeType='modify' or ancestor::itemSeqNumber/following::itemSeqNumber[1]/@changeType='delete')"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A70e7349a-d95e-4657-bee9-225fd5f7f5ec"><_gte:Target lang="en"
>xx</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af412a785-7fea-4cd2-b696-018698265f65"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
</Element>
<Element
comment="Checks if the last page is odd, and adds a blank page after if so."
name="_ufe:CheckLastPageBlank2" style="inline">
<Context
comment="Adds a blank page at the end of the book if it ends on an odd page (checked in level 2 pmEntry or catalogSeqNumber)"
priority="0" selector="_ufe:CheckLastPageBlank2">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="placeholder"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0343dd44-08c6-4b8b-90c4-0d37d5b42716"><_gte:Target lang="en"
><_ufe:BlankPage></_ufe:BlankPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="else">
<BaseProperties></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:CheckLastPageBlank2

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

fish[ 'gentextResolved' ] = 0; // Allows conditions to overwrite gentext

var lastPage = template.lastPageNumber; //formatting.currentPage.pageNumber;
var isOdd = lastPage %2 == 1;
template.debugToFile("Check last page: lastPage: " + lastPage + "; isOdd: " + isOdd + "; isPassStable: " + template.isPassStable);

if ( template.isPassStable && isOdd )
{
  // Base properties
  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:_ufe:CheckLastPageBlank2:_ufeCheckLastPageBlank2_everywhereB3B8:addAfter_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:CheckLastPageBlank2:_ufeCheckLastPageBlank2_everywhereB3B8:addAfter_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A0343dd44-08c6-4b8b-90c4-0d37d5b42716\"><_gte:Target lang=\"en\"><_ufe:BlankPage></_ufe:BlankPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText>" );
      stream.write( "</_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' ) {
    currentNode.augmentBefore( null );
    currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
  }

}
else
{
}
var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:CheckLastPageBlank2

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:CheckNoteChangeBarBegin" style="inline">
<Context priority="0" selector="_ufe:CheckNoteChangeBarBegin">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests>
<XPathTest
expression="ancestor::notePara/@changeType='add' or ancestor::notePara/@changeType='modify'"/>
</Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Adf8ec6e5-cd78-4c71-b4c5-4ff53df9acf8"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="ancestor::note/@changeType='add' or ancestor::note/@changeType='modify'"/>
</Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4786cb6a-1707-46f4-a5f3-8e4f3e503ec8"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CheckNoteChangeBarEnd" style="inline">
<Context priority="0" selector="_ufe:CheckNoteChangeBarEnd">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="ancestor::notePara/@changeType='add' or ancestor::notePara/@changeType='modify'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aab887a12-9e25-44e2-9b65-f524d10fcf6c"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="ancestor::note/@changeType='add' or ancestor::note/@changeType='modify'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab59e2003-d8d7-40e6-9f81-61cd402bbc92"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:ClassificationStyle" style="block">
<Context priority="0" selector="_ufe:ClassificationStyle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="11pt" weight="bold"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description='This element wraps the content of each item whose content is inserted by Insert Element Content, when occurrence is "all".'
name="_sfe:CollectionItem" style="inline">
<Context priority="14.01" selector="_sfe:CollectionItem[1]">
<BaseProperties></BaseProperties>
</Context>
<Context priority="9.01"
selector="_sfe:CollectionItem[position()>1 and not(position()=last())]">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A6b208b30-0e36-4f5c-bda5-163d819ca41b"><_gte:Target lang="en"
>, </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="4.01" selector="_sfe:CollectionItem[last()]">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad047d5d8-521a-44c4-9796-575b0f398bac"><_gte:Target lang="en"
>, and </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_sfe:CollectionItem">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="_ufe:CopyrightModule" style="block">
<Context priority="0" selector="_ufe:CopyrightModule">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/content/pmEntry/dmContent/dmodule[identAndStatusSection/dmAddress/dmIdent/dmCode/@infoCode='021']"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Default_Page_Set" pageNumber="continue"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A307d1515-6e36-43c6-82bd-f3a90fa7f0ae"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="/pm/content/pmEntry/dmContent/dmodule[identAndStatusSection/dmAddress/dmIdent/dmCode/@infoCode='021']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CoverATAForSPM" style="block">
<Context priority="0" selector="_ufe:CoverATAForSPM">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='spm'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad692f871-ac93-49f9-bcbe-54af5d11075e"><_gte:Target lang="en"
><_ufe:Right><_ufe:FooterSNS></_ufe:FooterSNS></_ufe:Right></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CoverCMP" style="block">
<Context priority="0" selector="_ufe:CoverCMP">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="26" weight="bold"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="string-length(/pm/identAndStatusSection/pmAddress/pmAddressItems/pmTitle) > 45"/>
</Tests>
<BaseProperties>
<Font size="20pt"/>
<SpaceBefore conditionality="keep" optimum="4pt"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CoverCageCodeLarge" style="block">
<Context priority="0" selector="_ufe:CoverCageCodeLarge">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="12pt" weight="bold"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aaa7fa795-8f30-423b-a4f4-9a191fc029cf"><_gte:Target lang="en"
>Supplier code<_dtd:_newline/>(<_gte:AttributeContent
attr="enterpriseCode"
xpath="/pm/identAndStatusSection/pmStatus/responsiblePartnerCompany"
/>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:CoverCageCodeSmall" style="block">
<Context priority="0" selector="_ufe:CoverCageCodeSmall">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="10pt" weight="bold"/>
<Alignment align="center"/>
<SpaceBefore optimum="2pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A0b08ee4a-85f1-4d54-9367-76a36bd9c5cd"><_gte:Target lang="en"
>Initial Supplier code<_dtd:_newline/>(<_gte:AttributeContent
attr="enterpriseCode"
xpath="/pm/identAndStatusSection/pmStatus/originator"/>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:CoverCompany" style="block">
<Context priority="0" selector="_ufe:CoverCompany">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="8pt" weight="bold"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0142ce0e-3f98-4d39-a86e-c8fdb6233a63"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="/pm/@titleImage"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa611729b-81af-44b7-bdaf-d0bb41cc7a7d"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CoverCompanyText" style="block">
<Context comment="Now controlled through pmIssuer attribute"
priority="0" selector="_ufe:CoverCompanyText">
<BaseProperties>
<Font size="10pt" weight="normal"/>
<LineSpacing lineHeight="1.2em"/>
<SpaceBefore optimum="14pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A43237f38-9348-4b65-ab05-e89a1f2abca6"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>400 Maple Grove Road<_dtd:_newline
/>Ottawa, Ontario K2V 1B8<_dtd:_newline/>Canada<_dtd:_newline/>CAGE:
38473<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/>Website:
www.myaerospace.com<_dtd:_newline/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='99193'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A23bfe573-1285-4981-b30c-ea94b4639fb9"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>111 S. 34th Street<_dtd:_newline
/>Phoenix, Arizona 85034-2802<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 99193<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='58960'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad7a7c7c9-c570-4dd3-872e-c5ca1e681872"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>21111 N. 19th Avenue<_dtd:_newline
/>Phoenix, Arizona 85027-2708<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 58960<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='1M8L7'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Add1abfa4-e196-47b5-b015-2633275fcd47"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>13475 Danielson Street,
Suite 100<_dtd:_newline/>Poway, California 92064<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 1M8L7<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='KF586'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af98053c4-9eeb-4004-af57-38e2b5d72c3f"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>Gren Lane<_dtd:_newline
/>Ashchurch, Tewkesbury GL20 8HD<_dtd:_newline/>United Kingdom<_dtd:_newline
/>CAGE: KF586<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='0UG66'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A07b7fb69-7599-4297-b534-ff5ffd0c81a6"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>125 Technology Parkway<_dtd:_newline
/>Norcross, Georgia 30092<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE:
0UG66<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='31395'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4b65b970-6b04-4269-91d5-3cb0c10a78dd"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>660 Engineering Drive<_dtd:_newline
/>Norcross, Georgia 30092<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE:
31395<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='5VWN5'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ab0acc451-9795-4cf8-8904-1b0f50c3e6e1"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>660 Engineering Drive<_dtd:_newline
/>Norcross, Georgia 30092<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE:
5VWN5<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='56776'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4e29ba68-47d7-446c-bb5b-a275431aafbf"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>121 Whittendale Drive
Suite A<_dtd:_newline/>Moorestown, New Jersey 08057<_dtd:_newline
/>U.S.A.<_dtd:_newline/>CAGE: 56776<_dtd:_newline/>Telephone: 800-601-3099
(Toll Free U.S.A./Canada)<_dtd:_newline/>Telephone: 602-365-3099 (International
Direct)<_dtd:_newline/><_ufe:CoverCompanyURL></_ufe:CoverCompanyURL
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='38473'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A15516e8d-0848-40e9-a528-1974bb05ac58"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>400 Maple Grove Road<_dtd:_newline
/>Ottawa, Ontario K2V 1B8<_dtd:_newline/>Canada<_dtd:_newline/>CAGE:
38473<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='F9111'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A275a7e1b-3254-4771-9c6d-86cd644f6d5c"><_gte:Target lang="en"
>Thales Avionics<_dtd:_newline/>1 Avenue Carnot<_dtd:_newline/>91883
Massy Cedex<_dtd:_newline/>France<_dtd:_newline/>CAGE: F9111<_dtd:_newline
/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='55939'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A00cb2b2a-1f42-4472-b0fa-90fa925850ce"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>21111 N. 19th Avenue<_dtd:_newline
/>Phoenix, Arizona 85027-2708<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 55939<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='09128'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4c617701-8209-46a0-a0d1-2781ef3a7102"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>13350 US Highway 19 N.<_dtd:_newline
/>Clearwater, Florida 34624-7290<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 09128<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='0BFA5'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1dcdbeee-e4c0-4b3b-a214-d5e47893fce4"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>13350 US Highway 19 N.<_dtd:_newline
/>Clearwater, Florida 34624-7290<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 0BFA5<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='0S4A8'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A5ea8067e-aa43-4897-9456-5e9708988d09"><_gte:Target lang="en"
>CFE Company<_dtd:_newline/>111 S. 34th Street<_dtd:_newline/>Phoenix,
Arizona 85034-2802<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE: 0S4A8<_dtd:_newline
/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='59364'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aca71b391-1701-4963-86b3-5d2ef586b4b6"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>1300 W. Warner Road<_dtd:_newline
/>Tempe, Arizona 85284-4282<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE:
59364<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='0YFP0'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aeb5e77a5-d32b-4446-9eaa-40d54ff201ea"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>15001 N.E. 36 Street<_dtd:_newline
/>Redmond, Washington 98052-5317<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 0YFP0<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='19315'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Afeed9104-ba4d-4e00-8218-9d7d5066dabf"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>699 US Highway 46<_dtd:_newline
/>Teterboro, New Jersey 07608-1173<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 19315<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='1STD7'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A07e700cc-bc9e-44bd-8da8-9466bbfd3615"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>23500 W. 105th Street<_dtd:_newline
/>Olathe, Kansas 66061-8425<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE:
1STD7<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='83298'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Abe017f81-cca2-4832-874e-b2c62b17daef"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>333 Unity Drive<_dtd:_newline
/>Mississauga, Ontario L5L 3S6<_dtd:_newline/>Canada<_dtd:_newline
/>CAGE: 83298<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='22373'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aadc4299a-2483-496f-97e4-b058e13d913e"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>23500 W. 105th Street<_dtd:_newline
/>Olathe, Kansas 66061-8425<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE:
22373<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='1R5Y6'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Abe621daf-2c06-403f-90b7-ff803fd7960f"><_gte:Target lang="en"
>Aviation Communications and Surveillance Systems Division<_dtd:_newline
/>19810 N. 7th Avenue<_dtd:_newline/>Phoenix, Arizona 85027-4400<_dtd:_newline
/>U.S.A.<_dtd:_newline/>CAGE: 1R5Y6<_dtd:_newline/>Telephone: 800-601-3099
(Toll Free U.S.A./Canada)<_dtd:_newline/>Telephone: 602-365-3099 (International
Direct)<_dtd:_newline/><_ufe:CoverCompanyURL></_ufe:CoverCompanyURL
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='22373'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad06d0ad7-b743-4756-873f-8490298ad321"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>2525 West 190th Street
Building 38<_dtd:_newline/>Torrance, California 90504-6002<_dtd:_newline
/>U.S.A.<_dtd:_newline/>CAGE: 70210<_dtd:_newline/>Telephone: 800-601-3099
(Toll Free U.S.A./Canada)<_dtd:_newline/>Telephone: 602-365-3099 (International
Direct)<_dtd:_newline/><_ufe:CoverCompanyURL></_ufe:CoverCompanyURL
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='99866'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Afa25b3f6-7601-433c-b95e-7842a33cc757"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>23500 W. 105th Street<_dtd:_newline
/>Olathe, Kansas 66061-8425<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE:
99866<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='U1605'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A37be9f59-48eb-49be-b1aa-4fff0d86c3ac"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>Westland Road Bunford
Lane<_dtd:_newline/>Yeovil BA20 2YD<_dtd:_newline/>United Kingdom<_dtd:_newline
/>CAGE: U1605<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='7X000'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad7546424-af9a-4ad0-9030-19d32b64ebf5"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>1944 E. Sky Harbor Circle
N.<_dtd:_newline/>Phoenix, Arizona 85034-3442<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 7X000<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='55284'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A021de4ec-151c-40c4-9616-3ac779548424"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>3520 Westmoor Street<_dtd:_newline
/>South Bend, Indiana 46628-1373<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 55284<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='99193'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A26f45682-0b48-4c42-b262-5ce06c97800d"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>111 S. 34th Street<_dtd:_newline
/>Phoenix, Arizona 85034-2802<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 99193<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='06848'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae32d8ccc-a1ea-4e6f-ab76-7f6c48a80faf"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>3520 Westmoor Street<_dtd:_newline
/>South Bend, Indiana 46628-1373<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 06848<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='65507'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A89cf61c5-4663-459a-b0df-558619f68b4d"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>8840 Evergreen Boulevard<_dtd:_newline
/>Minneapolis, Minnesota 55433-6040<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 65507<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='64547'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A270364bd-7de9-4da1-9686-c3838dd06bc6"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>11100 N. Oracle Road<_dtd:_newline
/>Tucson, Arizona 85737-9588<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE:
64547<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='97896'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A643e0551-6a18-4432-ba20-fa94380a430c"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>15001 N.E. 36 Street<_dtd:_newline
/>Redmond, Washington 98052-5317<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 97896<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='07217'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A32c909ad-ccca-4f6a-bb29-0af6e0f62532"><_gte:Target lang="en"
>Honeywell Limited<_dtd:_newline/>3333 Unity Drive<_dtd:_newline/>Mississauga,
Ontario L5L 3S6<_dtd:_newline/>Canada<_dtd:_newline/>CAGE: 07217<_dtd:_newline
/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='72914'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A74430235-76d1-4d89-9e18-888d893ae81a"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>550 State Route 55<_dtd:_newline
/>Urbana, Ohio 43078-1948<_dtd:_newline/>U.S.A.<_dtd:_newline/>CAGE:
72914<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='07187'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3bd4ef49-19a4-4d11-b319-ef08e8fde6dc"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>9201 San Mateo Boulevard
N.E.<_dtd:_newline/>Albuquerque, New Mexico 87113-2227<_dtd:_newline
/>U.S.A.<_dtd:_newline/>CAGE: 07187<_dtd:_newline/>Telephone: 800-601-3099
(Toll Free U.S.A./Canada)<_dtd:_newline/>Telephone: 602-365-3099 (International
Direct)<_dtd:_newline/><_ufe:CoverCompanyURL></_ufe:CoverCompanyURL
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='07213'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A57472630-6477-4b94-a081-a5359d396ce3"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>200 Marcel-Laurin Boulevard<_dtd:_newline
/>Montreal, Quebec H4M 2L5<_dtd:_newline/>Canada<_dtd:_newline/>CAGE:
07213<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='97896'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A901aba92-9d6a-4e25-bc97-fa33fa52cb4d"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>15001 N.E. 36 Street<_dtd:_newline
/>Redmond, Washington 98052-5317<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 27914<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='55972'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad0eefe53-e8e4-414e-a78a-dc59a459aca9"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>699 US Highway 46<_dtd:_newline
/>Teterboro, New Jersey 07608-1173<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 55972<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='94580'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A96349922-a96a-48e0-b835-4e21f2619575"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>2600 Ridgway Parkway<_dtd:_newline
/>Minneapolis, Minnesota 55413-3171<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 94580<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='96774'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aaf72f0d1-2d7b-4153-80bb-54d6c4c3eab3"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>375 N. Lake Street<_dtd:_newline
/>Boyne City, Michigan 49712-1105<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 96774<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='56081'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A6ef0b798-072c-4e23-9e75-b6291d26f56a"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>8323 Lindbergh Court<_dtd:_newline
/>Sarasota, Florida 34243-3272<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 56081<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='90073'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A9dffad48-5543-48b2-bf8a-e6dddef90780"><_gte:Target lang="en"
>Pelorus Navigation Systems, Inc.<_dtd:_newline/>5418 11th Street
N.E.<_dtd:_newline/>Calgary, Alberta Canada T2I 7E9<_dtd:_newline
/>CAGE: 90073<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='55939'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A2adc9395-91ba-4b03-abfd-a21d1c452ba4"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>21111 N. 19th Avenue<_dtd:_newline
/>Phoenix, Arizona 85027-2708<_dtd:_newline/>U.S.A.<_dtd:_newline
/>CAGE: 55939<_dtd:_newline/>Telephone: 800-601-3099 (Toll Free U.S.A./Canada)<_dtd:_newline
/>Telephone: 602-365-3099 (International Direct)<_dtd:_newline/><_ufe:CoverCompanyURL
></_ufe:CoverCompanyURL></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='F0302'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A8c2798a0-6af8-4bdb-8d8c-b6cc73230f3b"><_gte:Target lang="en"
>HISPANO-SUIZA<_dtd:_newline/>Reau Center<_dtd:_newline/>Rond-Point
Rene Ravaud BP42<_dtd:_newline/>7551 Moissy-Cramayel Cedex<_dtd:_newline
/>France<_dtd:_newline/>CAGE: F0302<_dtd:_newline/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='6PC31'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A8b97b4a9-de79-45dc-b804-98269bf52242"><_gte:Target lang="en"
>9201-B San Mateo Blvd N.E.<_dtd:_newline/>Albuquerque, New Mexico
87113 U.S.A.<_dtd:_newline/>CAGE: 6PC31<_dtd:_newline/>Telephone:
855-250-7027 (Toll Free U.S.A./Canada)<_dtd:_newline/>Telephone: 505-903-6148
(International Direct)<_dtd:_newline/>Website: www.BendixKing.com/support<_dtd:_newline
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='63389'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A8db6d6c0-5932-4b06-aec2-0437f59e2890"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>dba Honeywell LORI<_dtd:_newline
/>6930 N Lakewood Ave<_dtd:_newline/>Tulsa, Oklahoma 74117<_dtd:_newline
/>U.S.A.<_dtd:_newline/>CAGE: 63389<_dtd:_newline/>Telephone: 800-601-3099
(Toll Free U.S.A./Canada)<_dtd:_newline/>Telephone: 602-365-3099 (International
Direct)<_dtd:_newline/><_ufe:CoverCompanyURL></_ufe:CoverCompanyURL
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer='70210'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A69997ee3-6e65-4f8f-9732-1720e440a839"><_gte:Target lang="en"
>Honeywell International Inc.<_dtd:_newline/>2525 West 190th Street
Building 38<_dtd:_newline/>Torrance, California 90504–6002<_dtd:_newline
/>U.S.A.<_dtd:_newline/>CAGE: 70210<_dtd:_newline/>Telephone: 800-601-3099
(Toll Free U.S.A./Canada)<_dtd:_newline/>Telephone: 602-365-3099 (International
Direct)<_dtd:_newline/><_ufe:CoverCompanyURL></_ufe:CoverCompanyURL
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CoverCompanyURL" style="inline">
<Context priority="0" selector="_ufe:CoverCompanyURL">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A26ac229d-b97f-4a19-bc5b-fcbda3c9bf62"><_gte:Target lang="en"
>Website: <_gte:Font FontColor="blue" Underline="single"
ScoreSpace="yes" ScoreColor="blue">www.myaerospace.com</_gte:Font
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
comment='Either "Initial" or Revised", depending on whether there is a revised date'
name="_ufe:CoverDateLabel" style="inline">
<Context priority="0" selector="_ufe:CoverDateLabel">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmAddressItems/externalPubCode[@pubCodingScheme='initialDate']"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad3f14788-ca6a-410f-9c9a-061221edd317"><_gte:Target lang="en"
>Revised</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3a9ddfcc-2714-4363-8a53-a5e366160c53"><_gte:Target lang="en"
>Initial</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CoverFooterDocumentNumber" style="block">
<Context priority="0" selector="_ufe:CoverFooterDocumentNumber">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="10pt"/>
<LineSpacing lineHeight="1.2em"/>
<SpaceAfter optimum="2pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmAddressItems/externalPubCode[@pubCodingScheme='INT']"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A7a222e0f-8f34-43e6-8a2b-76ec4650fb6a"><_gte:Target lang="en"
>Publication Number <_gte:ElementContent include="contentOnly"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/externalPubCode[@pubCodingScheme='INT']"
/>,</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CoverFooterPage" style="block">
<Context priority="0" selector="_ufe:CoverFooterPage">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="11pt" weight="bold"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A850eb19a-2509-489b-9b1e-b9962c5f82a5"><_gte:Target lang="en"
>Page FM-1</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:CoverFooterSNS" style="block">
<Context priority="0" selector="_ufe:CoverFooterSNS">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="22" weight="bold"/>
<LineSpacing lineHeight="1.2em"/>
<SpaceAfter optimum="2pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A430e1337-039e-45aa-a775-9eeaae42f985"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/externalPubCode[@pubCodingScheme='CMP']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:CoverInitialDate" style="block">
<Context priority="0" selector="_ufe:CoverInitialDate">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/identAndStatusSection/pmAddress/pmAddressItems/externalPubCode[@pubCodingScheme='initialDate']"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A21330c78-746f-46c4-93b2-233ea53d7687"><_gte:Target lang="en"
>Initial <_gte:ElementContent include="contentOnly"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/externalPubCode[@pubCodingScheme='initialDate']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:CoverIssueInfoStyle" style="block">
<Context priority="0" selector="_ufe:CoverIssueInfoStyle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="10pt" weight="normal"/>
<Alignment align="right"/>
<LineSpacing lineHeight="1.3em"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:CoverPartsNumbersStyle" style="inline">
<Context priority="0" selector="_ufe:CoverPartsNumbersStyle">
<BaseProperties>
<Font size="17"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6b5a2db8-f911-4a1d-9387-88eb10f10b4e"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:CoverTitle" style="block">
<Context priority="0" selector="_ufe:CoverTitle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="26" weight="bold"/>
<Alignment align="center"/>
<SpaceBefore optimum="12pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="string-length(/pm/identAndStatusSection/pmAddress/pmAddressItems/pmTitle) > 45"/>
</Tests>
<BaseProperties>
<Font size="20pt"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element
comment='Output a newline and the "with Illustraped Parts Manual" only if there is an IPL (941A data modules)'
name="_ufe:CoverWithIPL" style="inline">
<Context priority="0" selector="_ufe:CoverWithIPL">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/content//dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode[@infoCode='941' and @infoCodeVariant='A']"/>
<XPathTest expression="not(/pm/@type='ipc')"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac787e2b2-85e4-400f-b4be-21f16373d363"><_gte:Target lang="en"
><_dtd:_newline/>with Illustrated Parts List</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:Cover_ExportRegistration" style="block">
<Context priority="0" selector="_ufe:Cover_ExportRegistration">
<BaseProperties propertySetReferences="box__nobackground">
<LineSpacing lineHeight="1.2em"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps all generated cross-references."
name="_sfe:CrossReference" style="inline">
<Context priority="0" selector="_sfe:CrossReference">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps title text in a cross-reference"
name="_sfe:CrossReferenceTitle" style="inline">
<Context priority="10"
selector="_sfe:HeaderOrFooter//_sfe:CrossReferenceTitle">
<BaseProperties></BaseProperties>
</Context>
<Context priority="0" selector="_sfe:CrossReferenceTitle">
<BaseProperties propertySetReferences="italic"></BaseProperties>
</Context>
</Element>
<Element name="_ufe:DataModuleCode" style="inline">
<Context priority="0" selector="_ufe:DataModuleCode">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A33618ab0-287e-4c21-8b85-2a23b8fb8eba"><_gte:Target lang="en"
><_gte:AttributeContent attr="modelIdentCode"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/>-<_gte:AttributeContent attr="systemDiffCode"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/>-<_gte:AttributeContent attr="systemCode"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/>-<_gte:AttributeContent attr="subSystemCode"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/><_gte:AttributeContent attr="subSubSystemCode"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/>-<_gte:AttributeContent attr="assyCode"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/>-<_gte:AttributeContent attr="disassyCode"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/><_gte:AttributeContent attr="disassyCodeVariant"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/>-<_gte:AttributeContent attr="infoCode"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/><_gte:AttributeContent attr="infoCodeVariant"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/>-<_gte:AttributeContent attr="itemLocationCode"
xpath="ancestor::dmodule/identAndStatusSection/dmAddress/dmIdent/dmCode"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:DataModuleTitle" style="block">
<Context priority="0" selector="_ufe:DataModuleTitle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="14pt" weight="bold"/>
<Alignment align="center"/>
<SpaceAfter optimum="8pt"/>
<Breaks blockOrInline="block"/>
<Keep withNext="5"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="ancestor::dmodule[identAndStatusSection/dmAddress/dmIdent/dmCode/@infoCode='003' ] or ancestor::dmodule[identAndStatusSection/dmAddress/dmIdent/dmCode/@infoCode='021' ]"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6efba680-b2be-416b-b949-18a154992843"><_gte:Target lang="en"
><_ufe:FrontToCTitle><_ufe:FrontToCStyle><_gte:ElementContent
include="contentOnly" occur="1" scope="dmodule" elem="infoName"/></_ufe:FrontToCStyle
></_ufe:FrontToCTitle></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="rdf:Description" style="hidden">
<Context priority="0" selector="rdf:Description">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:Effectivity" style="block">
<Context priority="0" selector="_ufe:Effectivity">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A728fc128-984d-42a5-84b3-ca332bea5355"><_gte:Target lang="en"
>EFFECTIVITY<_dtd:_newline/><_dtd:_newline/>ALL</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:EndOfDataModule" style="block">
<Context priority="0" selector="_ufe:EndOfDataModule">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font italic="yes" size="8pt" weight="normal"/>
<Alignment align="right"/>
<SpaceBefore optimum="12pt"/>
<SpaceAfter optimum="18pt"/>
<Breaks blockOrInline="block"/>
<Keep withPrevious="4"/></BaseProperties>
<Conditions>
<Condition comment="Only output when print-variant is 'dmc'">
<Tests>
<XPathTest expression="/pm/@print-variant='dmc'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A8f155e4f-e2ac-4fa7-affe-8c153e17cdc7"><_gte:Target lang="en"
>End of <_ufe:DataModuleCode></_ufe:DataModuleCode> </_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Condition
comment="If a landscape table was the last thing in the dmodule, don't keep the EndOfDataModule statement with it (it pulls apart the table).">
<Tests>
<XPathTest
expression="ancestor::dmodule/content/descendant::*[count(ancestor::dmodule/content/descendant::*)]/ancestor::table[@orient='land']"/>
</Tests>
<BaseProperties>
<Keep withPrevious="0"/></BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:EndOfOuterPMEntry" style="block">
<Context
comment="We also output the end of top-level pmEntries from the end of the inner dmodule. So this one reaches back two levels of pmEntry."
priority="0" selector="_ufe:EndOfOuterPMEntry">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font italic="yes" size="8pt" weight="normal"/>
<Alignment align="right"/>
<SpaceBefore optimum="6pt" precedence="force"/>
<SpaceAfter optimum="18pt"/>
<Breaks blockOrInline="block"/>
<Keep withPrevious="4"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Abbed4431-d9e1-47d8-bfbf-adacc5341883"><_gte:Target lang="en"
>End of <_gte:Font AllCap="yes"><_gte:AttributeContent attr="prefix"
xpath="ancestor::pmEntry[2]"/></_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="not(ancestor::pmEntry[2]/@prefix)"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af92db004-0e12-4c32-8e3a-e42e0c585019"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:EndOfPMEntry" style="block">
<Context priority="0" selector="_ufe:EndOfPMEntry">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font italic="yes" size="8pt" weight="normal"/>
<Alignment align="right"/>
<SpaceBefore optimum="6pt" precedence="force"/>
<SpaceAfter optimum="18pt"/>
<Breaks blockOrInline="block"/>
<Keep withPrevious="4"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa7a9a5c3-8ff1-4dc2-93ae-5a66f222e10d"><_gte:Target lang="en"
>End of <_gte:Font AllCap="yes"><_gte:AttributeContent attr="prefix"
xpath="ancestor::pmEntry[1]"/></_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="not(ancestor::pmEntry[1]/@prefix)"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9c627967-0107-49fe-88d0-ef1d8e6241b6"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element description="This element wraps all generated external links."
name="_sfe:ExternalLink" style="link">
<LinkDetails primary="no" uriAttrname="href"/>
<Context priority="0" selector="_sfe:ExternalLink">
<BaseProperties propertySetReferences="Link"></BaseProperties>
</Context>
</Element>
<Element name="_ufe:FaultReport" style="block">
<Context priority="0" selector="_ufe:FaultReport">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font italic="yes" size="12pt" weight="bold"/>
<Alignment align="center"/>
<SpaceBefore optimum="10pt"/>
<Breaks blockOrInline="block"/>
<Keep withNext="4"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac9651580-b227-4736-8e21-40da9ecf6a21"><_gte:Target lang="en"
>Fault Report</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:FieldDescription" style="block">
<Context priority="0" selector="_ufe:FieldDescription">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af3611b96-5b0e-4e20-bd9e-01932c95fdc3"><_gte:Target lang="en"
><_dtd:table frame="none"><_dtd:tgroup cols="2"><_dtd:colspec
colname="col1" colwidth="2.00in"/><_dtd:colspec colname="col2"
colwidth="2.00*"/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:ElementContent
include="contentOnly" xpath="../../../fieldName"/></_dtd:entry><_dtd:entry
><_gte:ElementContent include="contentOnly" xpath="../../../descr"
/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:FigureSheetTitle" style="block">
<Context priority="0" selector="_ufe:FigureSheetTitle">
<BaseProperties propertySetReferences="Title_space">
<Font italic="no" weight="bold"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<Keep withPrevious="7"/></BaseProperties>
<Conditions>
<Condition
comment="If it's a foldout page, use a right indent so the title appears only on the left side of the page.
UPDATE: Was 9in right margin; changed to 8.5.
UPDATE: Use -.25 and 8.25 margins to try to fit slightly too-long titles on one line for landscape figures.
UPDATE: Back to 0 left margin: looks weird. And second sheet does not apply this either.">
<Tests>
<XPathTest expression="ancestor::graphic/@reproductionWidth='355.6 mm'"/>
</Tests>
<BaseProperties>
<Indent leftIndent="0in" rightIndent="8.25in"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:FigureTitleForToC" style="formalBlock">
<Context priority="0" selector="_ufe:FigureTitleForToC">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:FooterApplicabilityStyle" style="block">
<Context priority="0" selector="_ufe:FooterApplicabilityStyle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="10pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:FooterBlockStyle" style="block">
<Context priority="0" selector="_ufe:FooterBlockStyle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="11pt" weight="normal"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:FooterDate" style="inline">
<Context priority="0" selector="_ufe:FooterDate">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:FooterDateStyle" style="block">
<Context priority="0" selector="_ufe:FooterDateStyle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="11pt" weight="normal"/>
<SpaceAfter optimum="3pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:FooterPage" style="block">
<Context priority="0" selector="_ufe:FooterPage">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="11pt" weight="normal"/>
<Indent leftIndent="0.65in"/>
<SpaceAfter optimum="1pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:FooterSNS" style="inline">
<Context priority="0" selector="_ufe:FooterSNS">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="22" weight="bold"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afecfa5b0-cb51-40ab-9d17-fb518efddc49"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/externalPubCode[@pubCodingScheme='CMP']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition comment="Special long ATA number for SPM">
<Tests>
<XPathTest expression="/pm/@type='spm'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Acb0598f6-d1a6-4735-a086-8d3d28d4cfa9"><_gte:Target lang="en"
>20-00-02/70-00-01</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:FooterSpecialSectionName" style="block">
<Context priority="0" selector="_ufe:FooterSpecialSectionName">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="11pt"/>
<SpaceAfter optimum="1pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
comment="The UFE for the Front Cover also outputs the Parts list, since that is in a region that is part of the
main document stream (and runs onto the back of the front cover if there isn't enough room)."
name="_ufe:FrontCoverPage" style="block">
<Context priority="0" selector="_ufe:FrontCoverPage">
<BaseProperties>
<Font weight="normal"/>
<Breaks blockOrInline="block" newPageSet="Front_Cover"
pageNumber="custom" pageNumberXPath="'3'" startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A35c76130-7e01-44a1-969f-feb77c79582f"><_gte:Target lang="en"
><_dtd:table frame="none"><_dtd:tgroup cols="2"><_dtd:colspec
colname="col1" colwidth="1.25in" colsep="0"/><_dtd:colspec
colname="col2" colwidth="1.50in"/><_dtd:thead><_dtd:row rowsep="0"
><_dtd:entry align="left" valign="top" border-bottom="1pt solid black"
><_dtd:_cellfont Weight="normal"/>Model</_dtd:entry><_dtd:entry
align="center" valign="top"><_dtd:_cellfont Weight="normal"/>Version</_dtd:entry
></_dtd:row></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry
>1</_dtd:entry><_dtd:entry align="center">2</_dtd:entry></_dtd:row
><_dtd:row><_dtd:entry>3</_dtd:entry><_dtd:entry align="center">4</_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2ac2de06-be19-440a-94cf-644e156f50ad"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M120"
sourceType="fosi" stylerVersion="6">&lt;e-i-c
gi="_ufe:FrontCoverPage" occur="all">
&lt;charlist inherit="1">
&lt;indent inherit="0"/>
&lt;textbrk startpg="recto" pageid="p__s-Front_Cover" newpgmdl="local"
startln="1" endln="1"/>
&lt;reset resetlist="folioct finalfolioctscoped"/>
&lt;savetext textid="beforetext"
conrule='!&amp;lt;_sfe:BeforeOrAfterText>&amp;lt;_ufe:Centre  >&amp;lt;table
frame="bottom"  >&amp;lt;tgroup cols="2">&amp;lt;colspec colname="col1"
colwidth="1.25in" colsep="1"/>&amp;lt;colspec colname="col2" colwidth="1.50in"/>&amp;lt;thead
>&amp;lt;row rowsep="1">&amp;lt;entry align="left" valign="top">&amp;lt;_cellfont
Weight="medium"/>Model&amp;lt;/entry>&amp;lt;entry align="center"
valign="top">&amp;lt;_cellfont Weight="normal"/>Version&amp;lt;/entry
>&amp;lt;/row>&amp;lt;/thead>&amp;lt;tbody>&amp;lt;row rowsep="1">&amp;lt;entry
>1&amp;lt;/entry>&amp;lt;entry align="center">2&amp;lt;/entry>&amp;lt;/row
>&amp;lt;row>&amp;lt;entry>3&amp;lt;/entry>&amp;lt;entry align="center">4&amp;lt;/entry
>&amp;lt;/row>&amp;lt;/tbody>&amp;lt;/tgroup>&amp;lt;/table>&amp;lt;/_ufe:Centre
>&amp;lt;/_sfe:BeforeOrAfterText>!'
placemnt="before" lang="en" deflang="1"/>
&lt;savetext textid="aftertext"
conrule="!&amp;lt;_sfe:BeforeOrAfterText>&amp;lt;/_sfe:BeforeOrAfterText>!"
placemnt="after" lang="en" deflang="1"/>&lt;/charlist>
&lt;att>
&lt;charsubset>
&lt;usetext source="beforetext" placemnt="before">&lt;/usetext>
&lt;usetext source="aftertext" placemnt="after">&lt;/usetext>
&lt;/charsubset>
&lt;/att>
&lt;att>
&lt;specval attname="gentext-only" attloc="system-var" attval="#ANY"/>
&lt;specval attname="_styleexportfosi::reset_counters_seen"
attloc="system-func" attval="1"/>
&lt;charsubset>&lt;/charsubset>
&lt;/att>
&lt;/e-i-c></EditedSource>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:FrontCoverPage

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
contextProp.startNew = 2; //start new page
contextProp.pageType = 2;
contextProp.pageNumber = 1;
contextProp.pageSet = 'Front_Cover';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:FrontCoverPage:_ufeFrontCoverPage_everywhere7C34:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:FrontCoverPage:_ufeFrontCoverPage_everywhere7C34:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A35c76130-7e01-44a1-969f-feb77c79582f\"><_gte:Target lang=\"en\"><table frame=\"none\">");

      // We're going to generate this part number table on the front cover using a script,
      // with the number of columns dependant on settings in the applicCrossRefTable (ACT), and
      // the number of rows on the number of products in the productCrossRefTable (PCT). Figure out
      // the number of columns first:

      // We're going to use a new attribute (not in the S1000D schema) to indicate which productAttributes
      // from the ACT will be used as column headings in the part number table. If none are specified,
      // we'll try the default two column table with headings "Model" and "Version" (with id values
      // "model" and "version".
      var numCols = 2; // default
      var columnHeadings = new Array();
      var columnIds = new Array();

      var numPartListAttributes = parseInt(formatting.evaluateXPath("count(/pm/crossRefTable/applicCrossRefTable/productAttributeList/productAttribute[@useForPartsList='yes'])"));

      // UPDATE: If the useForPartsList attribute is not used, assume that all of the productAttribute elements
      // will be used for the part list table.
      var hasAttribute = numPartListAttributes != 0;
      if (!hasAttribute) {
        numPartListAttributes = parseInt(formatting.evaluateXPath("count(/pm/crossRefTable/applicCrossRefTable/productAttributeList/productAttribute)"));
      }

      if (numPartListAttributes > 0) {
      	numCols = numPartListAttributes;
      	for (var i = 0; i < numCols; i++) {
         if (hasAttribute) {
        		columnHeadings[i] = formatting.evaluateXPath("/pm/crossRefTable/applicCrossRefTable/productAttributeList/productAttribute[@useForPartsList='yes'][" + (i + 1) + "]/name");
        		columnIds[i] = formatting.evaluateXPath("/pm/crossRefTable/applicCrossRefTable/productAttributeList/productAttribute[@useForPartsList='yes'][" + (i + 1) + "]/@id");
         }
         else {
        		columnHeadings[i] = formatting.evaluateXPath("/pm/crossRefTable/applicCrossRefTable/productAttributeList/productAttribute[" + (i + 1) + "]/name");
        		columnIds[i] = formatting.evaluateXPath("/pm/crossRefTable/applicCrossRefTable/productAttributeList/productAttribute[" + (i + 1) + "]/@id");
         }
      	}
      }
      else { // Try default "Model" and "Version"
      	numCols = 2;
      	columnHeadings[0] = "Model";
      	columnHeadings[1] = "Version";
      	//columnHeadings[1] = "Serial number"; // test serialno

      	columnIds[0] = "model";
      	columnIds[1] = "version";
      	//columnIds[1] = "serialno"; // test serialno
      }
      stream.write( "<tgroup cols=\"" + numCols + "\">");

      // Make the first column (there's always at least one) a bit narrower than the others, since
      // it's likely a short model or part number. Later we may need to add explicit attributes to
      // set the column widths of this part numbers table.
      stream.write( "<colspec colname=\"col1\" colwidth=\"*\" colsep=\"0\"/>" );

      // Special case for only two columns: right column smaller
      if (numCols == 2) {
        stream.write( "<colspec colname=\"col2\" colwidth=\"2.25in\" colsep=\"0\"/>" );
      }
      else {
        // Write the rest of the colspecs:
        for (var i = 1; i < numCols; i++) {
        	stream.write( "<colspec colname=\"col" + (i + 1) + "\" colwidth=\"*\" colsep=\"0\"/>");
        }
      }

      stream.write( "<thead><row rowsep=\"0\"><?PubTbl row rht=\"0.40in\"?>");

      // Write the table headings. The first one is left-aligned, and the rest are centred:
      stream.write( "<entry align=\"left\" valign=\"top\" rowsep=\"1\" border=\"1pt solid black\"><_ufe:CoverPartsNumbersStyle>" + columnHeadings[0] + "</_ufe:CoverPartsNumbersStyle></entry>");
      for (var i = 1; i < numCols; i++) {
      	stream.write( "<entry align=\"left\" valign=\"top\" rowsep=\"1\" border=\"1pt solid black\"><_ufe:CoverPartsNumbersStyle>" + columnHeadings[i] + "</_ufe:CoverPartsNumbersStyle></entry>");
      }

      stream.write( "</row></thead><tbody>");

      var numRows = formatting.evaluateXPath("count(/pm/crossRefTable/productCrossRefTable/product)");
      // Write out a row for each product in the product xref table (but remove duplicates)
      var dups = new Array(); // to keep track of duplicates

      for (var i = 0; i < numRows; i++) {

      	// Store the entries in an array
      	var entries = new Array();

      	for (var j = 0; j < numCols; j++) {
      		xpath = "/pm/crossRefTable/productCrossRefTable/product[" + (i + 1) + "]/assign[@applicPropertyIdent='" + columnIds[j] + "']/@applicPropertyValue";
      		entries.push(formatting.evaluateXPath(xpath));
      	}
      
      	var isDup = 0;
      	for (var k = 0; k < dups.length; k++) {
      		for (var k2 = 0; k2 < numCols; k2++) {
      			if (entries[k2] != dups[k][k2]) { // found an entry that's different, so this one is not a dup.
      				break;
      			}
      			else if (k2 == numCols -1) { // if we're here in the last column, all columns must match, so it is a dup
      				isDup = 1;
      			}
      		}
      		if (isDup) { break; }
      	}
      	//if (dups.indexOf(entries) == -1) { // If a duplicate row wasn't already written
      	if (!isDup) {
      		dups.push(entries);
      		stream.write( "<row rowsep=\"0\">");
      		// First entry is aligned left; the rest are centred:
      		stream.write( "<entry><_ufe:CoverPartsNumbersStyle>" + entries[0] + "</_ufe:CoverPartsNumbersStyle></entry>" );

      		for (var j = 1; j < numCols; j++) {
      			stream.write( "<entry align=\"left\"><_ufe:CoverPartsNumbersStyle>" + entries[j] + "</_ufe:CoverPartsNumbersStyle></entry>" );
      		}
      		stream.write( "</row>" );
      	}
      }
      
      // Since it's common for the ACT (and other xref tables) not to be mapped properly, add a check for the existence of the
      // ACT in the combined document:
      var numACT = formatting.evaluateXPath("count(/pm/crossRefTable/applicCrossRefTable)");
      if (numRows == 0 && numACT == 0) {
      	stream.write( "<row rowsep=\"0\"><entry><_gte:Font FontColor=\"red\">ERROR: ACT not found</_gte:Font></entry><entry/></row>");
      }

      stream.write( "</tbody></tgroup></table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
if ( currentNode.getUserString( '_temp_hasAfter_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:FrontCoverPage:_ufeFrontCoverPage_everywhere7C34:addAfter');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:FrontCoverPage:_ufeFrontCoverPage_everywhere7C34:addAfter', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2ac2de06-be19-440a-94cf-644e156f50ad\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentAfter( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasAfter_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:FrontCoverPage

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:FrontMatter" style="block">
<Context priority="0" selector="_ufe:FrontMatter">
<BaseProperties>
<Breaks blockOrInline="block" startNew="none"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A474085b6-bc3f-4f9d-ad00-de4aed21d035"></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A873e628e-1512-44b7-b416-ada4adcb6d80"><_gte:Target></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/content/pmEntry[count(descendant::pmEntry)=0]"/>
<XPathTest expression="/pm/content/pmEntry[count(ancestor::pmEntry)=0]"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aea582b83-ab64-4036-9364-0c226520d9d7"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="/pm/content/pmEntry[count(descendant::pmEntry)=0 and count(ancestor::pmEntry)=0]"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:FrontToCStyle" style="inline">
<Context priority="0" selector="_ufe:FrontToCStyle">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="ancestor::_sfe:TocMain_ToC"/></Tests>
<BaseProperties></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:FrontToCTitle" style="title">
<Context priority="20.005"
selector="_ufe:FigureTitleForToC/_ufe:FrontToCTitle">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_formalBlock">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2f947e43-c578-42e1-a19f-cbf8b5293bb0"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A56bcb18e-c14c-43a2-b823-488ddc5d05a6"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A816663ed-fb70-4e5f-8515-514342fc6ee1"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20" selector="pmEntry/_ufe:FrontToCTitle">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_1">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3f300182-0a41-4393-97ff-9274ea6e60e1"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Ad6813924-d3a2-4df8-bd4b-67a88e724288"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:FrontToCTitle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="14pt" weight="bold"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A59f2d429-1070-43d4-81f6-aeb52d754732"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
description="This element wraps headers, footers, TOCs, cross references, and repeating titles generated text."
name="_sfe:Gentext" style="nostyle">
<Context priority="0" selector="_sfe:Gentext">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="_ufe:GraphicNumber" style="inline">
<Context priority="0" selector="_ufe:GraphicNumber">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Afbb6816d-4407-49fa-a14d-8772b440f0db"><_gte:Target lang="en"
>AA<_gte:ElementContent include="contentOnly"
xpath="figure/graphic/@infoEntityIdent"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:HeaderDocTitle" style="inline">
<Context priority="0" selector="_ufe:HeaderDocTitle">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A6135bdf9-5e2b-4626-a0db-f6506a92a70b"><_gte:Target lang="en"
>Component Maintenance Manual</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='fmm'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A7ada26a5-5e9d-4cfd-8e06-4fd48fcca247"><_gte:Target lang="en"
>Flight Line Maintenance Manual</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="/pm/@type='irm'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A6733e46f-8bea-45bc-8d82-b583b3850b82"><_gte:Target lang="en"
>Inspection/Repair Manual</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="/pm/@type='orim'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A6f2be00c-3611-4b7a-8493-f054a2ed04ed"><_gte:Target lang="en"
>Overhaul And Repair Instruction Manual</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="/pm/@type='im'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Acefe89af-b4dd-4241-9278-138406273e64"><_gte:Target lang="en"
>Installation Manual</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="/pm/@type='sdim'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A98b1f37f-3160-4998-be1a-2cec47d2e617"><_gte:Target lang="en"
>System Description, Installation, and Maintenance Manual</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="/pm/@type='sdom'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A05704bd5-7261-4253-9dbe-a6a89c33be4f"><_gte:Target lang="en"
>System Description and Operation Manual</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="/pm/@type='spm'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad5528ed3-aa3d-43d2-ad7a-33669ee2d604"><_gte:Target lang="en"
>Standard Practices Manual</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Abe178341-e165-4923-b9e4-411bcd71cbb6"><_gte:Target lang="en"
>Abbreviated Component Maintenance Manual</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="/pm/@type='ipc'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A7cad997d-f8cd-490b-97f8-578a8e9968f9"><_gte:Target lang="en"
>Illustrated Parts Catalog</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="/pm/@type='gem'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af5755fdd-d248-402a-9b8d-d62fcd7d9fb7"><_gte:Target lang="en"
>Ground Equipment Manual</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:HeaderLogo" style="block">
<Context priority="0" selector="_ufe:HeaderLogo">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa16f688e-0b84-44be-a73a-e18bd2d9b3a4"><_gte:Target lang="en"
><_gte:GeneratedTextGraphic pathname="Honeywell Logo.eps"
imagewidth="150mm" scalefit="1"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element description="This element wraps all headers and footers."
name="_sfe:HeaderOrFooter" style="block">
<Context priority="0" selector="_sfe:HeaderOrFooter">
<BaseProperties>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:HeaderPublicationCode" style="block">
<Context priority="0" selector="_ufe:HeaderPublicationCode">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="11pt" weight="bold"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af9f5fadb-a835-4cf7-a68a-41bff0bd7279"><_gte:Target lang="en"
><_gte:AttributeContent attr="modelIdentCode"
xpath="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode"/>-<_gte:AttributeContent
attr="pmIssuer"
xpath="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode"/>-<_gte:AttributeContent
attr="pmNumber"
xpath="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode"/>-<_gte:AttributeContent
attr="pmVolume"
xpath="/pm/identAndStatusSection/pmAddress/pmIdent/pmCode"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:HeaderTitleStyle" style="block">
<Context priority="0" selector="_ufe:HeaderTitleStyle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="10pt" weight="normal"/>
<Highlight allcaps="yes"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element comment="Used for heading before EDI" name="_ufe:Heading"
style="block">
<Context priority="0" selector="_ufe:Heading">
<BaseProperties propertySetReferences="Centred_Heading">
<Font italic="no"/>
<Alignment align="left"/>
<LineSpacing lineHeight="1.2em"/>
<SpaceAfter optimum="6pt"/>
<Breaks blockOrInline="block"/>
<Keep withNext="4"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_AlternatePart" style="block">
<Context priority="0" selector="_ufe:IPD_AlternatePart">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="ancestor::itemSeqNumber/@partStatus='pst05'"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A11e61d88-0346-4ab0-bd27-8aa6ff1399d0"><_gte:Target lang="en"
>(ALTN PN)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_AttachingPartsEnd" style="inline">
<Context priority="0" selector="_ufe:IPD_AttachingPartsEnd">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="ancestor::itemSeqNumber[attachingPartsEnd]"/>
</Tests>
<BaseProperties>
<Indent leftIndent="16pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af28d33e3-f7e4-4e1e-bb9d-cee291bf6d12"><_gte:Target lang="en"
><_dtd:_newline/><_gte:Leaders leaderType="space" lenType="specified"
specLen="16.00pt"/>___*___</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_AttachingPartsStart" style="block">
<Context priority="0" selector="_ufe:IPD_AttachingPartsStart">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="ancestor::itemSeqNumber[attachingPartsStart]"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<LineSpacing/>
<SpaceAfter optimum="1pt" precedence="force"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A70b7da78-c8a7-4986-b0d3-7c91588d48a3"><_gte:Target lang="en"
>(ATTACHING PARTS)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_ChangeAuthorityData" style="block">
<Context priority="0" selector="_ufe:IPD_ChangeAuthorityData">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="ancestor::itemSeqNumber/changeAuthorityData"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A79732f39-6ac6-4616-ae7c-66dab722b163"><_gte:Target lang="en"
><_gte:AttributeContent attr="condValue"
xpath="ancestor::itemSeqNumber/changeAuthorityData"/> <_gte:AttributeContent
attr="condNumber"
xpath="ancestor::itemSeqNumber/changeAuthorityData/changeAuthority"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_Description" style="inline">
<Context priority="0" selector="_ufe:IPD_Description">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_Description

var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");


var hasPartRepository = formatting.evaluateXPath("boolean(count(/pm/commonRepository/partRepository/partSpec)>0)");

if (hasPartRepository == "0") {
	var descrForPart = formatting.evaluateXPath("ancestor::itemSeqNumber/partSegment/itemIdentData/descrForPart");

	// Now also use use partKeyword if available, otherwise descrForPart (as done with part repositories below)

	var partKeyword = formatting.evaluateXPath("ancestor::itemSeqNumber/partSegment/itemIdentData/partKeyword");

	if (partKeyword) {
		formatting.output(partKeyword);
	}
	else if (descrForPart) {
		formatting.output(descrForPart);
	}
	else {
		formatting.output("<?tic=r>DESCR not found in partSegment<?tic>");
	}
}
else {
	// Output description: use partKeyword if available, otherwise descrForPart

	var descrForPart = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/descrForPart");

	var partKeyword = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/partKeyword");

	if (partKeyword) {
		formatting.output(partKeyword);
	}
	else if (descrForPart) {
		formatting.output(descrForPart);
	}
	else {
		formatting.output("<?tic=r>DESCR not found for " + mfrCode + "/" + partNo + "<?tic>");
	}
}

// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_Description

]]></OnExit></EditedSource>
</Context>
</Element>
<Element
comment="New block to hold IPD Description to make continued lines indented."
name="_ufe:IPD_DescriptionBlock" style="block">
<Context priority="0" selector="_ufe:IPD_DescriptionBlock">
<BaseProperties>
<Indent firstLineIndent="*-23pt" leftIndent="@IPL_Nomenclature_Indent"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A270147b0-8ec5-4399-b82c-2704d6ff2b26"><_gte:Target lang="en"
><_ufe:CheckIPDChangeBarBegin></_ufe:CheckIPDChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A73beece7-95d0-4e51-a0bb-d8ee52dd6e50"><_gte:Target lang="en"
><_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText="." vshift="0.00pt"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_EDI_Generator" style="block">
<Context
comment="EDI table generation using generic part data.
NOTE: was going to generate the continued title with UFE IPD_EDI_Title_Repeat (like done in the Numerical Index), but since this is a double-column layout, it would cause the continued title to appear at the top of both columns."
priority="0" selector="_ufe:IPD_EDI_Generator">
<BaseProperties>
<Breaks blockOrInline="block" spanInto="2"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Afb377fdc-3038-4376-8cb6-808001a8ea6e"><_gte:Target lang="en"
><_dtd:table frame="top"><_dtd:tgroup cols="4"><_dtd:colspec
colname="col1" colsep="0"/><_dtd:colspec colname="col2" colwidth="0.47*"
colsep="0"/><_dtd:colspec colname="col3" colwidth="0.47*" colsep="0"
/><_dtd:colspec colname="col4"/><_dtd:thead><_dtd:row rowsep="1"><_dtd:entry
valign="top">EQUIPMENT<_dtd:_newline/>DESIGNATOR</_dtd:entry><_dtd:entry
valign="top" nameend="col3" namest="col2">FIG.<_dtd:_newline/>ITEM</_dtd:entry
><_dtd:entry valign="top">GEOGRAPHIC<_dtd:_newline/>LOCATION</_dtd:entry
></_dtd:row></_dtd:thead><_dtd:tbody><_dtd:row><_dtd:entry>A1</_dtd:entry
><_dtd:entry align="right">1</_dtd:entry><_dtd:entry>235</_dtd:entry
><_dtd:entry>C3</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_EDI_Generator

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "_ufeIPD_EDI_Generator_everywhere_else3E5C";
contextProp.pdfTag = 'P';
contextProp.pdfAttrs = {};

// Base properties
//block.spanFrame = 1;
//block.balanceBefore = 1;
//block.spanParents = 1;
//block.numColumns = 2;

// break block in two columns
block.spanFrame = 0;
block.balanceBefore = 0;
block.spanParents = 0;
block.numColumns = 2;

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:_ufe:IPD_EDI_Generator:_ufeIPD_EDI_Generator_everywhere_else3E5C:addBefore');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:_ufe:IPD_EDI_Generator:_ufeIPD_EDI_Generator_everywhere_else3E5C:addBefore', primaryStream.type );

    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A4b13c5a1-e882-48b9-a366-b067c4681fbf\"><_gte:Target lang=\"en\"><_ufe:IPD_EDI_TableHeader/>" );
		  
    //stream.write("<table frame=\"top\"><tgroup cols=\"4\"><colspec colname=\"col1\"/><colspec colname=\"col2\" colwidth=\"0.47*\"/><colspec colname=\"col3\" colwidth=\"0.47*\"/><colspec colname=\"col4\"/>" );
    //stream.write( "<thead><row><entry rowsep=\"1\" colsep=\"0\">EQUIPMENT<_dtd:_newline/>DESIGNATOR</entry><entry rowsep=\"1\" colsep=\"0\" nameend=\"col3\" namest=\"col2\" align=\"center\">FIG.<_dtd:_newline/>ITEM</entry><entry colsep=\"0\" rowsep=\"1\" align=\"left\">GEOGRAPHIC<_dtd:_newline/>LOCATION</entry></row></thead><tbody>");


    var nodeList = formatting.currentXMLNode.evaluateXPath("/pm/content/pmEntry[@pmEntryType='pmt75']//genericPartData[@genericPartDataName='rd' or @genericPartDataName='rdi']");
    var numRows = 0; 

	  // Use to retrieve the text of a descendant element. Appropriate only when there is one descendant element
	  // with the specified name, and it contains only simple text (no nested content).
	  // Returns null if not found.
	  function getDescendantElementText(node, descendantName) {
		  
		   var nodeList = node.getElementsByTagName(descendantName);
		   if (!nodeList || nodeList.length == 0) {
			   return null;
		   }
		   var descendantNode = nodeList.item(0);
		   var textNode = descendantNode.firstChild;
		   if (!textNode) {
			   return null;
		   }
		   
		   return textNode.nodeValue;
	  }


      var parts = new Array();
	  
      if (nodeList && nodeList.nodeListValue) {
         numRows = nodeList.nodeListValue.length;

         for (var i = 0; i < numRows; i++) {

           var gpdNode = nodeList.nodeListValue.item(i);
           var itemSeqNumberNode = gpdNode.parentNode.parentNode;
           var catalogSeqNumberNode = itemSeqNumberNode.parentNode;
           
           var functionalItem = getDescendantElementText(gpdNode, "genericPartDataValue");
           var figureNumber = catalogSeqNumberNode.getAttribute("figureNumberTemp");
           var figureNumberVariant = catalogSeqNumberNode.getAttribute("figureNumberVariantTemp");
           var item = catalogSeqNumberNode.getAttribute("item");
           var itemSeqNumberValue = itemSeqNumberNode.getAttribute("itemSeqNumberValue");

           // This gets rid of leading zeroes (need to specify base 10 so numbers with leading zeroes aren't interpreted as octal numbers):
           var itemNumberVal = parseInt(item, 10);
           
           // Add not illustrated marker if applicable (a dash)
           var notIllustratedNodeList = itemSeqNumberNode.getElementsByTagName("notIllustrated");
           if (notIllustratedNodeList && notIllustratedNodeList.length > 0) {
             itemNumberVal = "-" + itemNumberVal;
           }
           else {
             // Add a space for alignment purposes
             itemNumberVal = "&#160;" + itemNumberVal;
           }

           // Add letter from itemSeqNumber if applicable
           if (itemSeqNumberValue != "00") {
             itemNumberVal = itemNumberVal + itemSeqNumberValue.charAt(itemSeqNumberValue.length - 1);
           }
           
          // No installationIdent in this version using generic part data instead of functionalItemRef.
          // Instead use the following-sibling genericPartData if it has a genericPartDataName of "geoloc"
          var nextGpdNode = gpdNode.nextSibling;
          var fctInstallation = "";
          if (nextGpdNode && nextGpdNode.getAttribute("genericPartDataName") == "geoloc") {
            fctInstallation = getDescendantElementText(nextGpdNode, "genericPartDataValue");
          }

          parts[i]=[functionalItem, parseInt(figureNumber, 10), figureNumberVariant, itemNumberVal, fctInstallation];
        }
      }

(function() {
  // Regular expression to separate the digit string from the non-digit strings.
  var reParts = /\d+|\D+/g;
 
  // Regular expression to test if the string has a digit.
  var reDigit = /\d/;
 
  // Add cmpStringsWithNumbers to the global namespace.  This function takes to
  // strings and compares them, returning -1 if `a` comes before `b`, 0 if `a`
  // and `b` are equal, and 1 if `a` comes after `b`.
  cmpStringsWithNumbers = function(a, b) {
    // Get rid of casing issues.
    a = a.toUpperCase();
    b = b.toUpperCase();
 
    // Separates the strings into substrings that have only digits and those
    // that have no digits.
    var aParts = a.match(reParts);
    var bParts = b.match(reParts);
 
    // Used to determine if aPart and bPart are digits.
    var isDigitPart;
 
    // If `a` and `b` are strings with substring parts that match...
    if(aParts && bParts &&
        (isDigitPart = reDigit.test(aParts[0])) == reDigit.test(bParts[0])) {
      // Loop through each substring part to compare the overall strings.
      var len = Math.min(aParts.length, bParts.length);
      for(var i = 0; i < len; i++) {
        var aPart = aParts[i];
        var bPart = bParts[i];
 
        // If comparing digits, convert them to numbers (assuming base 10).
        if(isDigitPart) {
          aPart = parseInt(aPart, 10);
          bPart = parseInt(bPart, 10);
        }
 
        // If the substrings aren't equal, return either -1 or 1.
        if(aPart != bPart) {
          return aPart < bPart ? -1 : 1;
        }
 
        // Toggle the value of isDigitPart since the parts will alternate.
        isDigitPart = !isDigitPart;
      }
    }
 
    // Use normal comparison.
    return (a >= b) - (a <= b);
  };
})();      

      //sort by Equipment Designator first, then figureNumber (with figureNumberVariant) and functionalItemNumber
      var sortEquipDesign = function(a,b){

         // If Equipment Designator is different, return their comparison
         if (a[0] != b[0]) {
           return cmpStringsWithNumbers(a[0], b[0]);
         }

         // Otherwise (the Equipment Designator is the same), return the comparison of the figure number
         // combined with item number.
         var left = a[1] + a[2];
         var right = b[1] + b[2];
        //if (left != right){
           return cmpStringsWithNumbers(left, right);
        //}
        
      };

      parts.sort(sortEquipDesign);

      var entriesPerTable = 19968; //128; //49984; // multiple of 64 entries per page, but 60 on the first page (hopefully it's always consistent)
      var chunkStart = 0;

      // firstPageRows: how many rows to output per column on the first page
      var firstPageRows = 30;

      // See how many full table "chunks" to output (since we're breaking the whole table into
      // smaller pieces). Subtract the number of rows output on the first page, which are output
      // separately below.
      var tableChunks = Math.floor((numRows - (firstPageRows * 2)) / entriesPerTable);

      // If there are fewer rows than will fill the first page, 
      var halfRows = Math.ceil(numRows / 2);
      if (halfRows < firstPageRows) {
        firstPageRows = halfRows;
      }

      template.debugToFile("numRows: " + numRows + "; tableChunks: " + tableChunks + "; firstPageRows: " + firstPageRows);

      // Output first two tables on the first page (two columns, 30 each)
      for (var columnNo = 1; columnNo <= 2; columnNo++) {

        // Output table top
        if (columnNo == 2) {
          stream.write("<_ufe:NewColumn>");
        }

        stream.write("<table frame=\"none\"><tgroup cols=\"4\"><colspec colname=\"col1\"/><colspec colname=\"col2\" colwidth=\"0.47*\"/><colspec colname=\"col3\" colwidth=\"0.47*\"/><colspec colname=\"col4\"/>" );
        stream.write( "<tbody>");

        var ctr;
        for (var ctr = chunkStart; ctr < firstPageRows + chunkStart && ctr < numRows; ctr++){
          stream.write( "<row rowsep=\"0\"><entry colsep=\"0\">"+parts[ctr][0]+"</entry><entry colsep=\"0\" align=\"right\">"+parts[ctr][1]+parts[ctr][2]+"</entry><entry colsep=\"0\">"+parts[ctr][3]+"</entry><entry colsep=\"0\">"+parts[ctr][4]+"</entry></row>");
        }

        // Output table bottom
        stream.write("</tbody></tgroup></table>" );

        //stream.write("<?Pub _newcolumn?>");

        if (columnNo == 2) {
          stream.write("</_ufe:NewColumn>");
        }

        if (ctr == numRows) {
          chunkStart = numRows;
        }
        else {
        	 chunkStart += firstPageRows;
        }
      }

       var needPageSetEnd = false;
       // Start new EDI page set (wrapping) if there are more rows to output
       if (chunkStart < numRows) {
         stream.write("<_ufe:IPD_EDI_PageSet>");
         needPageSetEnd = true;
       }

      template.debugToFile("numRows: " + numRows + "; tableChunks: " + tableChunks + "; chunkStart: " + chunkStart + "; entriesPerTable: " + entriesPerTable );

		  // Output the table chunks
      for (var chunk = 1; chunk <= tableChunks; chunk++) {

        // Output table top
        stream.write("<table frame=\"none\"><tgroup cols=\"4\"><colspec colname=\"col1\"/><colspec colname=\"col2\" colwidth=\"0.47*\"/><colspec colname=\"col3\" colwidth=\"0.47*\"/><colspec colname=\"col4\"/><tbody>" );

			 var entriesInThisTable = entriesPerTable;
        //if (chunk == 1) { // First table has four less (due to smaller first page)
        //  entriesInThisTable -= 4;
        //}

        for (var i = chunkStart; i < chunkStart + entriesInThisTable; i++){
          stream.write( "<row rowsep=\"0\"><entry colsep=\"0\">"+parts[i][0]+"</entry><entry colsep=\"0\" align=\"right\">"+parts[i][1]+parts[i][2]+"</entry><entry colsep=\"0\">"+parts[i][3]+"</entry><entry colsep=\"0\">"+parts[i][4]+"</entry></row>");
        }
        chunkStart += entriesInThisTable;

        // Output table bottom
        stream.write("</tbody></tgroup></table>" );

      }

      template.debugToFile("numRows: " + numRows + "; chunkStart: " + chunkStart );

      if (chunkStart < numRows) {

        // Output the last entries (smaller than a full table "chunk")
        // Output table top
        stream.write("<table frame=\"none\"><tgroup cols=\"4\"><colspec colname=\"col1\"/><colspec colname=\"col2\" colwidth=\"0.47*\"/><colspec colname=\"col3\" colwidth=\"0.47*\"/><colspec colname=\"col4\"/><tbody>" );

        for (var i = chunkStart; i < numRows; i++){
          stream.write( "<row rowsep=\"0\"><entry colsep=\"0\">"+parts[i][0]+"</entry><entry colsep=\"0\" align=\"right\">"+parts[i][1]+parts[i][2]+"</entry><entry colsep=\"0\">"+parts[i][3]+"</entry><entry colsep=\"0\">"+parts[i][4]+"</entry></row>");
        }

        stream.write( "</tbody></tgroup></table>" );
      }

      template.debugToFile("needPageSetEnd: " + needPageSetEnd);

      if (needPageSetEnd) {
        stream.write("</_ufe:IPD_EDI_PageSet>");
      }

      stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.configureColumns( block );
template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_EDI_Generator

template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "_ufeIPD_EDI_Generator_everywhere_else3E5C", false, false );
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_EDI_PageSet" style="block">
<Context priority="0" selector="_ufe:IPD_EDI_PageSet">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="EDI_Page_Set" startNew="page"/>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_EDI_TableHeader" style="block">
<Context priority="0" selector="_ufe:IPD_EDI_TableHeader">
<BaseProperties>
<SpaceAfter optimum="2pt" precedence="force"/>
<Breaks blockOrInline="block" spanInto="1"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A972c1b4d-8285-4850-b6b4-b278c7af8ec4"><_gte:Target lang="en"
><_dtd:table frame="topbot"><_dtd:tgroup cols="8"><_dtd:colspec
colname="col1" colwidth="1.27*"/><_dtd:colspec colname="col2"
colwidth="0.20*"/><_dtd:colspec colname="col3" colwidth="0.47*"/><_dtd:colspec
colname="col4"/><_dtd:colspec colname="col5" colwidth="1.27*"/><_dtd:colspec
colname="col6" colwidth="0.20*"/><_dtd:colspec colname="col7"
colwidth="0.47*"/><_dtd:colspec colname="col8"/><_dtd:tbody><_dtd:row
><_dtd:entry colsep="0"><_gte:Font Weight="bold">EQUIPMENT<_dtd:_newline
/>DESIGNATOR</_gte:Font></_dtd:entry><_dtd:entry colsep="0"
nameend="col3" namest="col2"><_gte:Font Weight="bold">FIG.<_dtd:_newline
/>ITEM</_gte:Font></_dtd:entry><_dtd:entry colsep="0"><_gte:Font
Weight="bold">GEOGRAPHIC<_dtd:_newline/>LOCATION</_gte:Font></_dtd:entry
><_dtd:entry colsep="0"><_gte:Font Weight="bold">EQUIPMENT<_dtd:_newline
/>DESIGNATOR</_gte:Font></_dtd:entry><_dtd:entry colsep="0"
nameend="col7" namest="col6"><_gte:Font Weight="bold">FIG.<_dtd:_newline
/>ITEM</_gte:Font></_dtd:entry><_dtd:entry><_gte:Font Weight="bold"
>GEOGRAPHIC<_dtd:_newline/>LOCATION</_gte:Font></_dtd:entry></_dtd:row
></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_EDI_Title_Repeat" style="title">
<Context priority="10.005"
selector="_ufe:IPD_FunctionalItemRefs//_ufe:IPD_EDI_Title_Repeat">
<BaseProperties propertySetReferences="bold Centred_Heading">
<Breaks blockOrInline="block"/>
<GeneratedText>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A387abc5d-f7bc-4b8c-a0b1-d3992352542e"><_gte:Target
lang="en"><_gte:Font Weight="bold" Posture="upright" SmallCap="no"
>Equipment Designator Index</_gte:Font></_gte:Target></_gte:Translate
></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10"
selector="_ufe:IPD_EDI_Generator//_ufe:IPD_EDI_Title_Repeat">
<BaseProperties propertySetReferences="bold Centred_Heading">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2d34371b-7e84-49a4-91ce-318869699a71"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A1a360b28-6379-4126-8451-30dc79b1fe8c"><_gte:Target
lang="en"><_gte:Font Weight="bold" Posture="upright" SmallCap="no"
>Equipment Designator Index</_gte:Font></_gte:Target></_gte:Translate
></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:IPD_EDI_Title_Repeat">
<BaseProperties propertySetReferences="bold Centred_Heading">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_Effectivity" style="inline">
<Context priority="0" selector="_ufe:IPD_Effectivity">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/applicabilitySegment/usableOnCodeAssy"/>
</Tests>
<BaseProperties>
<Indent leftIndent="16pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6b1050f1-68d2-4ec7-acdf-7c88fbc91294"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly"
xpath="ancestor::itemSeqNumber/applicabilitySegment/usableOnCodeAssy"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/applicabilitySegment/usableOnCodeEquip"/>
</Tests>
<BaseProperties>
<Indent leftIndent="16pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A84d2fabc-6c22-46ee-8dc6-554d56f1c4c0"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly"
xpath="ancestor::itemSeqNumber/applicabilitySegment/usableOnCodeEquip"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_FigureNumber" style="inline">
<Context
comment='Called from catalogSeqNumber to output the Figure Number Variant (pulled from the CSN attribute "figureNumberVariant")'
priority="0" selector="_ufe:IPD_FigureNumber">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8290e2d3-91fb-46b1-94ce-898c29049d4b"><_gte:Target lang="en"
><_gte:ElementLabelAndNumber display="S"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="A"
stringXPath="ancestor::figure/following-sibling::catalogSeqNumber/@figureNumberVariant"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A6fcc83bb-4571-4a20-a5e4-eade44a2ed42"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
comment="For some reason the first catalogSeqNumber was not picking up the setting of the figureNumberVariant attribute properly,
so we need to set it explicitly with this UFE source edit."
name="_ufe:IPD_FigureNumberVariant" style="inline">
<Context priority="0" selector="_ufe:IPD_FigureNumberVariant">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_FigureNumberVariant

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

var variantNum = formatting.evaluateXPath("count(ancestor::dmContent[1]/preceding-sibling::dmContent[dmodule/content/illustratedPartsCatalog/figure])");
//template.debugToFile("figureNumber: " + figureNumber + "variantNum: " + variantNum);

if (variantNum && variantNum > 0) {
	var variantAlpha = calculateAlphaVariant(variantNum);
  //template.debugToFile("variantAlpha: " + variantAlpha);
  formatting.output(variantAlpha);
}


// Calculate the alpha variant letter, skipping "I" and "0"
// Max "ZZ" (600th variant)
function calculateAlphaVariant(variantNumber) {
	
  var lookup = "ABCDEFGHJKLMNPQRSTUVWXYZ";
  var len = lookup.length;
  
  if (Math.floor(variantNumber) <= 0) {
  	return "";
  }
  
  var secondDigit = Math.floor((variantNumber - 1) / len);
  if (secondDigit > len) {
    return "TOOBIG";
  }
  
  var result = "";
  if (secondDigit > 0) {
    result = lookup.charAt(secondDigit - 1);
  }
  
  result = result + lookup.charAt((variantNumber - 1) % len);
  return result;
}



var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_FigureNumberVariant

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_FunctionalItemRefs" style="block">
<Context
comment="EDI table generation.
NOTE: Now not used: instead uses generic part data via the IPD_EDI_Generator UFE, but keep this one for future reference.
UPDATE: Now used when there are functionalItemRefs in the document"
priority="0" selector="_ufe:IPD_FunctionalItemRefs">
<BaseProperties>
<Breaks blockOrInline="block" spanInto="2"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4b13c5a1-e882-48b9-a366-b067c4681fbf"><_gte:Target lang="en"
><_ufe:IPD_EDI_Title_Repeat></_ufe:IPD_EDI_Title_Repeat><_ufe:CentredHeading
><_gte:Font Posture="upright" SmallCap="no">EQUIPMENT DESIGNATOR</_gte:Font
></_ufe:CentredHeading><_dtd:table><_dtd:tgroup cols="2"><_dtd:colspec
colname="col1"/><_dtd:colspec colname="col2"/><_dtd:tbody><_dtd:row
><_dtd:entry><_gte:Font Weight="bold">ITEM</_gte:Font></_dtd:entry
><_dtd:entry><_gte:Font Weight="bold">INSTALLATION IDENT</_gte:Font
></_dtd:entry></_dtd:row><_dtd:row><_dtd:entry><_gte:XPathString
expr="//illustratedPartsCatalog//functionalItemRef/@functionalItemNumber"
/></_dtd:entry><_dtd:entry><_gte:XPathString
expr="//illustratedPartsCatalog//functionalItemRef/@installationIdent"
/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_FunctionalItemRefs

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;

// break block in two columns
block.spanFrame = 0;
block.balanceBefore = 0;
block.spanParents = 0;
block.numColumns = 2;

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   
   var stream = template.content.getStream('stylesheet0:Element:_ufe:IPD_FunctionalItemRefs:_ufeIPD_FunctionalItemRefsC837:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:IPD_FunctionalItemRefs:_ufeIPD_FunctionalItemRefsC837:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A4b13c5a1-e882-48b9-a366-b067c4681fbf\"><_gte:Target lang=\"en\"><_ufe:IPD_EDI_TableHeader/>" );
		  
      //stream.write("<table frame=\"top\"><tgroup cols=\"4\"><colspec colname=\"col1\"/><colspec colname=\"col2\" colwidth=\"0.47*\"/><colspec colname=\"col3\" colwidth=\"0.47*\"/><colspec colname=\"col4\"/>" );
      //stream.write( "<thead><row><entry colsep=\"0\" rowsep=\"1\">EQUIPMENT<_dtd:_newline/>DESIGNATOR</entry><entry nameend=\"col3\" namest=\"col2\" align=\"center\" colsep=\"0\" rowsep=\"1\">FIG.<_dtd:_newline/>ITEM</entry><entry colsep=\"0\" rowsep=\"1\" align=\"left\">GEOGRAPHIC<_dtd:_newline/>LOCATION</entry></row></thead><tbody>");

      // Debugging: output current time to compare the time it takes to generate the NI compared with the old version
      //stream.write("<row><entry>FI: " + new Date() + "</entry><entry/><entry/><entry/></row>");
	  
      var parts = new Array();

	  // The functionalItemRef element can sometimes occur in other places, but for the EDI we're only using the ones under
	  // catalogSeqNumber.
      var nodeList = formatting.currentXMLNode.evaluateXPath("/pm/content/pmEntry[@pmEntryType='pmt75']//catalogSeqNumber//functionalItemRef");
      var numRows = 0; 

      if (nodeList && nodeList.nodeListValue) {
         numRows = nodeList.nodeListValue.length;

         for (var i = 0; i < numRows; i++) {

           var firNode = nodeList.nodeListValue.item(i);
           var catalogSeqNumberNode = firNode.parentNode;
		   var itemSeqNumberNode = null; // itemSeqNumberNode will be set only if the functionalItemRef is within the referTo element, checked below

           // Now functionalItemRefs can be in referTo as well as catalogSeqNumber; the catalogSeqNumber is three nodes back
           // (catalogSeqNumber/itemSeqNumber/partLocationSegment/referTo)
           if (catalogSeqNumberNode.nodeName == "referTo") {
			 itemSeqNumberNode = catalogSeqNumberNode.parentNode.parentNode;
             catalogSeqNumberNode = itemSeqNumberNode.parentNode;
           }

           var functionalItem = firNode.getAttribute("functionalItemNumber");
           var figureNumber = catalogSeqNumberNode.getAttribute("figureNumberTemp");
           var figureNumberVariant = catalogSeqNumberNode.getAttribute("figureNumberVariantTemp");
           var item = catalogSeqNumberNode.getAttribute("item");
           var fctInstallation = firNode.getAttribute("installationIdent");

           // This gets rid of leading zeroes (need to specify base 10 so numbers with leading zeroes aren't interpreted as octal numbers):
           var itemNumberVal = parseInt(item, 10);

		   if (itemSeqNumberNode) {
			   // Add not illustrated marker if applicable (a dash)
			   var notIllustratedNodeList = itemSeqNumberNode.getElementsByTagName("notIllustrated");
			   if (notIllustratedNodeList && notIllustratedNodeList.length > 0) {
				 itemNumberVal = "-" + itemNumberVal;
			   }
			   else {
				 // Add a space for alignment purposes
				 itemNumberVal = "&#160;" + itemNumberVal;
			   }
		   }
		   
           var itemSeqNumberValue = null;
		   
		   if (itemSeqNumberNode) {
			   itemSeqNumberValue = itemSeqNumberNode.getAttribute("itemSeqNumberValue");
		   }
		   
           // Add letter from itemSeqNumber if applicable
           if (itemSeqNumberValue && itemSeqNumberValue != "00") {
             itemNumberVal = itemNumberVal + itemSeqNumberValue.charAt(itemSeqNumberValue.length - 1);
           }

           parts[i]=[functionalItem, parseInt(figureNumber, 10), figureNumberVariant, itemNumberVal, fctInstallation];
         }
	  }

(function() {
  // Regular expression to separate the digit string from the non-digit strings.
  var reParts = /\d+|\D+/g;
 
  // Regular expression to test if the string has a digit.
  var reDigit = /\d/;
 
  // Add cmpStringsWithNumbers to the global namespace.  This function takes to
  // strings and compares them, returning -1 if `a` comes before `b`, 0 if `a`
  // and `b` are equal, and 1 if `a` comes after `b`.
  cmpStringsWithNumbers = function(a, b) {
    // Get rid of casing issues.
    a = a.toUpperCase();
    b = b.toUpperCase();
 
    // Separates the strings into substrings that have only digits and those
    // that have no digits.
    var aParts = a.match(reParts);
    var bParts = b.match(reParts);
 
    // Used to determine if aPart and bPart are digits.
    var isDigitPart;
 
    // If `a` and `b` are strings with substring parts that match...
    if(aParts && bParts &&
        (isDigitPart = reDigit.test(aParts[0])) == reDigit.test(bParts[0])) {
      // Loop through each substring part to compare the overall strings.
      var len = Math.min(aParts.length, bParts.length);
      for(var i = 0; i < len; i++) {
        var aPart = aParts[i];
        var bPart = bParts[i];
 
        // If comparing digits, convert them to numbers (assuming base 10).
        if(isDigitPart) {
          aPart = parseInt(aPart, 10);
          bPart = parseInt(bPart, 10);
        }
 
        // If the substrings aren't equal, return either -1 or 1.
        if(aPart != bPart) {
          return aPart < bPart ? -1 : 1;
        }
 
        // Toggle the value of isDigitPart since the parts will alternate.
        isDigitPart = !isDigitPart;
      }
    }
 
    // Use normal comparison.
    return (a >= b) - (a <= b);
  };
})();      

      //sort by figureNumber + figureNumberVariant and functionalItemNumber
      var sortEquipDesign = function(a,b){
         var left = a[1] + a[2];
         var right = b[1] + b[2];
        if(left != right){
           return cmpStringsWithNumbers(left, right);
        }
        return cmpStringsWithNumbers(a[0], b[0]);
      };

      parts.sort(sortEquipDesign);

      /* Old version: simple output
      for(var i = 0; i < numRows; i++){
        stream.write( "<row rowsep=\"0\"><entry colsep=\"0\">"+parts[i][0]+"</entry><entry colsep=\"0\" align=\"right\">"+parts[i][1]+parts[i][2]+"</entry><entry colsep=\"0\">"+parts[i][3]+"</entry><entry colsep=\"0\">"+parts[i][4]+"</entry></row>");
      }*/

      var entriesPerTable = 19968; //128; //49984; // multiple of 64 entries per page, but 60 on the first page (hopefully it's always consistent)
      var chunkStart = 0;

      // firstPageRows: how many rows to output per column on the first page
      var firstPageRows = 30;

      // See how many full table "chunks" to output (since we're breaking the whole table into
      // smaller pieces). Subtract the number of rows output on the first page, which are output
      // separately below.
      var tableChunks = Math.floor((numRows - (firstPageRows * 2)) / entriesPerTable);

      // If there are fewer rows than will fill the first page, 
      var halfRows = Math.ceil(numRows / 2);
      if (halfRows < firstPageRows) {
        firstPageRows = halfRows;
      }

      template.debugToFile("numRows: " + numRows + "; tableChunks: " + tableChunks + "; firstPageRows: " + firstPageRows);

      // Output first two tables on the first page (two columns, 30 each)
      for (var columnNo = 1; columnNo <= 2; columnNo++) {

        // Output table top
        if (columnNo == 2) {
          stream.write("<_ufe:NewColumn>");
        }

        stream.write("<table frame=\"none\"><tgroup cols=\"4\"><colspec colname=\"col1\"/><colspec colname=\"col2\" colwidth=\"0.47*\"/><colspec colname=\"col3\" colwidth=\"0.47*\"/><colspec colname=\"col4\"/>" );
        stream.write( "<tbody>");

        var ctr;
        for (var ctr = chunkStart; ctr < firstPageRows + chunkStart && ctr < numRows; ctr++){
          stream.write( "<row rowsep=\"0\"><entry colsep=\"0\">"+parts[ctr][0]+"</entry><entry colsep=\"0\" align=\"right\">"+parts[ctr][1]+parts[ctr][2]+"</entry><entry colsep=\"0\">"+parts[ctr][3]+"</entry><entry colsep=\"0\">"+parts[ctr][4]+"</entry></row>");
        }

        // Output table bottom
        stream.write("</tbody></tgroup></table>" );

        //stream.write("<?Pub _newcolumn?>");

        if (columnNo == 2) {
          stream.write("</_ufe:NewColumn>");
        }

        if (ctr == numRows) {
          chunkStart = numRows;
        }
        else {
        	 chunkStart += firstPageRows;
        }
      }

       var needPageSetEnd = false;
       // Start new EDI page set (wrapping) if there are more rows to output
       if (chunkStart < numRows) {
         stream.write("<_ufe:IPD_EDI_PageSet>");
         needPageSetEnd = true;
       }

      template.debugToFile("numRows: " + numRows + "; tableChunks: " + tableChunks + "; chunkStart: " + chunkStart + "; entriesPerTable: " + entriesPerTable );

		  // Output the table chunks
      for (var chunk = 1; chunk <= tableChunks; chunk++) {

        // Output table top
        stream.write("<table frame=\"none\"><tgroup cols=\"4\"><colspec colname=\"col1\"/><colspec colname=\"col2\" colwidth=\"0.47*\"/><colspec colname=\"col3\" colwidth=\"0.47*\"/><colspec colname=\"col4\"/><tbody>" );

			 var entriesInThisTable = entriesPerTable;
        //if (chunk == 1) { // First table has four less (due to smaller first page)
        //  entriesInThisTable -= 4;
        //}

        for (var i = chunkStart; i < chunkStart + entriesInThisTable; i++){
          stream.write( "<row rowsep=\"0\"><entry colsep=\"0\">"+parts[i][0]+"</entry><entry colsep=\"0\" align=\"right\">"+parts[i][1]+parts[i][2]+"</entry><entry colsep=\"0\">"+parts[i][3]+"</entry><entry colsep=\"0\">"+parts[i][4]+"</entry></row>");
        }
        chunkStart += entriesInThisTable;

        // Output table bottom
        stream.write("</tbody></tgroup></table>" );

      }

      template.debugToFile("numRows: " + numRows + "; chunkStart: " + chunkStart );

      if (chunkStart < numRows) {

        // Output the last entries (smaller than a full table "chunk")
        // Output table top
        stream.write("<table frame=\"none\"><tgroup cols=\"4\"><colspec colname=\"col1\"/><colspec colname=\"col2\" colwidth=\"0.47*\"/><colspec colname=\"col3\" colwidth=\"0.47*\"/><colspec colname=\"col4\"/><tbody>" );

        for (var i = chunkStart; i < numRows; i++){
          stream.write( "<row rowsep=\"0\"><entry colsep=\"0\">"+parts[i][0]+"</entry><entry colsep=\"0\" align=\"right\">"+parts[i][1]+parts[i][2]+"</entry><entry colsep=\"0\">"+parts[i][3]+"</entry><entry colsep=\"0\">"+parts[i][4]+"</entry></row>");
        }

        stream.write( "</tbody></tgroup></table>" );
      }

      template.debugToFile("needPageSetEnd: " + needPageSetEnd);

      if (needPageSetEnd) {
        stream.write("</_ufe:IPD_EDI_PageSet>");
      }

      // Debugging: output current time to compare the time it takes to generate the NI compared with the old version
      //stream.write("<row><entry>" + new Date() + "</entry><entry/><entry/><entry/></row>");
	  
      stream.write("</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.columns[0].horizontalAlign = fBlock.ALIGN_RIGHT;
      block.columns[0].gutter='0pc';
      block.columns[1].horizontalAlign = fBlock.ALIGN_LEFT;
      block.columns[1].gutter='0pc';
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_FunctionalItemRefs

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_FunctionalItemRefsTitle" style="block">
<Context priority="0" selector="_ufe:IPD_FunctionalItemRefsTitle">
<BaseProperties>
<Font size="14pt" weight="bold"/>
<SpaceBefore optimum="10pt"/>
<SpaceAfter optimum="11pt" precedence="force"/>
<Breaks blockOrInline="block"/>
<Keep withNext="7"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A2071bcad-7168-4543-b378-949a222fc79e"><_gte:Target lang="en"
>Equipment Designator Index </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_GenericPartData" style="block">
<Context priority="0" selector="_ufe:IPD_GenericPartData">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="Output the 'rd' and 'rdi' entries first, then the others
UPDATE: Now output all entries so they will be in order. The rd and rdi entries will be hidden and only output from where
the first one occurs.">
<Tests>
<XPathTest expression="ancestor::itemSeqNumber/genericPartDataGroup"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:ElementContent
include="elementAndContent"
xpath="ancestor::itemSeqNumber/genericPartDataGroup/genericPartData"
/></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element
comment='Genericf part data with name "dd" is output first before everything else'
name="_ufe:IPD_GenericPartDataDD" style="block">
<Context priority="0" selector="_ufe:IPD_GenericPartDataDD">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="Output only entries that have the name 'delete' (for deleted items only)">
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/genericPartDataGroup and ancestor::itemSeqNumber/genericPartDataGroup/genericPartData[@genericPartDataName='dd']"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A07f1ae45-6ab5-43b0-9bf5-03c7faf305c9"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="ancestor::itemSeqNumber/genericPartDataGroup/genericPartData[@genericPartDataName='dd']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_GenericPartDataForDelete" style="block">
<Context priority="0" selector="_ufe:IPD_GenericPartDataForDelete">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="Output only entries that have the name 'delete' (for deleted items only)">
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/genericPartDataGroup and ancestor::itemSeqNumber/genericPartDataGroup/genericPartData[@genericPartDataName='delete']"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0680ae3a-2573-4fb8-b05d-b0d124743f0f"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="ancestor::itemSeqNumber/genericPartDataGroup/genericPartData[@genericPartDataName='delete']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_GenericPartDataRD" style="block">
<Context
comment="Output all the genericPartData entries with 'rd' or 'rdi'.

UPDATE: Now output all the rd/rdi entries directly, sorted and grouped (e.g., &#x22;C9 thru C17&#x22;)"
priority="0" selector="_ufe:IPD_GenericPartDataRD">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_GenericPartDataRD

formatting.fishSave( template.stylerFish );
var contextProp = {};
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "_ufeIPD_GenericPartDataRD_everywhere5DCF";
contextProp.pdfTag = 'P';
contextProp.pdfAttrs = {};


var entries = new Array();

// Now, if there are functionItemRefs, prefer to use those over genericPartData (rd/rdi)
var numEntries = formatting.evaluateXPath("count(ancestor::itemSeqNumber/partLocationSegment/referTo/functionalItemRef)");
if (numEntries > 0) {
  for (var i = 1; i <= numEntries; i++) {
	  var entry = formatting.evaluateXPath("ancestor::itemSeqNumber/partLocationSegment/referTo/functionalItemRef[" + i + "]/@functionalItemNumber");
    entries.push(entry);
  }
}
else { // use genericPartData (rd/rdi)

  // Collect all the rd/rdi values in an array to sort and then group on output

  numEntries = formatting.evaluateXPath("count(ancestor::itemSeqNumber/genericPartDataGroup/genericPartData[@genericPartDataName='rd' or @genericPartDataName='rdi'])");

  for (var i = 1; i <= numEntries; i++) {
	  var entry = formatting.evaluateXPath("ancestor::itemSeqNumber/genericPartDataGroup/genericPartData[@genericPartDataName='rd' or @genericPartDataName='rdi'][" + i + "]/genericPartDataValue");
    entries.push(entry);
  }
}


// Return a two entry array with the alpha part first, and then the numeral.
// So "CR15" returns ["CR", 15]
// Update: Now we have cases like "A1A2" or "AA2AA33", so return the prefix followed by the number,
// like ["AA2AA", 33]
function findAlphanum(str) {

	var pos = str.length - 1;
	var len = str.length;

	var zeroCode = "0".charCodeAt(0);
	var nineCode = "9".charCodeAt(0);
	
	// loop till we find a number (or end of string)
	// Now search backwards for the first letter
	while (true) {
		if (pos == -1) {
			break;
		}
		// If the current character is a number, stop
		if (str.charAt(pos) >= "A" && str.charAt(pos) <= "Z") {
			break;
		}
		pos--;
	}

	//formatting.output(pos + ":");
	pos++;
	// "pos" is that start of the numeric part: return the alpha part (up to "pos") and numeric part (starting at "pos")
	return [str.substring(0, pos), (pos < len) ? parseInt(str.substring(pos)) : 0];
}


// Sort the array by numeric prefix then number ("C19": "C" is the prefix, 19 is the number)
// Can also have multi-character prefixes, like "CR15".
var sortFunction = function(a, b) { 

	// find the alpha and numeric parts
	var alphanumA = findAlphanum(a);
	var alphanumB = findAlphanum(b);

	// If the alpha part is the same, return the comparison of the numeric part
	if (alphanumA[0] == alphanumB[0]) {
		if (alphanumA[1] == alphanumB[1]) {
			return 0;
		}
		else {
			return (alphanumA[1] > alphanumB[1]) ? 1 : -1;
		}
	}
	// Otherwise, return the comparison of the alpha parts
	return a.localeCompare(alphanumA[0], alphanumB[0]);
};

entries.sort(sortFunction);

// Returns true if the second parameter is next in sequence after the first (e.g., "C12", "C13")
function followingIsSequence(a, b) {

	// find the alpha and numeric parts
	var alphanumA = findAlphanum(a);
	var alphanumB = findAlphanum(b);

	//formatting.output(alphanumA, alphanumB);

	// If they don't have the same alpha part, they are not a sequence
	if (alphanumA[0] != alphanumB[0]) {
		return false;
	}
	
	// If they have the same alpha part, they are a sequence if the second numeric part is one more than the first
	return (alphanumB[1] == alphanumA[1] + 1);
}

function findSequence(entries, pos) {

	var numSequence = 1;
	var len = entries.length;

	while (pos < len - 1) {

		if (followingIsSequence(entries[pos], entries[pos + 1])) {
			numSequence++;
			pos++;
		}
		else {
			break;
		}
	}
	return (numSequence > 2) ? numSequence : -1;
}

for (var i = 0; i < numEntries; i++) {
	// Find sequence of at least three from this position
	var numSequence = findSequence(entries, i);

	if (numSequence > 0) { // really will be at least three
		formatting.output(entries[i] + " thru " + entries[i + numSequence -1]);
		if (i + numSequence != numEntries) {
			formatting.output(", ");
		}

		i += numSequence - 1;
	}
	else {
		if ( i == numEntries -1 ) {
			formatting.output(entries[i]);
		}
		else {
			formatting.output(entries[i] + ", ");
		}
	}
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_GenericPartDataRD

template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "_ufeIPD_GenericPartDataRD_everywhere5DCF", false, false );
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_GenericPartDataRDBlock" style="block">
<Context priority="0" selector="_ufe:IPD_GenericPartDataRDBlock">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="Prefer functionalItemRef version (in referTo) if they exist.">
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/partLocationSegment/referTo/functionalItemRef"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6279e6d5-34cb-4fd1-b037-d9e5a7c0b407"><_gte:Target lang="en"
><_ufe:IPD_GenericPartDataRD></_ufe:IPD_GenericPartDataRD></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition comment="Output only the rd/rdi items only if they exist"
conditionType="elseIf">
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/genericPartDataGroup and (ancestor::itemSeqNumber/genericPartDataGroup/genericPartData[@genericPartDataName='rd'] or ancestor::itemSeqNumber/genericPartDataGroup/genericPartData[@genericPartDataName='rdi'])"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af408c024-1350-40e4-83ba-9039f4b2ed6e"><_gte:Target lang="en"
><_ufe:IPD_GenericPartDataRD></_ufe:IPD_GenericPartDataRD></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_Indenture" style="inline">
<Context priority="0" selector="_ufe:IPD_Indenture">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="ancestor::catalogSeqNumber/itemSeqNumber/partLocationSegment/attachStoreShipPart/@attachStoreShipPartCode='1'"/>
</Tests>
<BaseProperties></BaseProperties>
</Condition>
<Condition conditionType="if">
<Tests>
<XPathTest expression="ancestor::catalogSeqNumber[1]/@indenture='2'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A061ed31f-a7c5-491e-9222-f4c84bac98f2"><_gte:Target lang="en"
>.</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::catalogSeqNumber[1]/@indenture='3'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae16f714f-dda6-4483-9645-d09d80d135b4"><_gte:Target lang="en"
>..</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::catalogSeqNumber[1]/@indenture='4'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A010d07d9-8258-415d-a970-b292a2503ad2"><_gte:Target lang="en"
>...</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::catalogSeqNumber[1]/@indenture='5'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa7dfe76c-fe2b-46c0-b8cd-ab684ba52715"><_gte:Target lang="en"
>....</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::catalogSeqNumber[1]/@indenture='6'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A030e1fb6-6b1d-47fd-9741-a02e4d733bab"><_gte:Target lang="en"
>.....</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::catalogSeqNumber[1]/@indenture='7'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac345f63b-ced5-457a-a500-0cf70c3e400e"><_gte:Target lang="en"
>......</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::catalogSeqNumber[1]/@indenture='8'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af1669e2f-41a4-4be0-9041-d6aa126a4aaa"><_gte:Target lang="en"
>........</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_ItemSeqNumberValue" style="inline">
<Context priority="0" selector="_ufe:IPD_ItemSeqNumberValue">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/@itemSeqNumberValue != '00'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A660813cd-cc49-480d-a5e1-a2117e438c0e"><_gte:Target lang="en"
><_gte:XPathString
expr="substring(ancestor::itemSeqNumber/@itemSeqNumberValue, string-length(ancestor::itemSeqNumber/@itemSeqNumberValue))"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_ListWrapper" style="block">
<Context priority="0" selector="_ufe:IPD_ListWrapper">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="IPD_List_Page_Set"
startNew="oddPage"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af0372c24-2fd7-40f7-9c55-eb5598cd1c06"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties>
<Breaks newPageSet="IPD_List_Page_Set_ACMM" startNew="oddPage"/>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_ListWrapper

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "_ufeIPD_ListWrapper_everywhereACE8";
contextProp.pageNumber = 0;
contextProp.pdfTag = 'P';
contextProp.pdfAttrs = {};

// Base properties
contextProp.pageType = 2;
contextProp.pageSet = 'IPD_List_Page_Set';
if ( currentNode.getUserString( '_temp_hasAfter_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:_ufe:IPD_ListWrapper:_ufeIPD_ListWrapper_everywhereACE8:addAfter');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:_ufe:IPD_ListWrapper:_ufeIPD_ListWrapper_everywhereACE8:addAfter', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Af0372c24-2fd7-40f7-9c55-eb5598cd1c06\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentAfter( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasAfter_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


if ( formatting.evaluateXPath( " boolean( /pm/@type='acmm' )", 130, template.primaryStream ) != 0 )
{

  // Base properties
  contextProp.startNew = 2; // start new page
  contextProp.pageType = 2;
  contextProp.pageSet = 'IPD_List_Page_Set_ACMM';

}
var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.startPageSet( block, contextProp, 0 );
if ( block.numColumns > 1 ) {
  template.content.functions._app.configureColumns( block );
}

template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_ListWrapper

template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "_ufeIPD_ListWrapper_everywhereACE8", false, false );

// SOURCE EDIT: Don't end the page set if it is the last one in the IPD, to avoid adding
// an extra page at the end of the document.

//template.content.functions._app.endPageSet();

var endPageSet = true;
//if ( formatting.evaluateXPath( " boolean( /pm/@type='acmm' )", 130, template.primaryStream ) != 0 )
//{
  if ( formatting.evaluateXPath( " boolean( count(ancestor::pmEntry[1]/following-sibling::pmEntry)=0 and count(ancestor::dmContent/following-sibling::dmContent)=0 )", 130, template.primaryStream ) != 0 )
  {
		endPageSet = false;
  }
//}

if (endPageSet) {
	template.content.functions._app.endPageSet();
}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_MfrCode" style="block">
<Context priority="0" selector="_ufe:IPD_MfrCode">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="placeholder"/></Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A56e40c96-b131-4a07-b0e7-1d04acfaffa4"><_gte:Target lang="en"
><_ufe:IPD_MfrCodeText></_ufe:IPD_MfrCodeText></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_MfrCode

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "_ufeIPD_MfrCode_everywhere0D2B";
contextProp.pdfTag = 'P';
contextProp.pdfAttrs = {};

fish[ 'gentextResolved' ] = 0; // Allows conditions to overwrite gentext

// SOURCE EDIT: Only output Manufacturer CAGE code if not the same as the pmIssuer:

var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

var pmIssuer = formatting.evaluateXPath("/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer");

//var manufacturerCodeValue = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/procurementData/enterpriseRef/@manufacturerCodeValue");

var hasPartRepository = formatting.evaluateXPath("boolean(count(/pm/commonRepository/partRepository/partSpec)>0)");

var manufacturerCodeValue;
if (hasPartRepository == "0") {
	manufacturerCodeValue = mfrCode;
}
else {
	manufacturerCodeValue = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/procurementData/enterpriseRef/@manufacturerCodeValue");
}



if (manufacturerCodeValue != pmIssuer)
{
  // Base properties
  block.indentStart = template.sizeDefinitions[ 'IPL_Nomenclature_Indent' ];
  block.absoluteStart = 2;
  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:_ufe:IPD_MfrCode:_ufeIPD_MfrCode_everywhere0D2B:addBefore_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:IPD_MfrCode:_ufeIPD_MfrCode_everywhere0D2B:addBefore_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A56e40c96-b131-4a07-b0e7-1d04acfaffa4\"><_gte:Target lang=\"en\"><_ufe:IPD_MfrCodeText></_ufe:IPD_MfrCodeText></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText>" );
      stream.write( "</_app:Gentext>" );
    }

    currentNode.augmentBefore( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' ) {
    currentNode.augmentAfter( null );
    currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
  }

}
var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_MfrCode

template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "_ufeIPD_MfrCode_everywhere0D2B", false, false );
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_MfrCodeText" style="inline">
<Context priority="0" selector="_ufe:IPD_MfrCodeText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_MfrCodeText


var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

var hasPartRepository = formatting.evaluateXPath("boolean(count(/pm/commonRepository/partRepository/partSpec)>0)");

if (hasPartRepository == "0") {
	var manufacturerCodeValue = mfrCode;

	if (manufacturerCodeValue) {
		formatting.output(addParens(manufacturerCodeValue));
	}
	else {
		//formatting.output("<?tic=r>manufacturerCodeValue not found for " + mfrCode + "/" + partNo + "<?tic>");
		// Not enough room for all those details...
		formatting.output("<?tic=r>mfrCode not found in partRef<?tic>");
	}
}
else {
	var manufacturerCodeValue = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/procurementData/enterpriseRef/@manufacturerCodeValue");

	if (manufacturerCodeValue) {
		formatting.output(addParens(manufacturerCodeValue));
	}
	else {
		//formatting.output("<?tic=r>manufacturerCodeValue not found for " + mfrCode + "/" + partNo + "<?tic>");
		// Not enough room for all those details...
		formatting.output("<?tic=r>ERROR finding mfrCode in parts repository (procurementData)<?tic>");
	}
}

// Add parens and a "V" prefix if the mfr code doesn't already have them
function addParens(code) {
	var codeOnly = code.replace(/\(?V?([0-9A-Z]*)\)?/,'$1');
	return "(V" + codeOnly + ")";
}

// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_MfrCodeText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_NumericalIndex" style="block">
<Context priority="0" selector="_ufe:IPD_NumericalIndex">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A33dce2cd-0a91-4bba-b357-9676865797e2"><_gte:Target lang="en"
><_ufe:IPD_NumericalIndex_Title_Repeat></_ufe:IPD_NumericalIndex_Title_Repeat
><_gte:Font Weight="bold" Posture="upright" SmallCap="no"
TypeSize="14pt">Numerical Index</_gte:Font><_dtd:table frame="topbot"
><_dtd:tgroup cols="5"><?PubTbl tgroup cbmarg="2.00pt" clmarg="2.00pt"
crmarg="2.00pt"
ctmarg="2.00pt"?><_dtd:colspec colname="col1" colwidth="2.51in"
colsep="0"/><_dtd:colspec colname="col2" colwidth="5.02*" colsep="0"
/><_dtd:colspec colname="col3" colwidth="0.25in" colsep="0"/><_dtd:colspec
colname="col4" colwidth="0.75in" colsep="0"/><_dtd:colspec
colname="col5" colwidth="0.75in"/><_dtd:thead><_dtd:row rowsep="0"
><_dtd:entry rowsep="1"><_ufe:NumericalIndexTableHeader>PART NUMBER</_ufe:NumericalIndexTableHeader
></_dtd:entry><_dtd:entry rowsep="1"><_ufe:NumericalIndexTableHeader
>AIRLINE<_dtd:_newline/>PART NO.</_ufe:NumericalIndexTableHeader></_dtd:entry
><_dtd:entry nameend="col4" namest="col3" rowsep="1"><_ufe:NumericalIndexTableHeader
><_gte:Leaders leaderType="space" lenType="specified" specLen="12.00pt"
/>FIG.<_dtd:_newline/><_gte:Leaders leaderType="space"
lenType="specified" specLen="12.00pt"/>ITEM</_ufe:NumericalIndexTableHeader
></_dtd:entry><_dtd:entry rowsep="1"><_ufe:NumericalIndexTableHeader
>TTL<_dtd:_newline/>REQ</_ufe:NumericalIndexTableHeader></_dtd:entry
></_dtd:row></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry
>AT283-14</_dtd:entry><_dtd:entry></_dtd:entry><_dtd:entry align="right"
>3</_dtd:entry><_dtd:entry>-170A</_dtd:entry><_dtd:entry>1</_dtd:entry
></_dtd:row><_dtd:row><_dtd:entry></_dtd:entry><_dtd:entry></_dtd:entry
><_dtd:entry></_dtd:entry><_dtd:entry>-350A</_dtd:entry><_dtd:entry
>1</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_NumericalIndex

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:IPD_NumericalIndex:_ufeIPD_NumericalIndex_everywhere_else0C2C:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:IPD_NumericalIndex:_ufeIPD_NumericalIndex_everywhere_else0C2C:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A33dce2cd-0a91-4bba-b357-9676865797e2\"><_gte:Target lang=\"en\"><_ufe:IPD_NumericalIndex_Title_Repeat/><_gte:Font TypeSize=\"14pt\" Posture=\"upright\" Weight=\"bold\">Numerical Index</_gte:Font>" );
      stream.write( "<table frame=\"top\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"2.00pt\" clmarg=\"2.00pt\" crmarg=\"2.00pt\"\nctmarg=\"2.00pt\"?><colspec colname=\"col1\" colwidth=\"1.5in\" colsep=\"0\"/><colspec colname=\"col1B\" colwidth=\"1.75in\" colsep=\"0\"/><colspec colname=\"col2\" colwidth=\"5.02*\" colsep=\"0\"/>" );
      stream.write( "<colspec colname=\"col3\" colwidth=\"0.45in\" colsep=\"0\"/><colspec colname=\"col4\" colwidth=\"0.75in\" colsep=\"0\"/><colspec colname=\"col5\" colwidth=\"0.75in\"/><thead><row rowsep=\"0\"><entry rowsep=\"1\" namest=\"col1\" nameend=\"col1B\"><_ufe:NumericalIndexTableHeader>" );
      stream.write( "PART NUMBER</_ufe:NumericalIndexTableHeader></entry><entry rowsep=\"1\"><_ufe:NumericalIndexTableHeader>AIRLINE<_newline/>PART NO.</_ufe:NumericalIndexTableHeader></entry><entry rowsep=\"1\" nameend=\"col4\" namest=\"col3\">" );
      stream.write( "<_ufe:NumericalIndexTableHeader><_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"23.00pt\"/>FIG.<_newline/><_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"23.00pt\"/>ITEM</_ufe:NumericalIndexTableHeader>" );
      stream.write( "</entry><entry rowsep=\"1\"><_ufe:NumericalIndexTableHeader>TTL<_newline/>REQ</_ufe:NumericalIndexTableHeader></entry></row></thead><tbody>");

      // Generate the Parts Numerical Index from the IPD entries using a script.

      // Debugging: output current time to compare the time it takes to generate the NI compared with the old version
      //stream.write("<row><entry>" + new Date() + "</entry><entry/><entry/><entry/><entry/><entry/></row>");

      //var xpathLocation = "/pm/content/pmEntry/dmContent/dmodule/content/illustratedPartsCatalog/catalogSeqNumber/itemSeqNumber";
      //var xpathLocation = "(//itemSeqNumber)";

      //var numRows = formatting.evaluateXPath("count(" + xpathLocation + ")");
	  
	  // Use to retrieve the text of a descendant element. Appropriate only when there is one descendant element
	  // with the specified name, and it contains only simple text (no nested content).
	  // Returns null if not found.
	  function getDescendantElementText(node, descendantName) {
		  
		   var nodeList = node.getElementsByTagName(descendantName);
		   if (!nodeList || nodeList.length == 0) {
			   return null;
		   }
		   var descendantNode = nodeList.item(0);
		   var textNode = descendantNode.firstChild;
		   if (!textNode) {
			   return null;
		   }
		   
		   return textNode.nodeValue;
	  }


      // First construct an array to store the information about each part
      // (including its order in document to find it again) and then we can sort it.
      var parts = new Array();

      var nodeList = formatting.currentXMLNode.evaluateXPath("/pm/content/pmEntry[@pmEntryType='pmt75']//itemSeqNumber");
      var numRows = 0; 
	  
      if (nodeList && nodeList.nodeListValue) {
         numRows = nodeList.nodeListValue.length;

         for (var i = 0; i < numRows; i++) {

           var itemSeqNumberNode = nodeList.nodeListValue.item(i);
           var catalogSeqNumberNode = itemSeqNumberNode.parentNode;
		   
		   var partRefNode = null;
           var partRefNodeList = itemSeqNumberNode.getElementsByTagName("partRef");
		   //if (partRefNodeList && partRefNodeList.nodeListValue) {
		   if (partRefNodeList) {
			   //partRefNode = partRefNodeList.nodeListValue.item(0);
			   partRefNode = partRefNodeList.item(0);
		   }
		   
		   var partNumber = "NOT FOUND";
		   var mfrCode = "NOT FOUND";
		   
		   if (partRefNode) {
			   partNumber = partRefNode.getAttribute("partNumberValue");
			   mfrCode = partRefNode.getAttribute("manufacturerCodeValue");
		   }
		   
		   var descrForPart = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNumber + "' ]/itemIdentData/descrForPart");

		   // Now if changeType='delete', change the descrForPart to "DELETED" (if it wasn't already)
		   var changeType = itemSeqNumberNode.getAttribute("changeType");
		   if (changeType == "delete") {
             descrForPart = "DELETED";
           }

		   var figureNumber = catalogSeqNumberNode.getAttribute("figureNumberTemp");
		   if (figureNumber.charAt(0) == '0') {
			   // Trim leading zeroes from the figure number
			   figureNumber = figureNumber.substring(1);
		   }
		   var figureNumberVariant = catalogSeqNumberNode.getAttribute("figureNumberVariantTemp");
		   if (figureNumberVariant) {
			   figureNumber = figureNumber + figureNumberVariant;
		   }

		   var itemNumber = catalogSeqNumberNode.getAttribute("trimmedItem");
		   var itemSeqNumber = itemSeqNumberNode.getAttribute("itemSeqNumberValue");
		   
		   while (itemSeqNumber.charAt(0) == '0') {
		      // Trim leading zeroes from the itemSeqNumber number
		      itemSeqNumber = itemSeqNumber.substring(1);
		   }
		   
		   itemNumber = itemNumber + itemSeqNumber;
		   

           var notIllustratedNodeList = itemSeqNumberNode.getElementsByTagName("notIllustrated");
		   
		   if (notIllustratedNodeList && notIllustratedNodeList.length > 0) {
			   itemNumber = "-" + itemNumber;
		   }
		   
		   var quantity = getDescendantElementText(itemSeqNumberNode, "quantityPerNextHigherAssy");
		   if (!quantity) {
			   quantity = "X"; // Use "X" as default so we notice if we can't retrieve the real quantity
		   }
		   
		   var genericPartDataNodeList = itemSeqNumberNode.getElementsByTagName("genericPartData");
		   
		   // If there are any csdCodes, add extra entries for them and use the code for the part number,
		   // and add pass the partNumber to be used in the second column.
		   for (var j = 0; j < genericPartDataNodeList.length; j++) {
			   var gpdNode = genericPartDataNodeList.item(j);
			   var name = gpdNode.getAttribute("genericPartDataName");
			   if (name == "csd") {
				   var csdCode = getDescendantElementText(gpdNode, "genericPartDataValue");
				   if (!csdCode) {
					   csdCode = "X"; // Use "X" as default so we notice if we can't retrieve the real value
				   }
				   
				   // Trim parens if applicable
				   csdCode = csdCode.replace(/^\((.*)\)$/,"$1");
				   parts.push([csdCode, figureNumber, itemNumber, quantity, i, descrForPart, partNumber]);
			   }
		   }
		   
		   // Add the regular part number (with null for the csd reference)
		   parts.push([partNumber, figureNumber, itemNumber, quantity, i, descrForPart, null]);
		   
		   // Also add extra entries for all genericPartData with the "opt" type
		   
		   for (var j = 0; j < genericPartDataNodeList.length; j++) {
			   var gpdNode = genericPartDataNodeList.item(j);
			   var name = gpdNode.getAttribute("genericPartDataName");
			   if (name == "opt") {
				   var optCode = getDescendantElementText(gpdNode, "genericPartDataValue");
				   if (!optCode) {
					   optCode = "X"; // Use "X" as default so we notice if we can't retrieve the real value
				   }
				   
				   parts.push([optCode, figureNumber, itemNumber, quantity, i, descrForPart, null]);
			   }
		   }
		 }
    }


      // Sort the array by part number, figure number, and item number
      var sortFunction = function(a,b) { 
      	//return a[0].toUpperCase().localeCompare(b[0].toUpperCase());

      	var zero = "0".charCodeAt(0);
      	var nine = "9".charCodeAt(0);
      	aIsNumeric = (a[0].charCodeAt(0) >= zero && a[0].charCodeAt(0) <= nine);
      	bIsNumeric = (b[0].charCodeAt(0) >= zero && b[0].charCodeAt(0) <= nine);

      	var result = 0;
       
       
       if (!aIsNumeric && bIsNumeric) {
      		return -1; // a sorts after (greater than b) cause numeric part numbers go last
      	}else if(aIsNumeric && !bIsNumeric){
      		return 1; // vice-versa
      	}else{
      	  result = a[0].localeCompare(b[0]); // regular sort may be faster than trying to convert to numbers and catching exceptions etc.
			}
      
      	if (result != 0) {
      		return result;
      	}

      	// Equal part numbers, so compare figure number next.

      	// Exception when one is deleted and one not: the deleted one sorts later
      	if (a[5] && a[5] == "DELETED" && (!b[5] || !(b[5] == "DELETED"))) {
      		return 1;
      	}
      	else if (b[5] && b[5] == "DELETED" && (!a[5] || !(a[5] == "DELETED"))) {
      		return -1;
      	}

      	// Exception if there is a csd code (index 6 of the array is a "SEE" reference)
		if (a[6] || b[6]) {
			if (a[6] && !b[6]) {
				return 1; // a is sorted later if it has a csd and b doesn't
			}
			else if (!a[6] && b[6]) {
				return -1;
			}
			// Both have csd, so compare the "SEE" references (same as part numbers)
			aIsNumeric = (a[6].charCodeAt(0) >= zero && a[6].charCodeAt(0) <= nine);
			bIsNumeric = (b[6].charCodeAt(0) >= zero && b[6].charCodeAt(0) <= nine);
			
			if (!aIsNumeric && bIsNumeric) {
				return -1; // a sorts after (greater than b) cause numeric part numbers go last
			}
			else if(aIsNumeric && !bIsNumeric){
				return 1; // vice-versa
			}
			else {
				result = a[6].localeCompare(b[6]); // regular sort may be faster than trying to convert to numbers and catching exceptions etc.
			}
      
			if (result != 0) {
				return result;
			}
		}

      // Compare figure numbers:
      //result = parseInt(a[1]) - parseInt(b[1]);
      //if (result != 0) {
      //	return result;
      //}
      if (a[1] != b[1]) {
        // Have to separate the numeric and alpha (variant) parts of the figure number.
        // Those with variants sort later.
        var aNum = parseInt((a[1].match(/^[0-9]*/))[0]);
        var bNum = parseInt((b[1].match(/^[0-9]*/))[0]);
        if (aNum != bNum) {
          return aNum < bNum ? -1 : 1;
        }
        var aAlpha = a[1].match(/[A-Z]*/);
        var bAlpha = b[1].match(/[A-Z]*/);
        if (aAlpha && !bAlpha) { return 1; }
        if (!aAlpha && bAlpha) { return -1; }
        // So both have variants: return their localeCompare
        return aAlpha[0].localeCompare(bAlpha[0]);
      }

      	// Last: sort on item number:

      	// Ignore any leading dashes
      	var ax = (a[2].charAt(0) == '-') ? a[2].substring(1) : a[2];
      	var bx = (b[2].charAt(0) == '-') ? b[2].substring(1) : b[2];

      	if (ax == bx) {
      		return 0;
      	}

      	for (var i = 0; i < ax.length; i++) {
      		if (ax.charAt(i) > bx.charAt(i)) {
      			return 1;
      		}
      		else if (ax.charAt(i) < bx.charAt(i)) {
      			return -1;
      		}
      	}

      	// All the characters of a are the same as b, but b is longer, so a should be less
      	return -1;
      };

      parts.sort(sortFunction);

      var lastPartNo = "";
      var lastFigureNo = "";

      // Main loop to output the Numeric Index rows
      for (var i = 0; i < parts.length; i++) {

      	// Don't output deleted parts
      	// UPDATE: Now we output deleted parts with an indication that they are deleted (see below)
      	//if (parts[i][5] && parts[i][5] == "DELETED") {
      	//	continue;
      	//}

      	// Also don't output parts with partNumberValue = "ORDERNHA"
      	if (parts[i][0] == "ORDERNHA") {
      		continue;
      	}

      	// Also don't output parts with partNumberValue like "NONPROCXXX"
      	if (/^NONPROC[0-9A-Z][0-9A-Z]?[0-9A-Z]?[0-9A-Z]?[0-9A-Z]?[0-9A-Z]?[0-9A-Z]?$/.test(parts[i][0])) {
      		continue;
      	}

      	// Also don't output a row for duplicate csd "SEE" references:
      	if (lastPartNo == parts[i][0] && parts[i][6] && parts[i][6] == parts[i-1][6]) {
      		continue;
      	}

      	stream.write( "<row rowsep=\"0\">");

      	if (parts[i][2].charAt(0) != "-") {
      		// Add a space before the item number if it doesn't start with a "-" (to match the formatting of the sample)
      		parts[i][2] = " " + parts[i][2];
      	}

      	// If it was a deleted part, output it with an indication it was deleted
      	if (parts[i][5] && parts[i][5] == "DELETED") {

      		// If it is the same part number as the last one, and the last one was also deleted, we don't need to repeat the
      		// part number and "(DELETED)" marker.
      		if (lastPartNo == parts[i][0] && parts[i-1][5] == "DELETED") {
      			stream.write( "<entry></entry><entry></entry>" );
      		}
      		else {
      			stream.write( "<entry>" + parts[i][0] + "</entry>" );
      			stream.write( "<entry>(DELETED)</entry>" );
      		}
      	}
      	// If the part number was the same as the last one, don't output it (unless it was a csd reference).
      	else if (lastPartNo == parts[i][0] && !parts[i][6]) {
      		stream.write("<entry namest=\"col1\" nameend=\"col1B\"/>");
      	}
      	// If the part number was the same, and it has a csd reference, but it was also the same as the last csd reference,
      	// then don't output it. UPDATE: this outputs an empty row; need to move this logic above before we start the new row.
      	//else if (lastPartNo == parts[i][0] && parts[i][6] && parts[i][6] == parts[i-1][6]) {
      	//	stream.write("<entry namest=\"col1\" nameend=\"col1B\"/>");
      	//}
      	else {
      		// If there is a genericPartData with genericPartDataName="csd", we will output the
      		// genericPartData in the first column, and "SEE [part number]" in the second column.
      		// (If there was a csdCode, the array index 6 will be populated with the real part number)
      		if (parts[i][6]) {
      			stream.write( "<entry>" + parts[i][0] + "</entry>" );
      			stream.write( "<entry>SEE " + parts[i][6] + "</entry>" );
      		}
      		else {
      			stream.write( "<entry namest=\"col1\" nameend=\"col1B\">" + parts[i][0] + "</entry>" );
      		}
      	}

      	stream.write( "<entry colsep=\"0\"></entry>" ); // Nothing for the Airline Part No. field for now

      	var isDeleted = parts[i][5] && parts[i][5] == "DELETED";
      	var isPrevDeleted = i > 0 && parts[i-1][5] == "DELETED"
      	var isSameFigNo = lastPartNo == parts[i][0] && lastFigureNo == parts[i][1];

      	// If the part number and figure number were the same as the last one, don't output the figure number.
      	// Also don't output for those with csdCodes
      	// But make an exception for a deleted part number: if it's the first deleted one, still display
      	// the figure number

      	if (parts[i][6]) { // has csd code
      		stream.write("<entry/>");
      	}
      	else if (isSameFigNo && !isDeleted) { // same figure number and not a deleted part number
      		stream.write("<entry/>");
      	}
      	else if (isSameFigNo && isDeleted && isPrevDeleted) { // same fig, deleted, and previous one also deleted
      		stream.write("<entry/>");
      	}
      	else {
      		stream.write( "<entry colsep=\"0\" align=\"right\">" + parts[i][1] + "</entry>" );
      	}

      	// Also don't output the remaining entries for those items with csdCodes
      	if (parts[i][6]) {
      		stream.write( "<entry colsep=\"0\"/><entry/>" );
      	}
      	else {
      		stream.write( "<entry colsep=\"0\">" + parts[i][2] + "</entry>" );

      		// If it's a deleted part number, make sure the total required column is zero
      		if (parts[i][5] && parts[i][5] == "DELETED") {
      			stream.write( "<entry> 0</entry>" );
      		}
      		else {
      			stream.write( "<entry> " + parts[i][3] + "</entry>" );
      		}
      	}

      	stream.write( "</row>" );

      	// Was trying to output an extra row with a bottom rule, but it doesn't generate
      	// the rule properly, perhaps because it's being over-ridden by the frame="top"
      	// attribute of table. Instead, output a mini-table below with a rule.

      	lastPartNo = parts[i][0];
      	lastFigureNo = parts[i][1];
      }

      //stream.write("<row><entry>" + new Date() + "</entry><entry/><entry/><entry/><entry/><entry/></row>");

      stream.write( "</tbody></tgroup></table>");

      // Add a little table at the bottom to make the rule at the end of the Numerical Index table
      // Wrap in _ufe:IPD_TableRow, since that's used in the IPD tables to eat up the extra space
      // generated by default with tables.
      stream.write("<_ufe:IPD_TableRow><table frame=\"bottom\"><tgroup cols=\"1\"><?PubTbl tgroup cbmarg=\"0.00pt\" clmarg=\"0.00pt\" crmarg=\"0.00pt\"\nctmarg=\"0.00pt\"?>" );
      stream.write( "<colspec colname=\"col1\" colwidth=\"*\"/><tbody><row><?PubTbl row rht=\"0.01in\"?><entry colsep=\"0\"></entry></row></tbody></tgroup></table></_ufe:IPD_TableRow>");

      stream.write("</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }

   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_NumericalIndex

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_NumericalIndex_Title_Repeat" style="title">
<Context priority="20.005"
selector="_ufe:FigureTitleForToC/_ufe:IPD_NumericalIndex_Title_Repeat">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_formalBlock">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae16a755c-52cf-4aab-9070-b9361a276258"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A0bce2d84-b807-4cbd-98eb-63b61a9bca07"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae0771917-0ee8-4b61-8012-b7224e6c2638"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20"
selector="pmEntry/_ufe:IPD_NumericalIndex_Title_Repeat">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_1">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad65ae1fe-6a83-401e-9483-7aee5a96bf12"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Abc7c5a02-7e69-4686-b50f-9fe5b79f0119"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context
comment='This context outputs the Numerical Index repeated heading (in "Repeat title" Gentext section)'
priority="10"
selector="_ufe:IPD_NumericalIndex//_ufe:IPD_NumericalIndex_Title_Repeat">
<BaseProperties propertySetReferences="bold Centred_Heading">
<SpaceBefore optimum="0pt"/>
<SpaceAfter optimum="-5pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A0d872e1a-7d01-4cbd-be0d-a8a14ff83e02"><_gte:Target
lang="en"><_gte:Font Weight="bold" Posture="upright" SmallCap="no"
>Numerical Index</_gte:Font></_gte:Target></_gte:Translate></_sfe:RepeatingTitle
></_sfe:Gentext></RepeatingTitle>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:IPD_NumericalIndex_Title_Repeat">
<BaseProperties propertySetReferences="bold Centred_Heading">
<SpaceBefore optimum="0pt"/>
<SpaceAfter optimum="-5pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_OptionalPart" style="block">
<Context priority="0" selector="_ufe:IPD_OptionalPart">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/commonRepository/partRepository/partSpec/partRefGroup/optionalPart[@placeholder]"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A31fafdd3-0ffd-4206-bf36-ba4f82392c32"><_gte:Target lang="en"
>OPT TO <_ufe:IPD_OptionalPartText></_ufe:IPD_OptionalPartText></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_OptionalPart

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
fish['gentextResolved'] = 0;

// Source edit: find the mfr code and part no to check in the partRepository:
var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

//if ( formatting.evaluateXPath( " boolean( /pm/commonRepository/partRepository/partSpec/partRefGroup/optionalPart[@placeholder] )", 130, template.primaryStream, null ) != 0 )
if ( formatting.evaluateXPath( " boolean( /pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/partRefGroup/optionalPart )", 130, template.primaryStream, null ) != 0 )
{
   //block.indentStart = '16pt';
   block.indentStart = template.sizeDefinitions[ 'IPL_Nomenclature_Indent' ];
   block.absoluteStart = 2;
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:_ufe:IPD_OptionalPart:_ufeIPD_OptionalPart_everywhere1168:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:_ufe:IPD_OptionalPart:_ufeIPD_OptionalPart_everywhere1168:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A31fafdd3-0ffd-4206-bf36-ba4f82392c32\"><_gte:Target lang=\"en\">OPT TO <_ufe:IPD_OptionalPartText></_ufe:IPD_OptionalPartText></_gte:Target></_gte:Translate>" );
         stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
   }
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_OptionalPart

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_OptionalPartText" style="inline">
<Context priority="0" selector="_ufe:IPD_OptionalPartText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_OptionalPartText

var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

var optionalPartNumber = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/partRefGroup/optionalPart/partRef/@partNumberValue");
var optionalPartMfrCode = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/partRefGroup/optionalPart/partRef/@manufacturerCodeValue");


if (optionalPartNumber && optionalPartNumber != "") {
	formatting.output(optionalPartNumber + " " + optionalPartMfrCode);
}
else {
	formatting.output("<?tic=r>optionalPart not found for " + mfrCode + "/" + partNo + "<?tic>");
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_OptionalPartText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_OrderPN" style="block">
<Context priority="0" selector="_ufe:IPD_OrderPN">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/commonRepository/partRepository/partSpec/itemIdentData/overLengthPartNumber[@placeholder]"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A5b325ed3-27f2-45a8-a1ff-5ab18b477a4b"><_gte:Target lang="en"
>OVERLENGTH PN:<_ufe:Keep><_ufe:IPD_OrderPNText></_ufe:IPD_OrderPNText
></_ufe:Keep></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_OrderPN

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
fish['gentextResolved'] = 0;

// Source edit: find the mfr code and part no to check in the partRepository:
var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

//if ( formatting.evaluateXPath( " boolean( /pm/commonRepository/partRepository/partSpec/itemIdentData/overLengthPartNumber[@placeholder] )", 130, template.primaryStream, null ) != 0 )
if ( formatting.evaluateXPath( " boolean( /pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/overLengthPartNumber )", 130, template.primaryStream, null ) != 0 )
{
   //block.indentStart = '16pt';
   block.indentStart = template.sizeDefinitions[ 'IPL_Nomenclature_Indent' ];
   block.absoluteStart = 2;
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:_ufe:IPD_OrderPN:_ufeIPD_OrderPN_everywhereB885:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:_ufe:IPD_OrderPN:_ufeIPD_OrderPN_everywhereB885:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A5b325ed3-27f2-45a8-a1ff-5ab18b477a4b\"><_gte:Target lang=\"en\">OVERLENGTH PN: <_ufe:Keep><_ufe:IPD_OrderPNText></_ufe:IPD_OrderPNText></_ufe:Keep></_gte:Target></_gte:Translate>" );
         stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
   }
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_OrderPN

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_OrderPNText" style="inline">
<Context priority="0" selector="_ufe:IPD_OrderPNText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_OrderPNText

var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

var overLengthPartNumber = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/overLengthPartNumber");


if (overLengthPartNumber && overLengthPartNumber != "") {
	formatting.output(overLengthPartNumber);
}
else {
	formatting.output("<?tic=r>overLengthPartNumber not found for " + mfrCode + "/" + partNo + "<?tic>");
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_OrderPNText


]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_ReferTo" style="block">
<Context priority="0" selector="_ufe:IPD_ReferTo">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="If this itemSeqNumber has a referTo element, then output it. May be more than one referTo; this will output all of them.">
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/partLocationSegment/referTo"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad4387de9-d788-4f37-a1f5-1ac0d7dd50cb"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="ancestor::itemSeqNumber/partLocationSegment/referTo"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_ReferToFigNums" style="inline">
<Context priority="0" selector="_ufe:IPD_ReferToFigNums">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_ReferToFigNums

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

var numFigs = formatting.evaluateXPath("count(ancestor::referTo/catalogSeqNumberRef)");
var figNum;

if (numFigs == 1) {
	figNum = getFigNum(1);
	formatting.output(figNum);
}
else if (numFigs == 2) {
	figNum = getFigNum(1);
	formatting.output(figNum + " AND IPL FIG ");
	figNum = getFigNum(2);
	formatting.output(figNum);
}
else if (numFigs > 2) {

	var skipLast = false;

	for (var i = 1; i < numFigs; i++) {

		figNum = getFigNum(i);

		// See if we're starting a sequence (at least three in a row), if so, output with "THRU"
		var sequenceCount = checkSequence(i);

		if (sequenceCount >= 3) {
			formatting.output(figNum + " THRU IPL FIG " + getFigNum(i + sequenceCount - 1));
			i = i + sequenceCount - 1;

			// If we output the last figure in the sequence, signal we don't need to output it at the end of the loop
			if (i == numFigs) {
				skipLast = true;
				break;
			}
			else if (i == numFigs - 1) {
				formatting.output(" ");
			}
			else {
				formatting.output(", IPL FIG ");
			}
		}
		else {
			formatting.output(figNum + ", IPL FIG ");
		}
	}

	if (!skipLast) {
		figNum = getFigNum(numFigs);
		formatting.output("AND IPL FIG " + figNum);
	}
}

function getFigNum(index) {
	var figNum = formatting.evaluateXPath("ancestor::referTo/catalogSeqNumberRef[" + index + "]/@figureNumber");
	// Strip leading zeroes
	figNum = figNum.replace(/^0+/, "");

	var figNumVariant = formatting.evaluateXPath("ancestor::referTo/catalogSeqNumberRef[" + index + "]/@figureNumberVariant");
	if (figNumVariant) {
		figNum = figNum + figNumVariant;
	}

	// Now check for Item Numbers too
  var itemNum = formatting.evaluateXPath("ancestor::referTo/catalogSeqNumberRef[" + index + "]/@item");

  // Don't output for item "000" or "001"
  if (!itemNum || itemNum == "000" || itemNum == "001") {
    return figNum;
  }

	// Strip leading zeroes
	itemNum = itemNum.replace(/^0+/, "");

	var itemVariant = formatting.evaluateXPath("ancestor::referTo/catalogSeqNumberRef[" + index + "]/@itemVariant");
	if (itemVariant) {
		itemNum = itemNum + itemVariant;
	}

  figNum = figNum + " ITEM " + itemNum;

	return figNum;
}

function isSequential(currentFig, nextFig) {
	// For now, assume they are numeric-only. At some point we might include
	// checks for sequential figure number variants...
	var f1 = parseInt(currentFig);
	var f2 = parseInt(nextFig);

	return (f1 && f2 && (f2 == f1 + 1)); // true if f2 is f1 + 1
}

function checkSequence(index) {

	var count = 1; // start at one, like "1 in a row"
	var currentFig = getFigNum(index);

	while (true) {
		index++;
		var nextFig = getFigNum(index);
		if (!nextFig || !isSequential(currentFig, nextFig)) {
			break;
		}
		else {
			count++;
			currentFig = nextFig;
		}
	}
	return count;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_ReferToFigNums

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_ReferToFigureDmRef" style="inline">
<Context priority="0" selector="_ufe:IPD_ReferToFigureDmRef">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_ReferToFigureDmRef

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

// SOURCE EDIT to construct the module ID so we can calculate what figure number to use
// based on the pmEntry/dmRef structure

// A full module code currently looks like this:
// S1000DBIKE-AAA-A0-10-20-00AA-362B-A

var dmCodeList = formatting.currentXMLNode.evaluateXPath( 'ancestor::referTo/refs/dmRef/dmRefIdent/dmCode' );

if ( dmCodeList && dmCodeList.resultType == XPathResult.NODELIST_TYPE ) {
  var dmCodeNode = dmCodeList.nodeListValue.item(0);

  var modelIdentCode = dmCodeNode.getAttribute("modelIdentCode");
  var systemDiffCode = dmCodeNode.getAttribute("systemDiffCode");
  var systemCode = dmCodeNode.getAttribute("systemCode");
  var subSystemCode = dmCodeNode.getAttribute("subSystemCode");
  var subSubSystemCode = dmCodeNode.getAttribute("subSubSystemCode");
  var disassyCode = dmCodeNode.getAttribute("disassyCode");
  var assyCode = dmCodeNode.getAttribute("assyCode");
  var disassyCodeVariant = dmCodeNode.getAttribute("disassyCodeVariant");
  var infoCode = dmCodeNode.getAttribute("infoCode");
  var infoCodeVariant = dmCodeNode.getAttribute("infoCodeVariant");
  var itemLocationCode = dmCodeNode.getAttribute("itemLocationCode");

	var moduleId = modelIdentCode + "-" + systemDiffCode + "-" + systemCode
		+ "-" + subSystemCode + subSubSystemCode + "-" + assyCode + "-" + disassyCode + disassyCodeVariant + "-"
		+ infoCode + infoCodeVariant + "-" + itemLocationCode;

  if (formatting.evaluateXPath("id('" + moduleId + "')")) {
    var figureNumber = formatting.evaluateXPath("count(id('" + moduleId + "')/ancestor::pmEntry[1]/preceding-sibling::pmEntry) + 1");
    var variant = parseInt(formatting.evaluateXPath("count(id('" + moduleId + "')/ancestor::dmContent[1]/preceding-sibling::dmContent) + 1"));
    var variantStr = "";
    if (variant > 1) {
      // The first figure (in the first dmContent) has no variant. The next one starts at "A".
      variantStr = formatting.formatSequence(variant - 1, "A", "", 0);
    }

    formatting.output(figureNumber + variantStr);
  }
  else {
    formatting.output("<?tic=r>referTo: can't find module with dmRef (" + moduleId + ")<?tic>");
  }

  //currentNode.setAttribute("refId", moduleId); //"R123");
}
else {
	formatting.output("<?tic=r>referTo: can't find dmCode element<?tic>");
}




var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_ReferToFigureDmRef

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_ReferToItemNum" style="inline">
<Context priority="0" selector="_ufe:IPD_ReferToItemNum">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_ReferToItemNum

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

	// May need to deal with multiple figure references later?
	var itemNum = formatting.evaluateXPath("ancestor::referTo/catalogSeqNumberRef[1]/@item");

	// Strip leading zeroes
	itemNum = itemNum.replace(/^0+/, "");

	var itemVariant = formatting.evaluateXPath("ancestor::referTo/catalogSeqNumberRef[1]/@itemVariant");
	if (itemVariant) {
		itemNum = itemNum + itemVariant;
	}

	formatting.output(itemNum);


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_ReferToItemNum

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_ReferToItemNumCheck" style="inline">
<Context priority="0" selector="_ufe:IPD_ReferToItemNumCheck">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="ancestor::referTo/catalogSeqNumberRef[1]/@item and ancestor::referTo/catalogSeqNumberRef[1]/@item != '000' and ancestor::referTo/catalogSeqNumberRef[1]/@item != '001'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A65e3793d-1626-48d4-86d3-ccbb8d5d2ec3"><_gte:Target lang="en"
>ITEM <_ufe:IPD_ReferToItemNum></_ufe:IPD_ReferToItemNum> </_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_ReferToTypeText" style="inline">
<Context priority="0" selector="_ufe:IPD_ReferToTypeText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="ancestor::referTo/@refType='rft01'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A556c3038-7718-4e51-bd91-8cf944e523b9"><_gte:Target lang="en"
>FOR NHA</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::referTo/@refType='rft02'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A05fa7f36-934c-402f-a528-1d132a74dc7b"><_gte:Target lang="en"
>FOR DETAILS</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::referTo/@refType='rft06'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af8223fd5-7e71-4291-84f5-7f04f48d5317"><_gte:Target lang="en"
>FOR REMOVAL</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::referTo/@refType='rft10'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A677aad58-4003-4486-b599-2d96feebd1a5"><_gte:Target lang="en"
>FOR BKDN</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::referTo/@refType='rft51'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aaed8fbe7-bb2f-435b-84eb-8060811dd252"><_gte:Target lang="en"
>FOR FIELD MAINT BKDN</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::referTo/@refType='rft52'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A16945dab-542a-4ec5-a4e8-2c356aafcb9a"><_gte:Target lang="en"
>FOR INSTALLATION</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::referTo/@refType='rft53'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af1bab98e-785f-44ad-9624-06ecd2a2336d"><_gte:Target lang="en"
>FOR PLMB INSTL</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="ancestor::referTo/@refType='rft54'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ab0dcc6ad-5e42-4b0b-87c2-433d994ee6cb"><_gte:Target lang="en"
>FOR FURTHER BKDN</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_SCDNumber" style="block">
<Context priority="0" selector="_ufe:IPD_SCDNumber">
<BaseProperties>
<Indent leftIndent="@IPL_Nomenclature_Indent"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A05a1b97a-b420-47c7-9617-4e583561e98d"><_gte:Target lang="en"
>SCD <_ufe:IPD_SCDNumberText></_ufe:IPD_SCDNumberText></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_SCDNumberText" style="inline">
<Context priority="0" selector="_ufe:IPD_SCDNumberText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_SCDNumberText

var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

// The SCDPartNumber must be the same as the partNo found above (since we're matching on it). So just output
// that instead of checking in the partRepository as usual.

//var SCDPartNumber = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/overLengthPartNumber");

if (partNo && partNo != "") {
	formatting.output(partNo);
}
else {
	formatting.output("<?tic=r>SCD Part Number not found for " + mfrCode + "/" + partNo + "<?tic>");
}

// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_SCDNumberText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_SelectOrManufacture" style="block">
<Context priority="0" selector="_ufe:IPD_SelectOrManufacture">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/partLocationSegment/selectOrManufactureFromIdent/@selectOrManufactureValue='m'"/>
</Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A08388279-b0c9-435d-8f3f-c10406f282c8"><_gte:Target lang="en"
>(MANUFACTURE FROM <_gte:ElementContent include="contentOnly"
xpath="ancestor::itemSeqNumber/partLocationSegment/selectOrManufactureFromIdent/selectOrManufacture"
/>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IPD_ShortName" style="block">
<Context priority="0" selector="_ufe:IPD_ShortName">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="placeholder"/></Tests>
<BaseProperties>
<Indent leftIndent="IPL_Nomenclature_Indent"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Adb5412c2-737b-45fb-8487-9abcee02e639"><_gte:Target lang="en"
><_ufe:IPD_ShortNameText></_ufe:IPD_ShortNameText></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2f079406-e675-4bfc-baf2-28a271628fdd"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_ShortName

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "_ufeIPD_ShortName_everywhere384C";
contextProp.pdfTag = 'P';
contextProp.pdfAttrs = {};

fish[ 'gentextResolved' ] = 0; // Allows conditions to overwrite gentext

// SOURCE EDIT: Check for shortName

var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

var shortName = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/shortName");

// UPDATE: If there is no part repository, we get the short name from the partSegment

var hasPartRepository = formatting.evaluateXPath("boolean(count(/pm/commonRepository/partRepository/partSpec)>0)");

if (hasPartRepository == "0") {
	shortName = formatting.evaluateXPath("ancestor::itemSeqNumber/partSegment/itemIdentData/shortName");
}

if (shortName)
{
  // Base properties
  block.indentStart = template.sizeDefinitions[ 'IPL_Nomenclature_Indent' ];
  block.absoluteStart = 2;
  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:_ufe:IPD_ShortName:_ufeIPD_ShortName_everywhere384C:addBefore_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:IPD_ShortName:_ufeIPD_ShortName_everywhere384C:addBefore_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Adb5412c2-737b-45fb-8487-9abcee02e639\"><_gte:Target lang=\"en\"><_ufe:IPD_ShortNameText></_ufe:IPD_ShortNameText></_gte:Target></_gte:Translate>" );
      stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentBefore( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:_ufe:IPD_ShortName:_ufeIPD_ShortName_everywhere384C:addAfter_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:IPD_ShortName:_ufeIPD_ShortName_everywhere384C:addAfter_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2f079406-e675-4bfc-baf2-28a271628fdd\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

}
var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_ShortName

template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "_ufeIPD_ShortName_everywhere384C", false, false );
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_ShortNameText" style="inline">
<Context priority="0" selector="_ufe:IPD_ShortNameText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_ShortNameText

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

// SOURCE EDIT: Output shortName

var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

var hasPartRepository = formatting.evaluateXPath("boolean(count(/pm/commonRepository/partRepository/partSpec)>0)");

var shortName;

if (hasPartRepository == "0") {
	shortName = formatting.evaluateXPath("ancestor::itemSeqNumber/partSegment/itemIdentData/shortName");
}
else {
	shortName = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/shortName");
}

if (shortName) {
	formatting.output(shortName);
}
//else {
//	formatting.output("<?tic=r>shortName not found for " + mfrCode + "/" + partNo + "(PR: " + hasPartRepository + ")<?tic>");
//}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_ShortNameText

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_StockNumText" style="inline">
<Context priority="0" selector="_ufe:IPD_StockNumText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:IPD_StockNumText


var mfrCode = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("ancestor::itemSeqNumber/partRef/@partNumberValue");

var customerStockNumber = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/customerStockNumber");


if (customerStockNumber && customerStockNumber != "") {
	formatting.output(customerStockNumber);
}
else {
	formatting.output("<?tic=r>customerStockNumber not found for " + mfrCode + "/" + partNo + "<?tic>");
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:IPD_StockNumText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:IPD_TableHeader" style="title">
<Context priority="10" selector="catalogSeqNumber//_ufe:IPD_TableHeader">
<BaseProperties>
<Font weight="normal"/>
<SpaceAfter optimum="0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A65a602c2-228b-4c26-bc4a-2fb2756aa9d5"><_gte:Target
lang="en"><_ufe:IPD_TableHeaderWrapper><_gte:Font Weight="medium"
><_dtd:table frame="topbot"><_dtd:tgroup cols="6"><?PubTbl
tgroup clmarg="3.00pt" crmarg="2.00pt"?><_dtd:colspec colname="col1"
colwidth="0.52in"/><_dtd:colspec colname="col3" colwidth="1.34in"
/><_dtd:colspec colname="col4" colwidth="0.97in"/><_dtd:colspec
colname="col5" colwidth="100*"/><_dtd:colspec colname="col6"
colwidth="0.95in"/><_dtd:colspec colname="col7" colwidth="0.52in"
/><_dtd:tbody><_dtd:row valign="bottom"><_dtd:entry colsep="0"
align="center">FIG. ITEM</_dtd:entry><_dtd:entry colsep="0"
align="center">PART NUMBER</_dtd:entry><_dtd:entry colsep="0"
align="center">AIRLINE<_dtd:_newline/>STOCK NO.</_dtd:entry><_dtd:entry
colsep="0" align="left">1234567<_gte:Leaders leaderType="space"
lenType="specified" specLen="0.35in"/>NOMENCLATURE</_dtd:entry><_dtd:entry
colsep="0" align="left">EFFECT<_dtd:_newline/>(USE)<_dtd:_newline
/>CODE</_dtd:entry><_dtd:entry align="left">UNITS<_dtd:_newline/>PER<_dtd:_newline
/>ASSY</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Font><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup
cols="7"><?PubTbl tgroup cbmarg="0.00pt" ctmarg="8.00pt"?><_dtd:colspec
colname="col1" colwidth="0.44in"/><_dtd:colspec colname="col2"
colwidth="0.40in"/><_dtd:colspec colname="col3" colwidth="1.30in"
/><_dtd:colspec colname="col4" colwidth="0.62in"/><_dtd:colspec
colname="col5" colwidth="2.69in"/><_dtd:colspec colname="col6"
colwidth="0.60in"/><_dtd:colspec colname="col7" colwidth="0.80in"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:XPathString
expr="count((ancestor::pmEntry)[last()]/preceding-sibling::pmEntry)+1"
/><_gte:XPathString
expr="ancestor::catalogSeqNumber/@figureNumberVariant"/></_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry colsep="0"></_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry colsep="0"></_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry></_dtd:entry></_dtd:row
></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow></_ufe:IPD_TableHeaderWrapper
></_gte:Target></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext
></RepeatingTitle>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:IPD_TableHeader">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<SpaceBefore optimum="0em"/>
<SpaceAfter optimum="0em"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_TableHeaderWrapper" style="block">
<Context priority="0" selector="_ufe:IPD_TableHeaderWrapper">
<BaseProperties>
<SpaceAfter optimum="0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A07c4b5f6-7d4c-4121-96fc-2029b490579e"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPD_TableRow" style="block">
<Context priority="0" selector="_ufe:IPD_TableRow">
<BaseProperties>
<SpaceBefore optimum="-12pt" precedence="force"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aaf815b1b-eec0-4447-8dd6-42856c1ae98b"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:IPLFigureTitleForToC" style="formalBlock">
<Context priority="0" selector="_ufe:IPLFigureTitleForToC">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:IfACMM" style="block">
<Context priority="0" selector="_ufe:IfACMM">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties></BaseProperties>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IfIsSPM" style="block">
<Context priority="0" selector="_ufe:IfIsSPM">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='spm'"/></Tests>
<BaseProperties></BaseProperties>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IfNotACMM" style="block">
<Context priority="0" selector="_ufe:IfNotACMM">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="not(/pm/@type='acmm')"/></Tests>
<BaseProperties></BaseProperties>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IfNotSPM" style="block">
<Context priority="0" selector="_ufe:IfNotSPM">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="not(/pm/@type='spm')"/></Tests>
<BaseProperties></BaseProperties>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:IndentedPara" style="block">
<Context priority="0" selector="_ufe:IndentedPara">
<BaseProperties>
<Indent leftIndent="@Small_Indent"/>
<SpaceBefore optimum="Medium_Space_Above"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element description="This element wraps all indexes." name="_sfe:Index"
style="block">
<Context priority="0" selector="_sfe:Index">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the group head and all index entries for an alphabetic group."
name="_sfe:IndexAlphaGroup_Main_Index" style="block">
<Context priority="0" selector="_sfe:IndexAlphaGroup_Main_Index">
<BaseProperties>
<SpaceBefore maximum="1.6pc" minimum="1.2pc" optimum="1.5pc"
precedence="medium"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element contains the text of the last page number in a merged page number range."
name="_sfe:IndexEndPage_Main_Index" style="inline">
<Context priority="0" selector="_sfe:IndexEndPage_Main_Index">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3135923d-9dce-46e9-9d1a-695b8331c6d7"><_gte:Target lang="en"
>–</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element description="This element wraps an index entry at any level."
name="_sfe:IndexEntry_Main_Index" style="block">
<Context priority="30"
selector="_sfe:IndexEntry_Main_Index/_sfe:IndexEntry_Main_Index/_sfe:IndexEntry_Main_Index/_sfe:IndexEntry_Main_Index">
<BaseProperties>
<Indent firstLineIndent="*-0.5em" leftIndent="@1em"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="20"
selector="_sfe:IndexEntry_Main_Index/_sfe:IndexEntry_Main_Index/_sfe:IndexEntry_Main_Index">
<BaseProperties>
<Indent firstLineIndent="*-0.5em" leftIndent="@1em"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="10"
selector="_sfe:IndexEntry_Main_Index/_sfe:IndexEntry_Main_Index">
<BaseProperties>
<Indent firstLineIndent="*-0.5em" leftIndent="@1em"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="_sfe:IndexEntry_Main_Index">
<BaseProperties>
<Indent firstLineIndent="*-0.5em" lastLineRightIndent="0pt"
leftIndent="@0.5em" rightIndent="@2pc"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element contains the heading for a group of index entries."
name="_sfe:IndexGroupHead_Main_Index" style="block">
<Context priority="0" selector="_sfe:IndexGroupHead_Main_Index">
<BaseProperties>
<Font family="Sanserif" size="14pt" weight="bold"/>
<Highlight allcaps="yes"/>
<Alignment align="left"/>
<SpaceAfter minimum="0.3pc" optimum="0.5pc" precedence="medium"/>
<Breaks blockOrInline="block"/>
<Keep withNext="7"/></BaseProperties>
</Context>
</Element>
<Element
description="This element contains the indexed text of an index entry."
name="_sfe:IndexHeading_Main_Index" style="inline">
<Context priority="0" selector="_sfe:IndexHeading_Main_Index">
<BaseProperties>
<Keep keepScope="withinLine" together="3"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the page numbers or other locators of an index entry."
name="_sfe:IndexLocators_Main_Index" style="inline">
<Context priority="0" selector="_sfe:IndexLocators_Main_Index">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af9cee906-6a80-459c-a0b8-d78cf31dcc97"><_gte:Target lang="en"
><_gte:Leaders leaderType="space" lenType="fit" minLen="3em"
leaderSpacing="3pt"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
description="This element contains the text of a single page number or other locator."
name="_sfe:IndexPage_Main_Index" style="inline">
<Context priority="2" selector="_sfe:IndexPage_Main_Index[position()>1]">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A785bf654-88d0-4859-baf1-16c73e34ce40"><_gte:Target lang="en"
>, </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_sfe:IndexPage_Main_Index">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps a group head and all index entries that follow alphabetic entries."
name="_sfe:IndexPostGroup_Main_Index" style="block">
<Context priority="0" selector="_sfe:IndexPostGroup_Main_Index">
<BaseProperties>
<SpaceBefore maximum="1.6pc" minimum="1.2pc" optimum="1.5pc"
precedence="medium"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps a group head and all index entries that precede alphabetic entries."
name="_sfe:IndexPreGroup_Main_Index" style="block">
<Context priority="0" selector="_sfe:IndexPreGroup_Main_Index">
<BaseProperties>
<SpaceBefore maximum="1.6pc" minimum="1.2pc" optimum="1.5pc"
precedence="medium"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the group head and all index entries for a group that encompasses a range of characters."
name="_sfe:IndexRangeGroup_Main_Index" style="block">
<Context priority="0" selector="_sfe:IndexRangeGroup_Main_Index">
<BaseProperties>
<SpaceBefore maximum="1.6pc" minimum="1.2pc" optimum="1.5pc"
precedence="medium"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description='This element contains the text of a "See Also" reference in an index entry.'
name="_sfe:IndexSeeAlso_Main_Index" style="block">
<Context priority="0" selector="_sfe:IndexSeeAlso_Main_Index">
<BaseProperties>
<Indent firstLineIndent="*-1.5em" leftIndent="@3em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A732aa3f0-e9a5-41b5-ba63-dd796168d277"><_gte:Target lang="en"
><_gte:Font Posture="italic">See also </_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<OutputProperties output="rtf">
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A0a99db90-2488-4d80-a06c-abdb6287b809"><_gte:Target lang="en"
>, <_gte:Font Posture="italic">See also </_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</OutputProperties>
</Context>
</Element>
<Element
description='This element contains the text of a "See" reference in an index entry.'
name="_sfe:IndexSee_Main_Index" style="inline">
<Context priority="0" selector="_sfe:IndexSee_Main_Index">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3dad1422-14f6-4866-b170-b70b3eab39f6"><_gte:Target lang="en"
>, <_gte:Font Posture="italic">See </_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<OutputProperties output="rtf">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa5f272aa-9a3f-4bed-907f-ec3b46f03a6e"><_gte:Target lang="en"
><_gte:Font Posture="italic">See </_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</OutputProperties>
</Context>
</Element>
<Element
description="This element contains the heading for a sub-group of index entries (Chinese modes 1 and 3 only)."
name="_sfe:IndexSubGroupHead_Main_Index" style="block">
<Context priority="0" selector="_sfe:IndexSubGroupHead_Main_Index">
<BaseProperties>
<Font size="14pt" weight="bold"/>
<Highlight allcaps="yes"/>
<Alignment align="left"/>
<SpaceBefore maximum="2pc" minimum="2pc" optimum="2pc" precedence="high"/>
<Breaks blockOrInline="block"/>
<Keep withNext="7"/></BaseProperties>
</Context>
</Element>
<Element description="This element wraps an index."
name="_sfe:Index_Main_Index" style="block">
<Context priority="0" selector="_sfe:Index_Main_Index">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:IntentionallyBlank" style="block">
<Context priority="0" selector="_ufe:IntentionallyBlank">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa53a9651-d3fd-4f67-9eb8-691929f40800"><_gte:Target lang="en"
>Blank Page</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element description="This element wraps all generated internal links."
name="_sfe:InternalLink" style="link">
<LinkDetails idrefAttrname="targetId" primary="no"/>
<Context priority="0" selector="_sfe:InternalLink">
<BaseProperties propertySetReferences="Link"></BaseProperties>
</Context>
</Element>
<Element name="_ufe:Keep" style="inline">
<Context priority="0" selector="_ufe:Keep">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<Keep keepScope="withinLine" together="4"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:LEP" style="block">
<Context priority="0" selector="_ufe:LEP">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A0fdf4777-44f1-497d-978d-23101be2c769"><_gte:Target lang="en"
>LEP goes here<_dtd:_newline/><_dtd:table><_dtd:tgroup cols="2"><?PubTbl
tgroup cbmarg="3.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="3.00pt"?><_dtd:colspec colname="col1" colwidth="2.40in"/><_dtd:colspec
colname="col2" colwidth="2.00*"/><_dtd:tbody><_dtd:row><?PubTbl
row rht="0.20in"?><_dtd:entry>Title</_dtd:entry><_dtd:entry
align="center">02 Mar 2018</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:LEP

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "_ufeLEP_everywhere_else0539";
contextProp.pdfTag = 'P';
contextProp.pdfAttrs = {};

// Base properties

// Always make the stream, since we want a new one on the last pass to get the right page numbers
   var stream = template.content.getStream('stylesheet0:Element:_ufe:LEP:_ufeLEP_everywhere_else0539:addBefore');
   if ( stream != null ) {
   	stream.clear();
   }
   else {
	  var primaryStream = template.content.getStream( template.primaryStream );
	  stream = template.content.createStream( 'stylesheet0:Element:_ufe:LEP:_ufeLEP_everywhere_else0539:addBefore', primaryStream.type );
   }

    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\""
    	+ " xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\""
    	+ " xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\""
    	+ " xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\">");

    // Make a four column table to lay out the LEP: foldout indicator, page #, change/foldout indicator, date
    stream.write( "<_sfe:BeforeOrAfterText><table frame=\"none\">" );
    stream.write( "<tgroup cols=\"4\"><?PubTbl tgroup cbmarg=\"4.00pt\" clmarg=\"0.00pt\" crmarg=\"0.00pt\" ctmarg=\"5.00pt\"?>");
    stream.write( "<colspec colwidth=\"0.25in\" colname=\"col0\"/><colspec colwidth=\"2.0in\" colname=\"col1\"/><colspec colwidth=\"0.15in\" colname=\"col2\"/><colspec colwidth=\"2.00*\" colname=\"col3\"/><tbody>");


    var doctype = formatting.evaluateXPath("/pm/@type");

    // Add LEP entries
    var numEntries = formatting.evaluateXPath("count(/pm/content/pmEntry)");

    // We're using the same date for all pages
    var pageDate = formatting.evaluateXPath("/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate/@day")
    	+ " " + formatting.evaluateXPath("/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate/@month")
    	+ " " + formatting.evaluateXPath("/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate/@year");

	  // Get the last page number of the document to calculate pages for the last pmEntry
    var lastPageNumber = parseInt(formatting.evaluateXPath("/pm/@LEP_last_page"));
    if (!lastPageNumber) {
    	// Shouldn't happen, but set a dummy lastPageNumber if not set
    	lastPageNumber = 10;
    }

    // The last page number may be higher due to the length of the LEP, but the range of pages
    // for the last section will still be correct, so it doesn't matter.

    // We need to calculate how many pages the LEP will take up, based on how many entries
    // there are (the total number of pages plus headings). Each page of the LEP can hold 60
    // lines (30 per column). Plus the ATA documents typically have 27 lines of headings
    // (including ones that wrap to two lines).
    //
    // So to calculate the pages required, we need to divide the total number of pages plus
    // 27 (subheadings) by 60.
    // Also account for foldout pages (which have two pages on one line): subtract the number of foldouts from
    // the total number of pages we need rows for.
    //
    // NOTE: If the LEP is long, we might need to adjust for the number of pages in the LEP too...

    var foldoutCount = parseInt(formatting.evaluateXPath("count(//graphic[@LEP_foldout_page])"));

    // UPDATE: Now we get the real start page of the ToC, so we don't need to use this
    // calculation anymore. Leave for now in case we need to bring it back.
    var expectedLEPpages = Math.ceil((lastPageNumber - foldoutCount + 27) / 60);

    // If it's odd, need to add one more for the blank page after
    if (expectedLEPpages % 2 == 1) { expectedLEPpages++ }

    // Special handling for title page (since it doesn't have its own pmEntry:

    // The last title page is the one before the first pmEmtry, not counting the "Proprietary
    // Information" pmEntry, which is considered a continuation of the title page. So that
    // ususally means the second one.
    var firstPMtype = formatting.evaluateXPath("(//pmEntry)[1]/@pmEntryType");
    var firstPMpage;
    if (firstPMtype == "pmt77") {
      firstPMpage = formatting.evaluateXPath("(/pm/content/pmEntry)[2]/@LEP_start_page");
    }
    else {
      firstPMpage = formatting.evaluateXPath("(/pm/content/pmEntry)[1]/@LEP_start_page");
    }
  
    stream.write( "<row><entry rowsep=\"0\" colsep=\"0\" namest=\"col0\" nameend=\"col1\">Title</entry><entry rowsep=\"0\" colsep=\"0\"/><entry rowsep=\"0\"/></row>");
    var changedTitlePages = getChangedPagesForPmEntry(1);

    for (var i = 1; i < firstPMpage; i++) {
    	stream.write( "<row><entry rowsep=\"0\" colsep=\"0\"/><entry rowsep=\"0\" colsep=\"0\"><!--_gte:Leaders specLen=\"0.25in\" lenType=\"specified\" leaderType=\"space\"/ -->"
    		+ "T-" + i);

    		var ndxChanged = changedTitlePages.indexOf(i);

       if (ndxChanged != -1) {
    		  stream.write("</entry><entry rowsep=\"0\" colsep=\"0\">*</entry>");
       }
       else {
    		  stream.write("</entry><entry rowsep=\"0\" colsep=\"0\"></entry>");
       }
       stream.write("<entry rowsep=\"0\" align='center'>" + pageDate + "</entry></row>");
    }

    // Special case for the ToC start page since it is output from the LEP pmEntry
    var tocStartPage = parseInt(formatting.evaluateUnstableXPath("/pm/@LEP_toc_start_page"));
    //var tocStartPage = template.pageLabelLocate("LEP_toc_start_page");

    // Debuging info row:
    //stream.write( "<row><entry>tocStartPage: " + tocStartPage + "; expectedLEPpages: " + expectedLEPpages + "</entry><entry></entry></row>");

    // Now output the LEP subheadings and pages from the information stored in attributes
    // during formatting. Normally start with second pmEntry (when the first one is "pmt77",
    // the "Proprietary Information" pmEntry).
    
    for (var i = (firstPMtype == "pmt77") ? 2 : 1; i <= numEntries; i++) {
    	var realStartPage = parseInt(formatting.evaluateXPath("(/pm/content/pmEntry)[" + i + "]/@LEP_start_page"));

    	var numericStartPage = formatting.evaluateXPath("(/pm/content/pmEntry)[" + i + "]/@LEP_numeric_page");
    	if (!numericStartPage) {
    		numericStartPage = 1;
    	}
    	else {
    		numericStartPage = parseInt(numericStartPage);
    	}

    	var pagePrefix = formatting.evaluateXPath("(/pm/content/pmEntry)[" + i + "]/@LEP_page_prefix");
    

    var pmEntryType = formatting.evaluateXPath("(/pm/content/pmEntry)[" + i + "]/@pmEntryType");

    // Sometimes there is an empty Diagrams and Schematics section added: skip it
    if (pmEntryType == "pmt57") {
      continue;
    }
	
    // Output the appropriate subheading followed by the sequence of pages
    var subheading = formatting.evaluateXPath("(/pm/content/pmEntry)[" + i + "]/@LEP_subheading");

    if (!subheading) {
      subheading = "[No subheading]";
    }

    var isIM = doctype == "im" || doctype == "sdom" || doctype == "sdim";
    var isIRM = doctype == "irm";

    // If there is a section suffix, add it to the subheading
    var suffix = formatting.evaluateXPath("(/pm/content/pmEntry)[" + i + "]/@authorityName");
    if (suffix) {
      // If we added a dash in processing, remove it
      if (suffix.substring(0, 1) == '-') {
        suffix = suffix.substring(1);
      }

      // For IRM, add ", PN "
      if (isIRM == "1") {
        subheading = subheading + ", PN " + suffix;
      }
      else {
        subheading = subheading + " " + suffix;
      }
    }

    stream.write( "<row keepWithNext=\"1\"><entry rowsep=\"0\" colsep=\"0\" namest=\"col0\" nameend=\"col3\">" + subheading);

    // If it's an IM/SDOM/SDIM document, and it's a section or an appendix, add the pmEntryTitle
    //stream.write( "<row keepWithNext=\"1\"><entry rowsep=\"0\" colsep=\"0\" namest=\"col0\" nameend=\"col3\">isIM: " + isIM + "; subheading: " + subheading + "</entry></row>"); //debug

    if (isIM && (subheading.lastIndexOf("Section", 0) == 0 || subheading.lastIndexOf("Appendix", 0) == 0)) {
      var pmEntryTitle = formatting.evaluateXPath("(/pm/content/pmEntry)[" + i + "]/pmEntryTitle");
      stream.write( "<_newline/>" + pmEntryTitle);
    }

    stream.write( "</entry></row>");
    
	
    // The "real" end page (PDF page number rather than symbolic, like "INTRO-2")
    // will be the start of the next section or the last page number plus one
    // for the last section. The algoritm outputs pages up to but not including
    // the "realEndPage".
    var realEndPage = (i == numEntries) ? (lastPageNumber + 1)
        : parseInt(formatting.evaluateXPath("(/pm/content/pmEntry)[" + (i + 1) + "]/@LEP_start_page"));

    // Special case for LEP: the ToC is output from the LEP, so need to add the ToC subheading
    // and pages instead of continuing LEP pages up to the following section after the ToC.
    var isLEP = false;
    var tocEndPage;
    
    if (pmEntryType == "pmt56") {
      tocEndPage = realEndPage;
      // debug info
      //stream.write( "<row><entry colsep=\"0\">tocEndPage: " + tocEndPage + "</entry><entry rowsep=\"0\"></entry></row>");
      realEndPage = tocStartPage;
      isLEP = true;
      

      // Use the calculated size of the LEP for the realEndPage [Now using the real ToC start page instead]
      //realEndPage = realStartPage + expectedLEPpages;

      // debug info
      //stream.write( "<row><entry colsep=\"0\">LEP end: " + realEndPage + "; addedPages: " + addedPages + "</entry><entry rowsep=\"0\"/><entry rowsep=\"0\"></entry></row>");

    }
        
        // debug row
        if (isLEP) {
          //stream.write( "<row><entry colsep=\"0\">realStartPage: " + realStartPage + "; tocStartPage: " + tocStartPage + "; expectedLEPpages: " + expectedLEPpages + "</entry><entry rowsep=\"0\" colsep=\"0\"/><entry rowsep=\"0\"></entry></row>"); 
        }
		
        
        var foldoutPages = getFoldoutsForPmEntry(i);
        var changedPages = getChangedPagesForPmEntry(i);

        //if (foldoutPages.length > 0) { stream.write( "<row><entry colsep=\"0\">foldoutPages: " + foldoutPages.join() + "</entry><entry rowsep=\"0\" colsep=\"0\"/><entry rowsep=\"0\"></entry></row>");}
        //if (changedPages.length > 0) { stream.write( "<row><entry colsep=\"0\">changedPages: " + changedPages.join() + "</entry><entry rowsep=\"0\" colsep=\"0\"/><entry rowsep=\"0\"></entry></row>");}

       var hasSectionSuffixes = formatting.evaluateXPath("count(/pm/content/pmEntry[" + i + "][@authorityName!='']) > 0");
       var suffixValue = formatting.evaluateXPath("/pm/content/pmEntry[" + i + "]/@authorityName");
       var pointPageStart = numericStartPage + 997;

       // Main loop to output the page numbers for each pmEntry
       for (var j = realStartPage; j < realEndPage; j++) {
         
         // Check for a foldout and changed pages
         var ndxFoldout = foldoutPages.indexOf(j);
         var ndxChanged = changedPages.indexOf(j);
 
         stream.write( "<row>" );
         if (ndxFoldout != -1) {
           stream.write( "<entry rowsep=\"0\" colsep=\"0\">F</entry>" );
         }
         else {
           stream.write( "<entry rowsep=\"0\" colsep=\"0\"/>" );
         }
         stream.write( "<entry rowsep=\"0\" colsep=\"0\"><!-- _gte:Leaders specLen=\"0.25in\" lenType=\"specified\" leaderType=\"space\"/ -->");
 
         if (pagePrefix) {
           stream.write( pagePrefix + "-");
         }

         var outputPage = numericStartPage;
         if (numericStartPage > pointPageStart) {
           outputPage = pointPageStart + "." + (numericStartPage - pointPageStart);
         }
         stream.write(outputPage);

         if (hasSectionSuffixes == "1" && suffixValue) {
           stream.write( suffixValue);
         }
       
         if (ndxFoldout != -1 && ndxChanged != -1) { // foldout AND changed
           numericStartPage++;
           stream.write("/");
           if (pagePrefix) {
             stream.write(pagePrefix + "-");
           }

           outputPage = numericStartPage;
           if (numericStartPage > pointPageStart) {
             outputPage = pointPageStart + "." + (numericStartPage - pointPageStart);
           }
           stream.write(outputPage);

           if (hasSectionSuffixes == "1" && suffixValue) {
             stream.write(suffixValue);
           }
           stream.write("</entry><entry rowsep=\"0\" colsep=\"0\">*</entry>");
           j++;
         }

         else if (ndxFoldout != -1) { // just foldout
           numericStartPage++;
           stream.write("/");
           if (pagePrefix) {
             stream.write(pagePrefix + "-");
           }

           outputPage = numericStartPage;
           if (numericStartPage > pointPageStart) {
             outputPage = pointPageStart + "." + (numericStartPage - pointPageStart);
           }
           stream.write(outputPage);

           if (hasSectionSuffixes == "1" && suffixValue) {
             stream.write(suffixValue);
           }
           stream.write("</entry><entry rowsep=\"0\" colsep=\"0\"></entry>");
           j++;
         }
		 
         else if (ndxChanged != -1) { // just changed
           stream.write("</entry><entry rowsep=\"0\" colsep=\"0\">*</entry>");
         }
		 
         else {
           stream.write("</entry><entry rowsep=\"0\" colsep=\"0\"/>");
         }
         stream.write("<entry rowsep=\"0\" align='center'>" + pageDate + "</entry></row>");
         numericStartPage++;
       }

       // If we just output the LEP, we now need to follow it with the entries for the ToC
       if (isLEP) {
         stream.write( "<row keepWithNext=\"1\"><entry rowsep=\"0\" colsep=\"0\" namest=\"col0\" nameend=\"col3\">Table of Contents</entry></row>");
         numericStartPage = 1;
		 
         // The end page reported for the ToC seems to be the actual end page, not the one after
         // like the regular sections. So output a page for the end page.itself as well.
         // UPDATE: Not anymore
         for (var j = tocStartPage; j < tocEndPage; j++) {
           stream.write("<row><entry rowsep=\"0\" colsep=\"0\"/><entry rowsep=\"0\" colsep=\"0\"><!-- _gte:Leaders specLen=\"0.25in\" lenType=\"specified\" leaderType=\"space\"/ -->");
           stream.write("TOC-" + numericStartPage + "</entry><entry rowsep=\"0\" colsep=\"0\"/><entry rowsep=\"0\" align='center'>" + pageDate + "</entry></row>");
           numericStartPage++;
         }

         isLEP = false;
      }
   } // END main loop through top-level sections (i)


   stream.write("</tbody></tgroup></table></_sfe:BeforeOrAfterText></_app:Gentext>" );

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
//}

function getFoldoutsForPmEntry(entryNumber) {
  
  var count = parseInt(formatting.evaluateXPath("count((/pm/content/pmEntry)[" + entryNumber + "]//graphic[@LEP_foldout_page])"));
  var foldoutPages = new Array;
  for (var i = 1; i <= count; i++) {
    var foldoutPage = parseInt(formatting.evaluateXPath("((/pm/content/pmEntry)[" + entryNumber + "]//graphic[@LEP_foldout_page])[" + i + "]/@LEP_foldout_page"));
    // The page that gets recorded is before the foldout, so the foldout starts one page later
    // UPDATE: Now it should be accurate already... but leave this for now in case it needs to be reinstated
    //foldoutPage++;
    foldoutPages.push(foldoutPage);
  }
  return foldoutPages;
}


function getChangedPagesForPmEntry(entryNumber) {
  
  var count = parseInt(formatting.evaluateXPath("count((/pm/content/pmEntry)[" + entryNumber + "]//*[@LEP_start_change])"));
  //formatting.output("|" + entryNumber + ";ct:" + count + "|");

  var changedPages = new Array;

  for (var i = 1; i <= count; i++) {
    var startChangePage = parseInt(formatting.evaluateXPath("((/pm/content/pmEntry)[" + entryNumber + "]//*[@LEP_start_change])[" + i + "]/@LEP_start_change"));
    // Every element that has a start change attribute must also have an end change attribute
    var endChangePage = parseInt(formatting.evaluateXPath("((/pm/content/pmEntry)[" + entryNumber + "]//*[@LEP_start_change])[" + i + "]/@LEP_end_change"));

    // Add an entry to the array for every changed page between and including startChangePage and endChangePage:
    for (var j = startChangePage; j <= endChangePage; j++) {
      changedPages.push(j);
    }
  }
  return changedPages;
}

  
/*
// For debugging
// Retrieve change nodes and output the entries
var numEntries = formatting.evaluateXPath("count(/pm/content/pmEntry)");
for (var i = 1; i <= numEntries ; i++) {
  //var pageNo = formatting.evaluateXPath("'x3b2:get-userdata('LEP_start_page', (//pmEntry)[" + i + "]");
  var pageNo = formatting.evaluateXPath("(/pm/content/pmEntry)[" + i + "]/@LEP_start_page");
  formatting.output(i + ". " + pageNo + "\n");
}*/

//formatting.output("Last page no: " + lastPageNumber);


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:LEP

template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "_ufeLEP_everywhere_else0539", false, false );
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:LEP_end_change" style="inline">
<Context priority="0" selector="_ufe:LEP_end_change">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:LEP_end_change

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );

var currentPage = formatting.currentPage.pageNumber;

var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::*[string(@changeType)!=''][1]");
var changeNode = nodeList.nodeListValue.item(0);

// Special case for itemSeqNumber: these are output as gentext, so it won't work to set the
// attribute on the gentext node. Instead, we need to find the original itemSeqNumber in the
// XML content.
if (changeNode.nodeName == "itemSeqNumber") {
	var csnNdx = formatting.evaluateXPath("count(ancestor::catalogSeqNumber[1]/preceding-sibling::catalogSeqNumber) + 1");
	var isnNdx = formatting.evaluateXPath("count(ancestor::itemSeqNumber[1]/preceding-sibling::itemSeqNumber) + 1");
	nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::illustratedPartsCatalog/catalogSeqNumber[" + csnNdx + "]/itemSeqNumber[" + isnNdx + "]");
  changeNode = nodeList.nodeListValue.item(0);
  changeNode.setAttribute('LEP_end_change', currentPage );
}
else {
	changeNode.setAttribute('LEP_end_change', currentPage );
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:LEP_end_change

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:LEP_end_dm_change" style="inline">
<Context priority="0" selector="_ufe:LEP_end_dm_change">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:LEP_end_dm_change

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );

var currentPage = formatting.currentPage.pageNumber;

var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::dmodule[1]");
var changeNode = nodeList.nodeListValue.item(0);

changeNode.setAttribute('LEP_end_change', currentPage );


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:LEP_end_dm_change

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:LEP_save_ToC_start_page" style="inline">
<Context priority="0" selector="_ufe:LEP_save_ToC_start_page">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:LEP_save_ToC_start_page

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

var currentPage = formatting.currentPage.pageNumber;

var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::pm[1]");
var pmNode = nodeList.nodeListValue.item(0);

pmNode.setAttribute('LEP_toc_start_page', parseInt(currentPage));

// New method: [not in 6.0!]
//formatting.pageLabelStore("LEP_toc_start_page");


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:LEP_save_ToC_start_page

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:LEP_start_change" style="inline">
<Context priority="0" selector="_ufe:LEP_start_change">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:LEP_start_change

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );

var currentPage = formatting.currentPage.pageNumber;

// Find the ancestor node with the change specified and set a special attribute that the LEP
// looks for
var nodeList = formatting.currentXMLNode.evaluateXPath("(ancestor::*[string(@changeType)!=''])[1]");
var changeNode = nodeList.nodeListValue.item(0);

// Special case for itemSeqNumber: these are output as gentext, so it won't work to set the
// attribute on the gentext node. Instead, we need to find the original itemSeqNumber in the
// XML content.
if (changeNode.nodeName == "itemSeqNumber") {
	var csnNdx = formatting.evaluateXPath("count(ancestor::catalogSeqNumber[1]/preceding-sibling::catalogSeqNumber) + 1");
	var isnNdx = formatting.evaluateXPath("count(ancestor::itemSeqNumber[1]/preceding-sibling::itemSeqNumber) + 1");
	nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::illustratedPartsCatalog/catalogSeqNumber[" + csnNdx + "]/itemSeqNumber[" + isnNdx + "]");
  changeNode = nodeList.nodeListValue.item(0);
  changeNode.setAttribute('LEP_start_change', currentPage );
}
else {
	changeNode.setAttribute('LEP_start_change', currentPage );
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:LEP_start_change

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:LEP_start_dm_change_dm" style="inline">
<Context priority="0" selector="_ufe:LEP_start_dm_change_dm">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:LEP_start_dm_change_dm

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );

var currentPage = formatting.currentPage.pageNumber;

var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::dmodule[1]");
var changeNode = nodeList.nodeListValue.item(0);

changeNode.setAttribute('LEP_start_change', currentPage );


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:LEP_start_dm_change_dm

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:LEP_subheading_style" style="block">
<Context priority="0" selector="_ufe:LEP_subheading_style">
<BaseProperties>
<Font size="11pt" weight="bold"/>
<Highlight textUnderlineColor="#000000" textUnderlineStyle="underline"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:LEP_title_style" style="block">
<Context
comment="For some reason the LEP title sits slightly below the top of the frame, so apply a little negative space above"
priority="0" selector="_ufe:LEP_title_style">
<BaseProperties>
<Font size="15" weight="bold"/>
<Alignment align="center"/>
<LineSpacing lineHeight="14pt"/>
<SpaceBefore optimum="-2pt" precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:LegendKey" style="block">
<Context priority="0" selector="_ufe:LegendKey">
<BaseProperties>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<Keep withNext="4"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:LegendWrapper" style="block">
<Context priority="0" selector="_ufe:LegendWrapper">
<BaseProperties>
<Breaks blockOrInline="block" startNew="page"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="ancestor::figure/graphic[last()]/@reproductionWidth='355.6 mm'"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Default_Page_Set" startNew="page"/></BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="number(ancestor::pmEntry[last()]/@startat) >= 1000"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Page_Set" startNew="page"/>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:LeveledParaTitle" style="inline">
<Context priority="20" selector="levelledPara/_ufe:LeveledParaTitle">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa4c9bc53-ff5f-4bba-93b0-fee35d0ef2e1"><_gte:Target lang="en"
><_gte:ElementLabelAndNumber display="A"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="A"
numberXPath="count(preceding-sibling::levelledPara)+count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/description/levelledPara)+1"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A1bad24bd-f824-4be2-aa2d-2af941fd67ed"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:LeveledParaTitle">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4d84a949-bdbb-4a5e-b6d4-bafb54dc1bd3"><_gte:Target lang="en"
><_gte:ElementLabelAndNumber display="A."/><_gte:ElementContent
include="elementAndContent" xpath="ancestor::title"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT) '.'"
numberAlignment="left" numberStyle="A" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A9deb9419-b16a-4c7b-808f-b880bc3e6411"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
comment="Originally in the AB (CMP) stylesheet this was used for a separate front-matter section. In ATA, we'll use it to
output the generated List of Acronyms and Abbreviations"
name="_ufe:ListOfAbbreviations" style="block">
<Context priority="6" selector="_ufe:ListOfAbbreviations[@bak]">
<BaseProperties>
<Indent leftIndent="0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A8618e797-4b9e-4928-9c42-0b883d504f16"><_gte:Target lang="en"
><_ufe:CentredHeading><_gte:Font Posture="upright">List of abbreviations</_gte:Font
></_ufe:CentredHeading><_dtd:table frame="topbot"><_dtd:tgroup cols="2"
><?PubTbl tgroup cbmarg="5.00pt"?><_dtd:colspec colname="col1"
colwidth="2.0in" colsep="0"/><_dtd:colspec colname="col2"
colwidth="2.00*"/><_dtd:thead><_dtd:row rowsep="0"><_dtd:entry
align="center" valign="top" rowsep="1">Abbreviation</_dtd:entry><_dtd:entry
align="left" valign="top" rowsep="1"><_ufe:AbbreviationDefinitionHeading
>Definition</_ufe:AbbreviationDefinitionHeading></_dtd:entry></_dtd:row
></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry><_gte:ElementContent
include="contentOnly"
xpath="(//acronym[@acronymType='at01']/acronymTerm)[1]"/></_dtd:entry
><_dtd:entry><_ufe:TitleCase><_gte:ElementContent include="contentOnly"
xpath="(//acronym[@acronymType='at01']/acronymDefinition)[1]"/></_ufe:TitleCase
></_dtd:entry></_dtd:row><_dtd:row><_dtd:entry>ASIC</_dtd:entry><_dtd:entry
>Application Specific Integrated Circuit</_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:ListOfAbbreviations">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A5ceee8ab-c6a3-40dd-9e33-a2dd675aee8f"><_gte:Target lang="en"
><_ufe:CentredHeading><_gte:Font Posture="upright">List of abbreviations</_gte:Font
></_ufe:CentredHeading><_dtd:table frame="topbot"><_dtd:tgroup cols="2"
><?PubTbl tgroup cbmarg="5.00pt"?><_dtd:colspec colname="col1"
colwidth="2.0in" colsep="0"/><_dtd:colspec colname="col2"
colwidth="2.00*"/><_dtd:thead><_dtd:row rowsep="0"><_dtd:entry
align="center" valign="top" rowsep="1">Abbreviation</_dtd:entry><_dtd:entry
align="left" valign="top" rowsep="1"><_ufe:AbbreviationDefinitionHeading
>Definition</_ufe:AbbreviationDefinitionHeading></_dtd:entry></_dtd:row
></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry><_gte:ElementContent
include="contentOnly"
xpath="(//acronym[@acronymType='at01']/acronymTerm)[1]"/></_dtd:entry
><_dtd:entry><_ufe:TitleCase><_gte:ElementContent include="contentOnly"
xpath="(//acronym[@acronymType='at01']/acronymDefinition)[1]"/></_ufe:TitleCase
></_dtd:entry></_dtd:row><_dtd:row><_dtd:entry>ASIC</_dtd:entry><_dtd:entry
>Application Specific Integrated Circuit</_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ListOfAbbreviations

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;

// The table should be indented with its parent, not left-aligned like normal tables
//block.indentStart = '0pt';
//block.absoluteStart = 2;

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfAbbreviations:_ufeListOfAbbreviations_everywhere1F79:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfAbbreviations:_ufeListOfAbbreviations_everywhere1F79:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A5ceee8ab-c6a3-40dd-9e33-a2dd675aee8f\"><_gte:Target lang=\"en\">" );
      stream.write( "<table frame=\"topbot\"><title>List of Acronyms and Abbreviations</title><tgroup cols=\"2\"><?PubTbl tgroup cbmarg=\"5.00pt\"?><colspec colname=\"col1\" colwidth=\"2.0in\" colsep=\"0\"/><colspec colname=\"col2\" colwidth=\"2.00*\"/><thead><row rowsep=\"0\">" );
      stream.write( "<entry align=\"center\" valign=\"top\" rowsep=\"1\">Abbreviation</entry><entry align=\"left\" valign=\"top\" rowsep=\"1\"><_ufe:AbbreviationDefinitionHeading>Definition</_ufe:AbbreviationDefinitionHeading></entry></row>" );
      stream.write( "</thead><tbody>");

      // Generate the List of Abbreviations using a script.

      var numRows = formatting.evaluateXPath("count(/pm/content//acronym[@acronymType='at01'])");

      // First construct a 2-dimensional array to store the information about each
      // acronym (its abbreviation and its order in document (to find it again))
      // and then we can sort it. We don't need to "de-dup" it since the preprocessing
      // script already makes only the first occurrence of each acronym be marked up.
      var acronyms = new Array();

      for (var i = 0; i < numRows; i++) {
      	var abbrev = formatting.evaluateXPath("(/pm/content//acronym[@acronymType='at01'])[" + (i + 1) + "]/acronymTerm");
      	acronyms[i] = [abbrev, i + 1]; // save the order of occurrence so we can find it again after sorting
      }
      acronyms.sort(function(a,b) { return a[0].localeCompare(b[0]); });

      for (var i = 0; i < numRows; i++) {
      	stream.write( "<row rowsep=\"0\">");

      	stream.write( "<entry>" + acronyms[i][0] + "</entry>" );

      	var xpath = "(/pm/content//acronym[@acronymType='at01'])[" + acronyms[i][1] + "]/acronymDefinition";
      	stream.write( "<entry><_ufe:TitleCase><_gte:ElementContent xpath=\"" + xpath + "\" include=\"contentOnly\"/></_ufe:TitleCase></entry>" );
      	stream.write( "</row>" );
      }

      stream.write( "</tbody></tgroup></table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ListOfAbbreviations

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ListOfEffectiveDataModules" style="block">
<Context priority="0" selector="_ufe:ListOfEffectiveDataModules">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Front_Matter_Page_Set"
pageNumber="continue" startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae9d5ee0b-97a2-4d8a-9a67-3c0d7226d91b"><_gte:Target lang="en"
><_ufe:CentredHeading><_gte:Font Posture="upright">List of effective
data modules</_gte:Font></_ufe:CentredHeading><_ufe:Centre><_gte:Font
TypeSize="8pt">The listed documents are included in issue<_gte:XPathString
expr="/pm/identAndStatusSection/pmAddress/pmIdent/issueInfo/@issueNumber"
/>, dated<_gte:XPathString
expr="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate/@year"
/>-<_gte:XPathString
expr="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate/@month"
/>-<_gte:XPathString
expr="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate/@day"
/>, of this publication.</_gte:Font></_ufe:Centre><_ufe:NumberedHeading
>1. Descriptive information</_ufe:NumberedHeading><_ufe:IndentedPara
>The table gives the list of effective data modules with their status
for this publication in relation to the previous publication (status
column):</_ufe:IndentedPara><_ufe:IndentedPara>- “N” indicates a new
data module. This data module is an additional data module compared
with the last issue of this publication.</_ufe:IndentedPara><_ufe:IndentedPara
>-“C” indicates a changed data module. This data module has some form
of technical change compared with the last issue of this publication.</_ufe:IndentedPara
><_ufe:IndentedPara>-Empty status column indicates an unchanged data
module. This data module does not change compared with the last issue
of this publication.</_ufe:IndentedPara><_ufe:NumberedHeading>2. List
of effective data modules</_ufe:NumberedHeading><_dtd:table
frame="topbot"><_dtd:tgroup cols="3"><_dtd:colspec colname="col1"
colwidth="3.00in" colsep="0"/><_dtd:colspec colname="col2"
colwidth="2.00in" colsep="0" align="center"/><_dtd:colspec
colname="col3" colwidth="1.00in" align="center"/><_dtd:thead><_dtd:row
rowsep="0"><_dtd:entry valign="top" rowsep="1">Data module code<_dtd:_newline
/>Data module title</_dtd:entry><_dtd:entry valign="top" rowsep="1"
>Issue Number</_dtd:entry><_dtd:entry valign="top" rowsep="1">Status</_dtd:entry
></_dtd:row></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry
>AJ-A-42–11–12–00AAA-021A-D<_dtd:_newline/>Copyright</_dtd:entry><_dtd:entry
>001</_dtd:entry><_dtd:entry>N</_dtd:entry></_dtd:row><_dtd:row><_dtd:entry
>4</_dtd:entry><_dtd:entry>5</_dtd:entry><_dtd:entry>6</_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ListOfEffectiveDataModules

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
contextProp.startNew = 2; //start new page
contextProp.pageType = 0;
//contextProp.pageNumber = 1;
contextProp.pageSet = 'Front_Matter_Page_Set';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfEffectiveDataModules:_ufeListOfEffectiveDataModules_everywher58B4:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfEffectiveDataModules:_ufeListOfEffectiveDataModules_everywher58B4:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Ae9d5ee0b-97a2-4d8a-9a67-3c0d7226d91b\"><_gte:Target lang=\"en\"><_ufe:CentredHeading><_gte:Font Posture=\"upright\"><_ufe:FrontToCTitle><_ufe:FrontToCStyle>List of effective data modules</_ufe:FrontToCStyle></_ufe:FrontToCTitle></_gte:Font>" );
      stream.write( "</_ufe:CentredHeading><_ufe:Centre><_gte:Font TypeSize=\"8pt\">The listed documents are included in issue <_gte:XPathString expr=\"/pm/identAndStatusSection/pmAddress/pmIdent/issueInfo/@issueNumber\"/>, dated <_gte:XPathString expr=\"/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate/@year\"/>" );
      stream.write( "-<_gte:XPathString expr=\"/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate/@month\"/>-<_gte:XPathString expr=\"/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate/@day\"/>, of this publication.</_gte:Font></_ufe:Centre><_ufe:NumberedHeading>1. Descriptive information</_ufe:NumberedHeading>" );
      stream.write( "<_ufe:IndentedPara>The table gives the list of effective data modules with their status for this publication in relation to the previous publication (status column):</_ufe:IndentedPara><_ufe:IndentedPara>" );
      stream.write( "- “N” indicates a new data module. This data module is an additional data module compared with the last issue of this publication.</_ufe:IndentedPara><_ufe:IndentedPara>-“C” indicates a changed data module. This data module has some form of technical change compared with the last issue of this publication.</_ufe:IndentedPara>" );
      stream.write( "<_ufe:IndentedPara>-Empty status column indicates an unchanged data module. This data module does not change compared with the last issue of this publication.</_ufe:IndentedPara><_ufe:NumberedHeading>2. List of effective data modules</_ufe:NumberedHeading>" );
      stream.write( "<table frame=\"topbot\"><tgroup cols=\"4\"><colspec colname=\"col1\" colwidth=\"100.00*\" colsep=\"0\"/><colspec colname=\"col2\" colwidth=\"1.75in\" colsep=\"0\" align=\"center\"/><colspec colname=\"col3\" colwidth=\"1.75in\" colsep=\"0\"/>" );
      stream.write( "<colspec colname=\"col4\" colwidth=\"1.00in\" align=\"center\"/><thead><row rowsep=\"0\"><entry valign=\"top\" rowsep=\"1\">Data module code<_newline/>Data module title</entry><entry valign=\"top\" rowsep=\"1\">Issue Number</entry>" );
      stream.write( "<entry colsep=\"0\" align=\"center\" valign=\"top\" rowsep=\"1\">Issue Date</entry><entry valign=\"top\" rowsep=\"1\">Status</entry></row></thead><tbody>");

      // Generate the List of effective data modules using a script.

      var numRows = formatting.evaluateXPath("count(//dmContent[dmodule])");
      for (var i = 1; i <= numRows; i++) {
      	stream.write( "<row rowsep=\"0\">");
      	// First entry is aligned left

      	// The first cell has the data module code (DMC) and title. The DMC is constructed
      	// and used as an id for the dmodule by the pre-processing script that builds the
      	// "combined" file (to use as a target for other dmRefs to link to). So we don't
      	// have to construct it here from the various attributes of the code element... just
      	// grab the dmodule's id.

      	var xpath = "(//dmContent[dmodule])[" + i + "]/dmodule/@id";
      	//xpath = "(//dmContent)[" + i + "]/dmodule/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName";
      	var techName = formatting.evaluateXPath("(//dmContent[dmodule])[" + i + "]/dmodule/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName");
      	var infoName = formatting.evaluateXPath("(//dmContent[dmodule])[" + i + "]/dmodule/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/infoName");

      	stream.write( "<entry>" + formatting.evaluateXPath(xpath) + "<_newline/>" + infoName + " - " + techName + "</entry>" );
      	
      	xpath = "(//dmContent[dmodule])[" + i + "]/dmodule/identAndStatusSection/dmAddress/dmIdent/issueInfo/@issueNumber";
      	stream.write( "<entry align=\"center\">" + formatting.evaluateXPath(xpath) + "</entry>" );

      	xpath = "(//dmContent[dmodule])[" + i + "]/dmodule/identAndStatusSection/dmAddress/dmAddressItems/issueDate/@day";
      	var day = formatting.evaluateXPath(xpath);
      	xpath = "(//dmContent[dmodule])[" + i + "]/dmodule/identAndStatusSection/dmAddress/dmAddressItems/issueDate/@month";
      	var month = formatting.evaluateXPath(xpath);
      	xpath = "(//dmContent[dmodule])[" + i + "]/dmodule/identAndStatusSection/dmAddress/dmAddressItems/issueDate/@year";
      	var year = formatting.evaluateXPath(xpath);

      	if (year && year != "") {
      		stream.write( "<entry align=\"center\">" + year + "-" + month + "-" + day + "</entry>" );
      	} else {
      		stream.write( "<entry align=\"center\"></entry>" );
      	}

      	// The last column is the "Status", but we don't know where that comes from yet, so just output an
      	// empty entry for now. UPDATE: Output "N" instead.
      	stream.write( "<entry>N</entry>" );

      	stream.write( "</row>" );
      }

      stream.write( "</tbody></tgroup></table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ListOfEffectiveDataModules

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ListOfFiguresHeadings" style="block">
<Context priority="0" selector="_ufe:ListOfFiguresHeadings">
<BaseProperties>
<SpaceAfter optimum="10pt" precedence="force"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A91e4a04a-3851-41c4-974d-b1fb4cdf6ab6"><_gte:Target lang="en"
><_gte:Font Underline="single" ScoreSpace="no" Weight="bold"
TypeSize="12pt" Strikethru="no">Figure<_gte:Leaders leaderType="text"
lenType="fit" minLen="0.00pt" leaderText=" " vshift="0.00pt"/>Description<_gte:Leaders
leaderType="text" lenType="fit" minLen="0.00pt" leaderText=" "
vshift="0.00pt"/>Page</_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ListOfFiguresTitle" style="block">
<Context priority="0" selector="_ufe:ListOfFiguresTitle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="14pt" weight="bold"/>
<Alignment align="center"/>
<SpaceBefore optimum="10pt"/>
<SpaceAfter optimum="4pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1c8f755c-3689-4c51-9a01-09507c3251f3"><_gte:Target lang="en"
><_ufe:FrontToCTitle><_ufe:FrontToCStyle><_gte:Font TypeSize="12pt"
>LIST OF FIGURES</_gte:Font></_ufe:FrontToCStyle></_ufe:FrontToCTitle
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ListOfIPLFiguresHeadings" style="block">
<Context priority="0" selector="_ufe:ListOfIPLFiguresHeadings">
<BaseProperties>
<SpaceAfter optimum="10pt" precedence="force"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aef63b9a4-5e92-4683-b983-8da72a9e2201"><_gte:Target lang="en"
><_dtd:table frame="bottom"><_dtd:tgroup cols="1"><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt"?><_dtd:colspec colname="col1"
/><_dtd:tbody><_dtd:row><_dtd:entry valign="bottom"><_gte:Font
Underline="no" Weight="bold" TypeSize="12pt" Strikethru="no">IPL Figure</_gte:Font
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ListOfSpares" style="block">
<Context priority="0" selector="_ufe:ListOfSpares">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Front_Matter_Page_Set"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Afd20aa06-8e0c-46d4-805e-7c4de727de4a"><_gte:Target lang="en"
><_ufe:CentredHeading><_gte:Font Posture="upright">List of spares</_gte:Font
></_ufe:CentredHeading><_dtd:table frame="topbot"><_dtd:tgroup cols="2"
><?PubTbl tgroup cbmarg="5.00pt"?><_dtd:colspec colname="col1"
colwidth="2.0in" colsep="0"/><_dtd:colspec colname="col2"
colwidth="2.00*"/><_dtd:thead><_dtd:row rowsep="0"><_dtd:entry
align="left" valign="top" rowsep="1">Nomenclature</_dtd:entry><_dtd:entry
align="left" valign="top" rowsep="1">Part number</_dtd:entry></_dtd:row
></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry><_gte:ElementContent
include="contentOnly" xpath="(//spareDescr)[1]/name"/></_dtd:entry
><_dtd:entry><_gte:AttributeContent attr="partNumberValue"
xpath="(//spareDescr)[1]/partRef"/></_dtd:entry></_dtd:row><_dtd:row
><_dtd:entry>ASIC</_dtd:entry><_dtd:entry>Application Specific Integrated
Circuit</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="It's common for there to be no spares, so make a condition for that here. Not sure what
exactly what to do - maybe omit page altogether for now.">
<Tests>
<XPathTest expression="not(//spareDescr)"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af83bfee5-752a-4891-8654-b7cd8b1b8079"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ListOfSpares

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
contextProp.startNew = 2; //start new page
contextProp.pageType = 0;
contextProp.pageSet = 'Front_Matter_Page_Set';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfSpares:_ufeListOfSpares_everywhereA39E:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfSpares:_ufeListOfSpares_everywhereA39E:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Afd20aa06-8e0c-46d4-805e-7c4de727de4a\"><_gte:Target lang=\"en\"><_ufe:CentredHeading><_gte:Font Posture=\"upright\"><_ufe:FrontToCTitle><_ufe:FrontToCStyle>List of spares</_ufe:FrontToCStyle></_ufe:FrontToCTitle></_gte:Font></_ufe:CentredHeading>" );
      stream.write( "<table frame=\"topbot\"><tgroup cols=\"2\"><?PubTbl tgroup cbmarg=\"5.00pt\"?><colspec colname=\"col1\" colwidth=\"3.5in\" colsep=\"0\"/><colspec colname=\"col2\" colwidth=\"2.00*\"/><thead><row rowsep=\"0\"><entry align=\"left\" valign=\"top\" rowsep=\"1\">" );
      stream.write( "Nomenclature</entry><entry align=\"left\" valign=\"top\" rowsep=\"1\">Part number</entry></row></thead><tbody>");

      // Write out the list of spares by searching for spareDesc in the document.
      // We need to "de-dup" them, and possibly sort them too.

      var numRows = formatting.evaluateXPath("count(//spareDescr)");
      var dups = new Array(); // to keep track of duplicates
      var spares = new Array();
      var xpath;

      for (var i = 0; i < numRows; i++) {

      	// Get the next spare:
      	//xpath = "(//spareDescr)[" + (i + 1) + "]/partRef/@partNumberValue";
      	//var partNumber = formatting.evaluateXPath(xpath);
      	xpath = "(//spareDescr)[" + (i + 1) + "]/name";
      	var spareName = formatting.evaluateXPath(xpath);

      	// Check if it's a duplicate of a spare we're already output (UPDATE: use name instead of part number):
      	var isDup = 0;
      	for (var k = 0; k < dups.length; k++) {
      		if (dups[k] == spareName) {  //partNumber) {
      			isDup = 1;
      			break;
      		}
      	}
      	if (isDup) { continue; }

      	dups.push(spareName); //partNumber);

      	spares.push([spareName, i+1]); // save the order of occurrence so we can find it again after sorting. i+1 since XPath is 1-based.

      }

      // Sort the array by name
      spares.sort(function(a,b) { return a[0].toUpperCase().localeCompare(b[0].toUpperCase()); });

      for (var i = 0; i < spares.length; i++) {
      	var partNumber;
      	var spareName;

      	if (!spares[i]) {
      	  spareName = "ERROR"; 
      	  partNumber = "spares[i] is undefined for i = " + i;
      	}
      	else {
      	  spareName = spares[i][0];
      	  xpath = "(//spareDescr)[" + spares[i][1] + "]/partRef/@partNumberValue";
      	  partNumber = formatting.evaluateXPath(xpath);
      	}

      	stream.write( "<row rowsep=\"0\">");

      	stream.write( "<entry>" + spareName + "</entry>" );
      	stream.write( "<entry>" + partNumber + "</entry>" );

      	stream.write( "</row>" );
      }

      stream.write( "</tbody></tgroup></table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( not(//spareDescr) )", 130, template.primaryStream, null ) != 0 )
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfSpares:_ufeListOfSpares_everywhereA39E:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfSpares:_ufeListOfSpares_everywhereA39E:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Af83bfee5-752a-4891-8654-b7cd8b1b8079\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
   }
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ListOfSpares

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ListOfSuppliers" style="block">
<Context priority="0" selector="_ufe:ListOfSuppliers">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Front_Matter_Page_Set"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Acad8da65-7280-437b-9ac2-2f41ff2b1c01"><_gte:Target lang="en"
><_ufe:CentredHeading><_gte:Font Posture="upright">List of suppliers</_gte:Font
></_ufe:CentredHeading><_dtd:table frame="topbot"><_dtd:tgroup cols="2"
><?PubTbl tgroup cbmarg="5.00pt"?><_dtd:colspec colname="col1"
colwidth="2.0in" colsep="0"/><_dtd:colspec colname="col2"
colwidth="2.00*"/><_dtd:thead><_dtd:row rowsep="0"><_dtd:entry
align="left" valign="top" rowsep="1">CAGE code</_dtd:entry><_dtd:entry
align="left" valign="top" rowsep="1">Supplier</_dtd:entry></_dtd:row
></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry><_gte:AttributeContent
attr="manufacturerCodeValue"
xpath="/pm/commonRepository/enterpriseRepository/enterpriseSpec[1]/enterpriseIdent"
/></_dtd:entry><_dtd:entry><_gte:ElementContent include="contentOnly"
xpath="/pm/commonRepository/enterpriseRepository/enterpriseSpec[1]/enterpriseName"
/>, <_gte:ElementContent include="contentOnly"
xpath="/pm/commonRepository/enterpriseRepository/enterpriseSpec[1]/businessUnit/businessUnitAddress/street"
/>, <_gte:ElementContent include="contentOnly"
xpath="/pm/commonRepository/enterpriseRepository/enterpriseSpec[1]/businessUnit/businessUnitAddress/postalZipCode"
/>, <_gte:ElementContent include="contentOnly"
xpath="/pm/commonRepository/enterpriseRepository/enterpriseSpec[1]/businessUnit/businessUnitAddress/city"
/>, <_gte:ElementContent include="contentOnly"
xpath="/pm/commonRepository/enterpriseRepository/enterpriseSpec[1]/businessUnit/businessUnitAddress/state"
/>, <_gte:ElementContent include="contentOnly"
xpath="/pm/commonRepository/enterpriseRepository/enterpriseSpec[1]/businessUnit/businessUnitAddress/country"
/></_dtd:entry></_dtd:row><_dtd:row><_dtd:entry>ASIC</_dtd:entry><_dtd:entry
>Application Specific Integrated Circuit</_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ListOfSuppliers

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
contextProp.startNew = 2; //start new page
contextProp.pageType = 0;
contextProp.pageSet = 'Front_Matter_Page_Set';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfSuppliers:_ufeListOfSuppliers_everywhere8977:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfSuppliers:_ufeListOfSuppliers_everywhere8977:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Acad8da65-7280-437b-9ac2-2f41ff2b1c01\"><_gte:Target lang=\"en\"><_ufe:CentredHeading><_gte:Font Posture=\"upright\"><_ufe:FrontToCTitle><_ufe:FrontToCStyle>List of suppliers</_ufe:FrontToCStyle></_ufe:FrontToCTitle></_gte:Font></_ufe:CentredHeading>" );

      // Build a list of manufacturer codes referenced through supplies and tools
      // in the support equipment and consumables tables. Supplies first:
      var numSupplies = formatting.evaluateXPath("count(/pm/content//supplyDescr)");

      var manufacturerCodes = new Array();

      for (var i = 1; i <= numSupplies; i++) {
      	var supplyNumber = formatting.evaluateXPath("(/pm/content//supplyDescr)[" + i + "]/supplyRef/@supplyNumber");

      	var manufacturerCode = formatting.evaluateXPath("/pm/commonRepository/supplyRepository/supplySpec[supplyIdent/@supplyNumber='" + supplyNumber + "']/enterpriseGroup/enterpriseInfo/enterpriseRef/@manufacturerCodeValue");

//stream.write( "'MF'" + manufacturerCode);

      	// If there is an manufacturer code, and it doesn't exist in the array already, then add it.
      	if (manufacturerCode && manufacturerCodes.indexOf(manufacturerCode) == -1) {
      		manufacturerCodes.push(manufacturerCode);
      	}
      }

      // Now add manufacturer codes referenced through tools:
      var numTools = formatting.evaluateXPath("count(/pm/content//supportEquipDescr)");
      //stream.write( "NT" + numTools);

      for (var i = 1; i <= numTools; i++) {
      	var toolNumber = formatting.evaluateXPath("(/pm/content//supportEquipDescr)[" + i + "]/toolRef/@toolNumber");
      	var manufacturerCode = formatting.evaluateXPath("/pm/commonRepository/toolRepository/toolSpec[toolIdent/@toolNumber='" + toolNumber + "']/procurementData/enterpriseRef/@manufacturerCodeValue");

      	// If there is an manufacturer code, and it doesn't exist in the array already, then add it.
      	if (manufacturerCode && manufacturerCodes.indexOf(manufacturerCode) == -1) {
      		manufacturerCodes.push(manufacturerCode);
      	}
      }

      // Generate the List of suppliers from the enterprise repository using a script.
      var numRows = formatting.evaluateXPath("count(/pm/commonRepository/enterpriseRepository/enterpriseSpec)");

      // First construct an array to store the information about each supply
      // (including its order in document to find it again) and then we can sort it.
      var suppliers = new Array();

      for (var i = 1; i <= numRows; i++) {
      	// We'll sort by its name
      	var supplierCode = formatting.evaluateXPath("/pm/commonRepository/enterpriseRepository/enterpriseSpec[" + i + "]/enterpriseIdent/@manufacturerCodeValue");

      	// Using i starting at 1 for XPath lookup, so use i-1 for the array index (starting at 0)
      	suppliers[i-1] = [supplierCode, i]; // save the order of occurrence so we can find it again after sorting
      }
      // Sort the array by name
      suppliers.sort(function(a,b) { return a[0].toUpperCase().localeCompare(b[0].toUpperCase()); });

      stream.write( "<table frame=\"topbot\"><tgroup cols=\"2\"><?PubTbl tgroup cbmarg=\"5.00pt\"?><colspec colname=\"col1\" colwidth=\"2.0in\" colsep=\"0\"/><colspec colname=\"col2\" colwidth=\"2.00*\"/><thead><row rowsep=\"0\"><entry align=\"left\" valign=\"top\" rowsep=\"1\">" );
      stream.write( "CAGE code</entry><entry align=\"left\" valign=\"top\" rowsep=\"1\">Supplier</entry></row></thead><tbody>");

      for (var i = 0; i < numRows; i++) {

      	// Now instead of using the order of occurrence in the document (with index i),
      	// look up the index to use in the sorted array:
      	var ndx = suppliers[i][1];

/* Old version of excluding codes not used in the document:
      	xpath = "count(//*[name()!='enterpriseIdent'][@manufacturerCodeValue='" + suppliers[i][0] + "'])";
      	var mfrCount = formatting.evaluateXPath(xpath);
      	xpath = "count(//*[@enterpriseCode='" + suppliers[i][0] + "'])";
      	var entCount = formatting.evaluateXPath(xpath);
      	if (mfrCount == 0 && entCount == 0) {
      		continue;
      	}
*/

      	// Check to make sure it's referred to in the document (otherwise don't include in the list):
      	// UPDATE: New logic to include codes that are used in the main part of the document:
      	xpath = "count(/pm/content//*[@manufacturerCodeValue='" + suppliers[i][0] + "'])";
      	var mfrCodeCount = formatting.evaluateXPath(xpath);

      	xpath = "count(/pm/content//*[@enterpriseCode='" + suppliers[i][0] + "'])";
      	var enterpriseCount = formatting.evaluateXPath(xpath);

      	// Lookup if a supply (supplyDescr in the consumables table) or tool (toolRef in the
      	// support equipment table) specifies this manufacturer code in the supply or tool
      	// repository:

      	if (mfrCodeCount == 0 && enterpriseCount == 0 && manufacturerCodes.indexOf(suppliers[i][0]) == -1) {
      		continue;
      	}

      	stream.write( "<row rowsep=\"0\">");

      	// The first cell is the CAGE code
      	var xpath = "/pm/commonRepository/enterpriseRepository/enterpriseSpec[" + ndx + "]/enterpriseIdent/@manufacturerCodeValue";
      	stream.write( "<entry>" + formatting.evaluateXPath(xpath) + "</entry>" );

      	// The second cell is an amalgamation of the enterprise name and address:

      	xpath = "/pm/commonRepository/enterpriseRepository/enterpriseSpec[" + ndx + "]/enterpriseName";
      	var nameAndAddress = formatting.evaluateXPath(xpath);

      	xpath = "/pm/commonRepository/enterpriseRepository/enterpriseSpec[" + ndx + "]/businessUnit/businessUnitAddress/street";
      	var value = formatting.evaluateXPath(xpath);
      	if (value != "")
      		nameAndAddress += ", " + value;

      	xpath = "/pm/commonRepository/enterpriseRepository/enterpriseSpec[" + ndx + "]/businessUnit/businessUnitAddress/city";
      	var value = formatting.evaluateXPath(xpath);
      	if (value != "")
      		nameAndAddress += ", " + value;

      	xpath = "/pm/commonRepository/enterpriseRepository/enterpriseSpec[" + ndx + "]/businessUnit/businessUnitAddress/state";
      	var value = formatting.evaluateXPath(xpath);
      	if (value != "")
      		nameAndAddress += ", " + value;

      	xpath = "/pm/commonRepository/enterpriseRepository/enterpriseSpec[" + ndx + "]/businessUnit/businessUnitAddress/postalZipCode";
      	var value = formatting.evaluateXPath(xpath);
      	if (value != "")
      		nameAndAddress += ", " + value;

      	xpath = "/pm/commonRepository/enterpriseRepository/enterpriseSpec[" + ndx + "]/businessUnit/businessUnitAddress/country";
      	var value = formatting.evaluateXPath(xpath);
      	if (value != "")
      		nameAndAddress += ", " + value;

      	stream.write( "<entry>" + nameAndAddress + "</entry>" );

      	stream.write( "</row>" );
      }

      stream.write( "</tbody></tgroup></table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }

   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ListOfSuppliers

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ListOfSupplies" style="block">
<Context priority="0" selector="_ufe:ListOfSupplies">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Front_Matter_Page_Set"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad8fb9497-54d4-4a00-9497-566e447620fb"><_gte:Target lang="en"
><_ufe:CentredHeading><_gte:Font Posture="upright"><_ufe:FrontToCTitle
><_ufe:FrontToCStyle>List of supplies</_ufe:FrontToCStyle></_ufe:FrontToCTitle
></_gte:Font></_ufe:CentredHeading><_dtd:table frame="topbot"><_dtd:tgroup
cols="3"><?PubTbl tgroup cbmarg="5.00pt"?><_dtd:colspec colname="col1"
colwidth="3.0in" colsep="0"/><_dtd:colspec colname="COLSPEC0"
colwidth="2.50in"/><_dtd:colspec colname="col2" colwidth="4.00*"/><_dtd:thead
><_dtd:row rowsep="0"><_dtd:entry align="left" valign="top" rowsep="1"
>Part name</_dtd:entry><_dtd:entry colsep="0" align="left" valign="top"
rowsep="1">Part number</_dtd:entry><_dtd:entry align="left" valign="top"
rowsep="1">CAGE code</_dtd:entry></_dtd:row></_dtd:thead><_dtd:tbody
><_dtd:row rowsep="0"><_dtd:entry><_gte:ElementContent
include="contentOnly"
xpath="/pm/commonRepository/supplyRepository/supplySpec[1]/name"/></_dtd:entry
><_dtd:entry colsep="0"><_gte:AttributeContent attr="supplyNumber"
xpath="/pm/commonRepository/supplyRepository/supplySpec[1]/supplyIdent"
/></_dtd:entry><_dtd:entry><_gte:AttributeContent
attr="manufacturerCodeValue"
xpath="/pm/commonRepository/supplyRepository/supplySpec[1]/enterpriseGroup/enterpriseInfo[1]/enterpriseRef"
/></_dtd:entry></_dtd:row><_dtd:row><_dtd:entry>ASIC</_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry>Application Specific Integrated
Circuit</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ListOfSupplies

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
contextProp.startNew = 2; //start new page
contextProp.pageType = 0;
contextProp.pageSet = 'Front_Matter_Page_Set';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfSupplies:_ufeListOfSupplies_everywhere0AC5:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfSupplies:_ufeListOfSupplies_everywhere0AC5:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Ad8fb9497-54d4-4a00-9497-566e447620fb\"><_gte:Target lang=\"en\"><_ufe:CentredHeading><_gte:Font Posture=\"upright\"><_ufe:FrontToCTitle><_ufe:FrontToCStyle>List of supplies</_ufe:FrontToCStyle></_ufe:FrontToCTitle></_gte:Font></_ufe:CentredHeading>" );
      stream.write( "<table frame=\"topbot\"><tgroup cols=\"3\"><?PubTbl tgroup cbmarg=\"5.00pt\"?><colspec colname=\"col1\" colwidth=\"3.0in\" colsep=\"0\"/><colspec colname=\"COLSPEC0\" colwidth=\"2.50in\"/><colspec colname=\"col2\" colwidth=\"4.00*\"/>" );
      stream.write( "<thead><row rowsep=\"0\"><entry align=\"left\" valign=\"top\" rowsep=\"1\">Part name</entry><entry colsep=\"0\" align=\"left\" valign=\"top\" rowsep=\"1\">Part number</entry><entry align=\"left\" valign=\"top\" rowsep=\"1\">" );
      stream.write( "CAGE code</entry></row></thead><tbody>");

      // Generate the List of supplies from the supply repository using a script.

      var numRows = formatting.evaluateXPath("count(/pm/commonRepository/supplyRepository/supplySpec)");

      // First construct an array to store the information about each supply
      // (including its order in document to find it again) and then we can sort it.
      var supplies = new Array();

      for (var i = 1; i <= numRows; i++) {
      	// We'll sort by its name
      	var supplyName = formatting.evaluateXPath("/pm/commonRepository/supplyRepository/supplySpec[" + i + "]/name");
      	// Using i starting at 1 for XPath lookup, so use i-1 for the array index (starting at 0)
      	supplies[i-1] = [supplyName, i]; // save the order of occurrence so we can find it again after sorting
      }
      // Sort the array by name
      supplies.sort(function(a,b) { return a[0].toUpperCase().localeCompare(b[0].toUpperCase()); });

      for (var i = 0; i < numRows; i++) {

      	// Now instead of using the order of occurrence in the document (with index i),
      	// look up the index to use in the sorted array:
      	var ndx = supplies[i][1];

      	xpath = "/pm/commonRepository/supplyRepository/supplySpec[" + ndx + "]/supplyIdent/@supplyNumber";
      	var supplyNumber = formatting.evaluateXPath(xpath);

      	xpath = "/pm/commonRepository/supplyRepository/supplySpec[" + ndx + "]/supplyIdent/@id";
      	var supplyId = formatting.evaluateXPath(xpath);

      	xpath = "count(//supplyDescr[supplyRef/@supplyNumber='" + supplyId + "'])";
      	var idCount = formatting.evaluateXPath(xpath);

      	xpath = "count(//supplyDescr[supplyRef/@supplyNumber='" + supplyNumber + "'])";
      	var numberCount = formatting.evaluateXPath(xpath);

      	// Check to make sure it's referred to in the document (otherwise don't include in the list):
      	if (idCount > 0 || numberCount > 0) {

      		stream.write( "<row rowsep=\"0\">");

      		// The first cell is the Supply name
      		var xpath = "/pm/commonRepository/supplyRepository/supplySpec[" + ndx + "]/name";
      		stream.write( "<entry>" + formatting.evaluateXPath(xpath) + "</entry>" );

      		// The second cell is the part number. If it is "commercially available" instead (like "Sponge"
      		// in the bike sample (for parts)) it will be referred to in the body by id rather than part number.
      		// So check if there's a supplyDescr in the document that refers to the supply id here.

      		if (idCount > 0) {
      			stream.write( "<entry colsep=\"0\">Commercially Available</entry><entry colsep=\"0\"></entry>" );
      		}
      		else {
      			stream.write( "<entry colsep=\"0\">" + supplyNumber + "</entry>");
      			xpath = "/pm/commonRepository/supplyRepository/supplySpec[" + ndx + "]/enterpriseGroup/enterpriseInfo[1]/enterpriseRef/@manufacturerCodeValue";
      			var cageCode = formatting.evaluateXPath(xpath);
      			stream.write( "<entry colsep=\"0\">" + cageCode + "</entry>");
      		}

      		stream.write( "</row>" );
      	}
      }

      stream.write( "</tbody></tgroup></table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );

   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ListOfSupplies

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ListOfSupportEquipment" style="block">
<Context priority="0" selector="_ufe:ListOfSupportEquipment">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Front_Matter_Page_Set"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A244bee09-1f65-4426-83d5-6000be745f02"><_gte:Target lang="en"
><_ufe:CentredHeading><_gte:Font Posture="upright">List of support
equipment and tools</_gte:Font></_ufe:CentredHeading><_dtd:table
frame="topbot"><_dtd:tgroup cols="3"><?PubTbl tgroup cbmarg="5.00pt"?><_dtd:colspec
colname="col1" colwidth="3.0in" colsep="0"/><_dtd:colspec
colname="COLSPEC0" colwidth="2.50in"/><_dtd:colspec colname="col2"
colwidth="4.00*"/><_dtd:thead><_dtd:row rowsep="0"><_dtd:entry
align="left" valign="top" rowsep="1">Part name</_dtd:entry><_dtd:entry
colsep="0" align="left" valign="top" rowsep="1">Part number</_dtd:entry
><_dtd:entry align="left" valign="top" rowsep="1">CAGE code</_dtd:entry
></_dtd:row></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry
><_gte:ElementContent include="contentOnly"
xpath="/pm/commonRepository/toolRepository/toolSpec[1]/itemIdentData/descrForPart"
/></_dtd:entry><_dtd:entry colsep="0"><_gte:AttributeContent
attr="toolNumber"
xpath="/pm/commonRepository/toolRepository/toolSpec[1]/toolIdent"
/></_dtd:entry><_dtd:entry><_gte:AttributeContent
attr="manufacturerCodeValue"
xpath="/pm/commonRepository/toolRepository/toolSpec[1]/toolIdent"
/></_dtd:entry></_dtd:row><_dtd:row><_dtd:entry>ASIC</_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry>Application Specific Integrated
Circuit</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ListOfSupportEquipment

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
contextProp.startNew = 2; //start new page
contextProp.pageType = 0;
contextProp.pageSet = 'Front_Matter_Page_Set';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfSupportEquipment:_ufeListOfSupportEquipment_everywhereEBD5:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfSupportEquipment:_ufeListOfSupportEquipment_everywhereEBD5:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A244bee09-1f65-4426-83d5-6000be745f02\"><_gte:Target lang=\"en\"><_ufe:CentredHeading><_gte:Font Posture=\"upright\"><_ufe:FrontToCTitle><_ufe:FrontToCStyle>List of support equipment and tools</_ufe:FrontToCStyle></_ufe:FrontToCTitle></_gte:Font>" );
      stream.write( "</_ufe:CentredHeading><table frame=\"topbot\"><tgroup cols=\"3\"><?PubTbl tgroup cbmarg=\"5.00pt\"?><colspec colname=\"col1\" colwidth=\"3.0in\" colsep=\"0\"/><colspec colname=\"COLSPEC0\" colwidth=\"2.50in\"/><colspec colname=\"col2\" colwidth=\"4.00*\"/>" );
      stream.write( "<thead><row rowsep=\"0\"><entry align=\"left\" valign=\"top\" rowsep=\"1\">Part name</entry><entry colsep=\"0\" align=\"left\" valign=\"top\" rowsep=\"1\">Part number</entry><entry align=\"left\" valign=\"top\" rowsep=\"1\">" );
      stream.write( "CAGE code</entry></row></thead><tbody>");

      // Generate the List of support equipment and tools from the tool repository using a script.

      var numRows = formatting.evaluateXPath("count(/pm/commonRepository/toolRepository/toolSpec)");

      // First construct an array to store the information about each tool
      // (including its order in document to find it again) and then we can sort it.
      var tools = new Array();

      for (var i = 1; i <= numRows; i++) {
      	// We'll sort by part name (descrForPart)
      	var partName = formatting.evaluateXPath("/pm/commonRepository/toolRepository/toolSpec[" + i + "]/itemIdentData/descrForPart");
      	// Using i starting at 1 for XPath lookup, so use i-1 for the array index (starting at 0)
      	tools[i-1] = [partName, i]; // save the order of occurrence so we can find it again after sorting
      }
      // Sort the array by name
      tools.sort(function(a,b) { return a[0].toUpperCase().localeCompare(b[0].toUpperCase()); });

      for (var i = 0; i < numRows; i++) {
      	// Now instead of using the order of occurrence in the document (with index i),
      	// look up the index to use in the sorted array:
      	var ndx = tools[i][1];

      	xpath = "/pm/commonRepository/toolRepository/toolSpec[" + ndx + "]/toolIdent/@toolNumber";
      	var toolNumber = formatting.evaluateXPath(xpath);

      	xpath = "/pm/commonRepository/toolRepository/toolSpec[" + ndx + "]/toolIdent/@id";
      	var toolId = formatting.evaluateXPath(xpath);

      	xpath = "count(//supportEquipDescr[toolRef/@toolNumber='" + toolId + "'])";
      	var idCount = formatting.evaluateXPath(xpath);

      	xpath = "count(//supportEquipDescr[toolRef/@toolNumber='" + toolNumber + "'])";
      	var numberCount = formatting.evaluateXPath(xpath);

      	// Check to make sure it's referred to in the document (otherwise don't include in the list):
      	if (idCount > 0 || numberCount > 0) {

      		stream.write( "<row rowsep=\"0\">");

      		// The first cell is the Part name
      		var xpath = "/pm/commonRepository/toolRepository/toolSpec[" + ndx + "]/itemIdentData/descrForPart";
      		stream.write( "<entry>" + formatting.evaluateXPath(xpath) + "</entry>" );

      		// The second cell is the part number. If it is "commercially available" instead (like "Sponge"
      		// in the bike sample) it will be referred to in the body by id rather than part number. So check
      		// if there's a supportEquipDescr in the document that refers to the part number here.

      		// Was checking if it was referred to by number, and then including it, but it's
      		// preferable to check if it's referred to by id instead.
      		if (idCount > 0) {
      			stream.write( "<entry colsep=\"0\">Commercially Available</entry><entry colsep=\"0\"></entry>" );
      		}
      		else {
      			stream.write( "<entry colsep=\"0\">" + toolNumber + "</entry>");
      			xpath = "/pm/commonRepository/toolRepository/toolSpec[" + ndx + "]/procurementData/enterpriseRef/@manufacturerCodeValue";
      			var cageCode = formatting.evaluateXPath(xpath);
      			stream.write( "<entry colsep=\"0\">" + cageCode + "</entry>");
      		}

      		stream.write( "</row>" );
      	}
      }

      stream.write( "</tbody></tgroup></table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );

   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ListOfSupportEquipment

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ListOfTablesHeadings" style="block">
<Context priority="0" selector="_ufe:ListOfTablesHeadings">
<BaseProperties>
<SpaceAfter optimum="10pt" precedence="force"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1bc0df51-a799-42f4-a163-9c37c7f23788"><_gte:Target lang="en"
><_gte:Font Underline="single" ScoreSpace="yes" Weight="bold"
TypeSize="12pt">Table<_gte:Leaders leaderType="text" lenType="fit"
minLen="0.00pt" leaderText=" " vshift="0.00pt"/>Page</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ListOfTablesTitle" style="block">
<Context priority="0" selector="_ufe:ListOfTablesTitle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="14pt" weight="bold"/>
<Alignment align="center"/>
<SpaceBefore optimum="10pt"/>
<SpaceAfter optimum="4pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Abe2ec512-b29b-4987-972d-771f4762403a"><_gte:Target lang="en"
><_ufe:FrontToCTitle><_ufe:FrontToCStyle><_gte:Font TypeSize="12pt"
>LIST OF TABLES</_gte:Font></_ufe:FrontToCStyle></_ufe:FrontToCTitle
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ListOfTerms" style="block">
<Context priority="0" selector="_ufe:ListOfTerms">
<BaseProperties>
<Breaks blockOrInline="block" startNew="none"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac0a43bc0-fd1c-49bc-8131-fc2c46b709c0"><_gte:Target lang="en"
><_ufe:CentredHeading><_gte:Font Posture="upright">List of terms</_gte:Font
></_ufe:CentredHeading><_dtd:table frame="topbot"><_dtd:tgroup cols="2"
><?PubTbl tgroup cbmarg="5.00pt"?><_dtd:colspec colname="col1"
colwidth="2.0in" colsep="0"/><_dtd:colspec colname="col2"
colwidth="2.00*"/><_dtd:thead><_dtd:row rowsep="0"><_dtd:entry
align="center" valign="top" rowsep="1">Term</_dtd:entry><_dtd:entry
align="left" valign="top" rowsep="1"><_ufe:AbbreviationDefinitionHeading
>Definition</_ufe:AbbreviationDefinitionHeading></_dtd:entry></_dtd:row
></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry><_gte:ElementContent
include="contentOnly"
xpath="(//acronym[@acronymType='at01']/acronymTerm)[1]"/></_dtd:entry
><_dtd:entry><_ufe:TitleCase><_gte:ElementContent include="contentOnly"
xpath="(//acronym[@acronymType='at01']/acronymDefinition)[1]"/></_ufe:TitleCase
></_dtd:entry></_dtd:row><_dtd:row><_dtd:entry>ASIC</_dtd:entry><_dtd:entry
>Application Specific Integrated Circuit</_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2651c4b5-eb7e-43fe-a6b6-82beeaabb37a"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition comment="If there are no terms, ddon't output anything.">
<Tests>
<XPathTest expression="count(//acronym[@acronymType='at02'])=0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7aeddf3e-a618-46a6-b397-6139bd650d4d"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad76e3bfb-b213-4683-9dcc-ee2b63a0c302"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ListOfTerms

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
contextProp.startNew = 0; //start new page

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfTerms:_ufeListOfTerms_everywhere_else01B4:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfTerms:_ufeListOfTerms_everywhere_else01B4:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Ac0a43bc0-fd1c-49bc-8131-fc2c46b709c0\"><_gte:Target lang=\"en\"><_ufe:CentredHeading><_gte:Font Posture=\"upright\"><_ufe:FrontToCTitle><_ufe:FrontToCStyle>List of terms</_ufe:FrontToCStyle></_ufe:FrontToCTitle></_gte:Font></_ufe:CentredHeading>" );
      stream.write( "<table frame=\"topbot\"><tgroup cols=\"2\"><?PubTbl tgroup cbmarg=\"5.00pt\"?><colspec colname=\"col1\" colwidth=\"2.0in\" colsep=\"0\"/><colspec colname=\"col2\" colwidth=\"2.00*\"/><thead><row rowsep=\"0\"><entry align=\"center\" valign=\"top\" rowsep=\"1\">" );
      stream.write( "Term</entry><entry align=\"left\" valign=\"top\" rowsep=\"1\"><_ufe:AbbreviationDefinitionHeading>Definition</_ufe:AbbreviationDefinitionHeading></entry></row></thead><tbody>");

      // Generate the List of Terms (acronym[@acronymType='at02'] using a script:

      var numRows = formatting.evaluateXPath("count(//acronym[@acronymType='at02'])");

      // First construct a 2-dimensional array to store the information about each
      // acronym (its term and its order in document (to find it again))
      // and then we can sort it. We don't need to "de-dup" it since the preprocessing
      // script already makes only the first occurrence of each acronym be marked up.
      var acronyms = new Array();

      for (var i = 0; i < numRows; i++) {
      	var abbrev = formatting.evaluateXPath("(//acronym[@acronymType='at02'])[" + (i + 1) + "]/acronymTerm");
      	acronyms[i] = [abbrev, i + 1]; // save the order of occurrence so we can find it again after sorting
      }
      acronyms.sort(function(a,b) { return a[0].localeCompare(b[0]); });

      for (var i = 0; i < numRows; i++) {
      	stream.write( "<row rowsep=\"0\">");

      	stream.write( "<entry>" + acronyms[i][0] + "</entry>" );

      	var xpath = "(//acronym[@acronymType='at02'])[" + acronyms[i][1] + "]/acronymDefinition";
      	stream.write( "<entry><_ufe:TitleCase><_gte:ElementContent xpath=\"" + xpath + "\" include=\"contentOnly\"/></_ufe:TitleCase></entry>" );
      	stream.write( "</row>" );
      }

      stream.write( "</tbody></tgroup></table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
if ( currentNode.getUserString( '_temp_hasAfter_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfTerms:_ufeListOfTerms_everywhere_else01B4:addAfter');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfTerms:_ufeListOfTerms_everywhere_else01B4:addAfter', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2651c4b5-eb7e-43fe-a6b6-82beeaabb37a\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentAfter( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasAfter_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;


if ( formatting.evaluateXPath( " boolean( count(//acronym[@acronymType='at02'])=0 )", 130, template.primaryStream, null ) != 0 )
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfTerms:_ufeListOfTerms_everywhere_else01B4:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfTerms:_ufeListOfTerms_everywhere_else01B4:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A7aeddf3e-a618-46a6-b397-6139bd650d4d\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:_ufe:ListOfTerms:_ufeListOfTerms_everywhere_else01B4:addAfter_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:_ufe:ListOfTerms:_ufeListOfTerms_everywhere_else01B4:addAfter_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Ad76e3bfb-b213-4683-9dcc-ee2b63a0c302\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentAfter( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ListOfTerms

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element
comment="This was previously used to read the dmodules. Keep for now for future reference."
name="_ufe:ModuleReader" style="block">
<Context priority="0" selector="_ufe:ModuleReader">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afbd06865-be2d-4427-90a3-6acee9e9ea16"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="1" productVersion="6.0M030" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ModuleReader

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;

// ************** Source edit: read in the module referenced by dmRef/@xlink:href

// Construct a new stream name every time to make sure it's unique using the moduleCtr
// counter (initialized in Property Set "Set APP Variables"). 

template.moduleCtr++;

var streamName = 'stylesheet0:Element:_ufe:ModuleReader:_ufeModuleReader_everywhere7C52' + template.moduleCtr + ':addBefore';

// Ignore the "_temp_hasBefore" flag so we output new gentext every time (so each module
// is loaded properly) - commented out the "if" below (and its braces).
//if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1')
//{

	// Because there can be multiple "formatting passes", we want to rewrite the stream every time.
	// So if it exists, erase it and recreate it.
   var stream = template.content.getStream(streamName);
   if (stream != null) {
		template.content.deleteTag(streamName);
		stream = null;
   }

  //if ( stream == null )
  //{
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( streamName, primaryStream.type );

			stream.mapReturns = 0;
			stream.ignoreSpaces = stream.IGNORE_NORMALIZE;

      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\"><_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Abd5b5082-64c2-461a-a954-e31899267740\"><_gte:Target lang=\"en\">");

			// xlink not used consistently. So construct the filename from the various codes
			// in the dmCode element.
			//var filename = formatting.evaluateXPath("ancestor::dmRef/@xlink:href");
			// Turn the href attribute into a filename. Starts like "URN:S1000D:DMC-S1000DLIGHTING-AAA-D00-00-00-00AA-00EA-D_001-00",
			// and becomes "DMC-S1000DLIGHTING-AAA-D00-00-00-00AA-00EA-D_001-00_EN-US.XML"
			//filename = filename.replace(/^([^:]*):([^:]*):(.*)$/, "$3_EN-US.XML");
			//filename = filename.replace(/^[^:]*:[^:]*:(.*)$/, "$1_EN-US.XML");

			var moduleFilenameCode = "DMC";
			var languageIsoCode = formatting.evaluateXPath("/pm/identAndStatusSection/pmAddress/pmIdent/language/@languageIsoCode"); // "sx"
			var countryIsoCode = formatting.evaluateXPath("/pm/identAndStatusSection/pmAddress/pmIdent/language/@countryIsoCode"); // "US"

			var modelIdentCode = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@modelIdentCode"); // "S1000DBIKE"
			var systemDiffCode = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@systemDiffCode"); // "AAA"
			var systemCode = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@systemCode");
			var subSystemCode = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@subSystemCode");
			var subSubSystemCode = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@subSubSystemCode");
			var disassyCode = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@disassyCode"); // this code seems not to be used?
			var assyCode = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@assyCode");
			// disassyCodeVariant: this term usually appears with two zeros prepended, but sometimes "01", "02", et al.,
			// and the different ones don't seem to be specified anywhere...
			var disassyCodeVariant = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@disassyCodeVariant");
			var infoCode = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@infoCode");
			var infoCodeVariant = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@infoCodeVariant");
			var itemLocationCode = formatting.evaluateXPath("ancestor::dmRef/dmRefIdent/dmCode/@itemLocationCode");

			// A full filename currently looks like this:
			// DMC-S1000DBIKE-AAA-A0-10-20-00AA-362B-A_000-06_sx-US.xml
			// The part near the end "000-06" is not clear where it comes from.

			var filename = moduleFilenameCode + "-" + modelIdentCode + "-" + systemDiffCode + "-" + systemCode
				+ "-" + subSystemCode + subSubSystemCode + "-" + assyCode + "-" + "00" + disassyCodeVariant + "-"
				+ infoCode + infoCodeVariant + "-" + itemLocationCode + "_000-00_"
				+ languageIsoCode + "-" + countryIsoCode + ".xml";

			//stream.write("filename: " + filename + "\n");
			
			// Ok, because the constructed filename is still not exact (we may want to try "globbing" later),
			// go back to using the xlink, and this time just add in the full correct filename (including
			// extensions, etc.) to the source XML for now.
			filename = formatting.evaluateXPath("ancestor::dmRef/@xlink:href");
			if (filename == "") {
				filename = "NO_XLINK";
			}

			//stream.write("filename: " + filename + "\n");

			var file = new File(filename);
			var ctr = 0;

			try {
				if (file.canRead) {
					// Open the file for reading
					// Some legal notice fragments in the past used utf8 encoding, which can be read
					// with the "utf8" modifier here, but then it will cause an error when reading
					// iso encoding they currently use.
					file.open("read", "utf8"); // "text"); 
					
					var foundBeginning = 0;

					//Read a line from the file
					var line = file.readln();
					while( line != null )
					{
						ctr++;

						/*
						var firstTwo = line.substring(0,2);
						if (firstTwo == "<?") {
							//stream.write("found PI");
						}
						else if (firstTwo == "<!") {
							//stream.write("found COMMENT");
						}
						else if (firstTwo == "]>") {
							//stream.write("found end of internal subset");
						}*/
						
						if (!foundBeginning) {
							//if (line.startsWith("<dmodule")) {
							if (line.indexOf("<dmodule") == 0) {
								foundBeginning = 1;
								stream.write(line);
								//stream.write(line.replace(/(\r\n|\n|\r|\t)/gm, " "));

								var lastChar = line.slice(-1);
								//stream.write("line ends with: " + lastChar + " (" + lastChar.charCodeAt(0) + ")");
								if (lastChar != '>') {
									stream.write(" ");
								}
							}
						}
						else {
							//stream.write("line " + ctr + "\n");
							//stream.write(line);
							// Get rid of excess whitespace:
							//line = line.replace(/(\r\n|\n|\r|\t)/gm, " ");

							//stream.write(line);
							stream.write(line.replace(/&ndash/g, "–"));
							var lastChar = line.slice(-1);
							//stream.write("line ends with: " + lastChar + " (" + lastChar.charCodeAt(0) + ")");
							if (lastChar != '>') {
								stream.write(" ");
							}
       	    }
						line = file.readln();
					}
					file.close();
				}
				else {
					stream.write("CAN'T READ MODULE: " + filename + " (infoCode: " + infoCode + ")\n");
				}
			}
			catch (e) {
				stream.write("EXCEPTION READING MODULE: " + filename + ": " + e + "\n");
			}

			stream.write("</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );

   //} [Commented out end brace from "if" above...]
   currentNode.augmentAfter( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasAfter_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;

// ************** END Source edit

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ModuleReader

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;


if ( !isHidden )
{
   var markerType = fish['markerType'];
   if ( markerType != '' && markerType != 'Footnote' )
   {
      template.content.functions._app[ 'end'+ markerType ]();
   }

   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:NewColumn" style="block">
<Context priority="0" selector="_ufe:NewColumn">
<BaseProperties>
<Breaks blockOrInline="block" startNew="column"/></BaseProperties>
</Context>
</Element>
<Element
comment="Used to output the second page number (the next page number) in the foldout page footer.
UPDATE: Now not used. Keep for possible future reference"
name="_ufe:NextPageNumber" style="inline">
<Context comment="Use APP source edit to output page number plus one."
priority="6.005" selector="_ufe:NextPageNumber[@bak2]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:NextPageNumber

//var currentPage = formatting.evaluateShowString("$g");
var currentPage = formatting.currentPage.pageseqPageNumber;
currentPage++;
formatting.output(currentPage);


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:NextPageNumber

]]></OnExit></EditedSource>
</Context>
<Context comment="Use APP source edit to output page number plus one."
priority="6" selector="_ufe:NextPageNumber[@bak]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:NextPageNumber

var currentPage = formatting.evaluateShowString("$g");
currentPage++;
formatting.output(currentPage);

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:NextPageNumber
]]></OnExit></EditedSource>
</Context>
<Context comment="Use APP source edit to output page number plus one."
priority="0" selector="_ufe:NextPageNumber">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad198e182-744f-4013-8fad-7ba2c7c72973"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly" occur="1"
scope="_ufe:NextPageNumber"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:NextPageNumber

formatting.fishSave( template.stylerFish );
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

// Base properties
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:_ufe:NextPageNumber:_ufeNextPageNumber_everywhere_else5F6D:addBefore');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:_ufe:NextPageNumber:_ufeNextPageNumber_everywhere_else5F6D:addBefore', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Ad198e182-744f-4013-8fad-7ba2c7c72973\"><_gte:Target lang=\"en\"><_gte:NextPageNumber\"/>" );
    stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:NextPageNumber

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:NoRequirementsRow" style="block">
<Context priority="0" selector="_ufe:NoRequirementsRow">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A73ca858a-275f-4b0b-ab1b-9b2dcdb1e6f7"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="bottom"><_dtd:tgroup
cols="2"><?PubTbl tgroup cbmarg="4.00pt"?><_dtd:colspec colname="col1"
/><_dtd:colspec colname="col2"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0">None</_dtd:entry><_dtd:entry></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_ufe:RequirementsTableRow></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:NoSafetyRow" style="block">
<Context priority="0" selector="_ufe:NoSafetyRow">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1b389262-3901-4f6a-ac5d-1b3100fda140"><_gte:Target lang="en"
><_ufe:StandardIndent><_dtd:table frame="none"><_dtd:tgroup cols="1"
><_dtd:colspec colname="col1"/><_dtd:tbody><_dtd:row><_dtd:entry>None</_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:StandardIndent
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:NotIllustratedMarker" style="inline">
<Context priority="0" selector="_ufe:NotIllustratedMarker">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6abdef99-5aa1-44cc-bb60-b5b59cea2976"><_gte:Target lang="en"
><_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText=" " vshift="0.00pt"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="Change to be left aligned, with a four point space first (to align with the figure number).
Add leader space after to push the item number to the right side of the table cell.">
<Tests>
<XPathTest
expression="ancestor::itemSeqNumber/partLocationSegment/notIllustrated"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A95994442-9100-4e8c-98dd-5feb6a45fd02"><_gte:Target lang="en"
><_gte:Leaders leaderType="space" lenType="specified" specLen="4.00pt"
/>-<_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText=" " vshift="0.00pt"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:NumberedHeading" style="block">
<Context priority="0" selector="_ufe:NumberedHeading">
<BaseProperties>
<Font weight="bold"/>
<Highlight textUnderlineStyle="underline"/>
<SpaceBefore optimum="Medium_Space_Above"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:NumericTitle" style="inline">
<Context priority="60"
selector="pmEntry/pmEntry/pmEntryTitle/_ufe:NumericTitle">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aef2d57a2-d5b8-44e0-aa97-14e6640ae2a2"><_gte:Target lang="en"
><_gte:ElementLabelAndNumber display="A"/> </_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="A" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae99b9fe2-76b6-4d21-92cf-0fbd02e557d6"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:NumericTitle">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A427a985d-3ede-469e-aa11-8bfd8dd7de3d"><_gte:Target lang="en"
> <_gte:ElementNumber/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0pt" countAs="" followWith="space"
format="(CURRENT)" numberAlignment="left" numberStyle="1"
startAtXPath="(position())" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A5d2231a1-ed01-4a99-be5a-3562c510fc6a"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:NumericalIndexTableHeader" style="block">
<Context priority="0" selector="_ufe:NumericalIndexTableHeader">
<BaseProperties>
<Font weight="normal"/>
<LineSpacing lineHeight="1.2em"/>
<SpaceBefore conditionality="keep" optimum="3pt" precedence="force"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3c12a3ac-6478-4e50-8d38-4b48176ccc71"><_gte:Target lang="en"
><_ufe:NumericalIndexTableHeaderShim></_ufe:NumericalIndexTableHeaderShim
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:NumericalIndexTableHeaderShim" style="block">
<Context priority="0" selector="_ufe:NumericalIndexTableHeaderShim">
<BaseProperties>
<Font size="3pt"/>
<LineSpacing lineHeight="4pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab5b2a875-19fb-4904-a168-05ffdb006783"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:PageBreak" style="block">
<Context priority="0" selector="_ufe:PageBreak">
<BaseProperties>
<Breaks blockOrInline="block" startNew="page"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:PageBreakPI" style="inline">
<Context priority="0" selector="_ufe:PageBreakPI">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A76e7a569-8379-4439-85c7-ed0417ac73c0"><_gte:Target lang="en"
><_dtd:_newpage/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:PageShortPrefix" style="inline">
<Context priority="0" selector="_ufe:PageShortPrefix">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4a6c6313-afa4-408e-9964-35a29e7a5c00"><_gte:Target lang="en"
><_gte:AttributeContent attr="shortPrefix" occur="ancestor"
elem="pmEntry"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ProceduralStepCautionText" style="inline">
<Context priority="6" selector="_ufe:ProceduralStepCautionText[@bak]">
<BaseProperties>
<Highlight allcaps="yes"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A43ab32dc-b3d2-4117-81e8-521db72d3312"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="/pm/commonRepository/cautionRepository/cautionSpec/warningAndCautionPara[../cautionIdent/@id='PLACEHOLDER']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:ProceduralStepCautionText">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A76141f79-9a3b-4788-9d42-04f9f1dde03a"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="/pm/commonRepository/cautionRepository/cautionSpec/warningAndCautionPara[../cautionIdent/@id='PLACEHOLDER']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ProceduralStepCautionText

formatting.fishSave( template.stylerFish );
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

style.capsMode = fStyle.CAPS_UPPER;

// SOURCE EDIT: Use id to get warning/caution paras below
var id = formatting.evaluateXPath("ancestor::addcaution/@cautionRef");
//var idForStream = parseInt(id.replace(/[a-zA-Z]*-/, ""));
var idForStream = id.replace("-", "");

//formatting.output("ID: " + idForStream);


// Base properties
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {

  // SOURCE EDIT: Make a new stream each time, since we'll use the caution id to pull the warningAndCautionParas.
  template.warningAndCautionCtr++;
  //var streamName = "stylesheet0:Element:_ufe:ProceduralStepCautionText:_ufeProceduralStepCautionText_everywhere8D3D" + template.warningAndCautionCtr + ":addBefore";
  var streamName = "stylesheet0:Element:_ufe:ProceduralStepCautionText:_ufeProceduralStepCautionText_" + idForStream + "8D3D" + ":addBefore";

  //var stream = template.content.getStream('stylesheet0:Element:_ufe:ProceduralStepCautionText:_ufeProceduralStepCautionText_everywhere8D3D:addBefore');
  var stream = template.content.getStream(streamName);


  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( streamName, primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A76141f79-9a3b-4788-9d42-04f9f1dde03a\"><_gte:Target lang=\"en\"><_gte:ElementContent include=\"elementAndContent\" xpath=\"/pm/commonRepository/cautionRepository/cautionSpec/warningAndCautionPara[../cautionIdent/@id='" + id + "']\"/>" );
    stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ProceduralStepCautionText

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ProceduralStepTitle" style="inline">
<Context priority="0" selector="_ufe:ProceduralStepTitle">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afe3ca545-3a99-4b02-b7c1-f388cccc38bf"><_gte:Target lang="en"
><_gte:XPathString
expr="count(ancestor::proceduralStep/parent::mainProcedure/parent::procedure/parent::content/ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/procedure)+1"
/><_gte:ElementLabelAndNumber display="A."/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT) '.'"
numberAlignment="left" numberStyle="A"
numberXPath="count(ancestor::proceduralStep/preceding-sibling::proceduralStep)+count(ancestor::proceduralStep/parent::mainProcedure/parent::procedure/parent::content/ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/procedure)+1"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A7f693534-a4c1-4da5-b19d-678fd45161b9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ProceduralStepWarning" style="block">
<Context priority="0" selector="_ufe:ProceduralStepWarning">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A0680e138-4d29-49b3-a3d6-8d60e3f02f68"><_gte:Target lang="en"
>WARNING:</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ProceduralStepWarningText" style="inline">
<Context priority="0" selector="_ufe:ProceduralStepWarningText">
<BaseProperties>
<Font weight="bold"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1b6b2b3e-f895-4cce-8dc1-4e2e2a871379"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="/pm/commonRepository/warningRepository/warningSpec/warningAndCautionPara[../warningIdent/@id='PLACEHOLDER']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ProceduralStepWarningText

formatting.fishSave( template.stylerFish );
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

style.capsMode = fStyle.CAPS_UPPER;

// SOURCE EDIT: Use id to get warning/caution paras below
var id = formatting.evaluateXPath("ancestor::addwarning/@warningRef");
//var idForStream = parseInt(id.replace(/[a-zA-Z]*-/, ""));
var idForStream = id.replace("-", "");


//formatting.output("ID: " + id);

// Base properties
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {

  // SOURCE EDIT: Make a new stream each time, since we'll use the warning id to pull the warningAndCautionParas.
  template.warningAndCautionCtr++;
  //var streamName = "stylesheet0:Element:_ufe:ProceduralStepWarningText:_ufeProceduralStepWarningText_everywhere4C90" + template.warningAndCautionCtr + ":addBefore";
  var streamName = "stylesheet0:Element:_ufe:ProceduralStepWarningText:_ufeProceduralStepWarningText_" + idForStream + "4C90:addBefore";
  var stream = template.content.getStream(streamName);

  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( streamName, primaryStream.type );

    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A1b6b2b3e-f895-4cce-8dc1-4e2e2a871379\"><_gte:Target lang=\"en\"><_gte:ElementContent include=\"elementAndContent\" xpath=\"/pm/commonRepository/warningRepository/warningSpec/warningAndCautionPara[../warningIdent/@id='" + id + "']\"/>" );
    stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ProceduralStepWarningText

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ProcedureTitle" style="block">
<Context priority="0" selector="_ufe:ProcedureTitle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font italic="yes" size="12pt" weight="bold"/>
<Alignment align="center"/>
<SpaceBefore optimum="10pt"/>
<Breaks blockOrInline="block"/>
<Keep withNext="4"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A486bfb7a-987e-4b74-b870-56b768696fe4"><_gte:Target lang="en"
>Procedure</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:PseudoTitle" style="title">
<Context priority="20.005"
selector="_ufe:FigureTitleForToC/_ufe:PseudoTitle">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_formalBlock">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A02f6d138-2f2c-45a0-88a6-8e1975cca85f"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A180e8e04-7854-4553-b3e6-e5a80c168cdb"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Aeb6def61-ba9c-4df6-bf81-c1d9fe516b29"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20" selector="pmEntry/_ufe:PseudoTitle">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_1">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A29ac2e9a-e1a8-48c0-807e-dc5b8d345aed"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Afdbcad2e-07a2-4fb1-8fe4-64b200070d65"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:PseudoTitle">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:ReasonForUpdate" style="title">
<Context priority="20.005"
selector="_ufe:FigureTitleForToC/_ufe:ReasonForUpdate">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_formalBlock">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6a08878c-655a-42a7-bcb4-fe5ae79217d0"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="Ac3d1af49-a4c3-4f99-a92b-ecdde67fc7c6"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A8f31a946-e47f-4d71-bd9e-5ac7d07650f2"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20" selector="pmEntry/_ufe:ReasonForUpdate">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_1">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A50508476-520b-4f5a-a1b0-3b07a8858bef"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A03d9a1f4-86b4-4d3b-b7db-ab84d22e3e47"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:ReasonForUpdate">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aefacc674-0b97-4d57-9652-392eee9db0ed"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly" occur="1"
scope="identAndStatusSection" elem="reasonForUpdate"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:RefToFigureNumber" style="inline">
<Context priority="0" selector="_ufe:RefToFigureNumber">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Abb6eb9c6-a161-4cb2-bd6e-3230bb28defa"><_gte:Target lang="en"
><_dtd:internalRef internalRefId="placeholder"></_dtd:internalRef
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:RefToFigureNumber

var figureId = formatting.evaluateXPath("ancestor::figure/@id");
formatting.output("<_dtd:internalRef internalRefId=\"" + figureId + "\" internalRefTargetType=\"irtt01\"></_dtd:internalRef>" + figureId);

// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:RefToFigureNumber

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:RelativeIndent" style="nostyle">
<Context priority="0" selector="_ufe:RelativeIndent">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[formatting.output("<?ri>");
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[]]></OnExit></EditedSource>
</Context>
</Element>
<Element
description="This element wraps repeating titles (also known as continued titles)."
name="_sfe:RepeatingTitle" style="block">
<Context priority="0" selector="_sfe:RepeatingTitle">
<BaseProperties>
<SpaceAfter conditionality="keep" optimum="18pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps repeating bottom titles (also known as bottom continued titles)."
name="_sfe:RepeatingTitleBottom" style="block">
<Context priority="0" selector="_sfe:RepeatingTitleBottom">
<BaseProperties>
<SpaceBefore conditionality="keep" optimum="18pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:RequirementsTableHeadingRow" style="block">
<Context priority="0" selector="_ufe:RequirementsTableHeadingRow">
<BaseProperties>
<Indent leftIndent="20mm"/>
<Breaks blockOrInline="block"/>
<Keep withNext="4"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:RequirementsTableRow" style="block">
<Context priority="0" selector="_ufe:RequirementsTableRow">
<BaseProperties
propertySetReferences="Sans-Serif_Font Default_Font_Size">
<Indent leftIndent="20mm"/>
<SpaceBefore optimum="-12pt" precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:ResetTableNumbering" style="block">
<Context priority="0" selector="_ufe:ResetTableNumbering">
<BaseProperties>
<SpaceBefore optimum="-14pt" precedence="high"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac1bfc117-d1cd-4919-a068-b60205618764"><_gte:Target lang="en"
><_dtd:table frame="none"><_dtd:tgroup cols="1"><?PubTbl tgroup
cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt" ctmarg="0.00pt"
dispwid="1.00in"?><_dtd:colspec colname="col1"/><_dtd:tbody><_dtd:row
><?PubTbl row rht="0.10in"?><_dtd:entry></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:Right" style="block">
<Context priority="0" selector="_ufe:Right">
<BaseProperties>
<Alignment align="right"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="SITA" style="unstyled">
<Context priority="0" selector="SITA">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="_ufe:SaveFoldoutPage" style="inline">
<Context priority="0" selector="_ufe:SaveFoldoutPage">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:SaveFoldoutPage

formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );

var currentPage = formatting.currentPage.pageNumber;

var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::graphic[1]");
var figureNode = nodeList.nodeListValue.item(0);

figureNode.setAttribute('LEP_foldout_page', currentPage );

//formatting.output("FP: " + currentPage);
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:SaveFoldoutPage

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:SaveLEPEndPage" style="inline">
<Context priority="6" selector="_ufe:SaveLEPEndPage[@bak]">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="0" selector="_ufe:SaveLEPEndPage">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:SaveLEPEndPage

var currentNode = formatting.currentXMLNode;
formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

fish[ 'isHidden' ] = 1;
currentNode.augmentReference( '_app:hidden', 1 );

var currentPage = formatting.currentPage.pageNumber;

var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::pmEntry[1]");
var node = nodeList.nodeListValue.item(0);

if (node) {
  node.setAttribute('LEP_end_page', currentPage );
}

//var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
//fish[ 'isHidden' ] = 0;
//template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:SaveLEPEndPage

//template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:SaveLastPageNo" style="inline">
<Context priority="0" selector="_ufe:SaveLastPageNo">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:SaveLastPageNo

var currentNode = formatting.currentXMLNode;
formatting.fishSave( template.stylerFish );
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

fish[ 'isHidden' ] = 1;
currentNode.augmentReference( '_app:hidden', 1 );

var currentPage = formatting.currentPage.pageNumber;

var nodeList = formatting.currentXMLNode.evaluateXPath("ancestor::pm[1]");
var pmNode = nodeList.nodeListValue.item(0);

//formatting.currentXMLNode.setUserString( 'LEP_last_page', currentPage ); // Doesn't seem to work...
//formatting.currentXMLNode.setAttribute('LEP_last_page', currentPage );

pmNode.setAttribute('LEP_last_page', currentPage );
//var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
//fish[ 'isHidden' ] = 0;
//template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:SaveLastPageNo

//template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:SaveLastPageNumber" style="nostyle">
<Context priority="0" selector="_ufe:SaveLastPageNumber">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[var currentPage = formatting.currentPage.pageNumber;
template.lastPageNumber = currentPage;
template.debugToFile("Saving lastPageumber: " + currentPage);

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:SectionPrefix" style="inline">
<Context priority="0" selector="_ufe:SectionPrefix">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A79dd9ed6-d147-4a60-bac4-d0acb07bcce8"><_gte:Target lang="en"
><_gte:AttributeContent attr="shortPrefix" xpath="ancestor::pmEntry[1]"
/>Z</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
comment="Content should come from pmEntry that invokes this separator page"
name="_ufe:SeparatorPage" style="block">
<Context priority="0" selector="_ufe:SeparatorPage">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Separator_Page_Set"
startNew="oddPage"/></BaseProperties>
</Context>
</Element>
<Element
comment="Added a singe space as content so the new page wouldn't be ignored."
name="_ufe:SeparatorPageBack" style="block">
<Context priority="6" selector="_ufe:SeparatorPageBack[false]">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Separator_Page_Set"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A991832fe-b6b6-42dc-8a4b-d955f2292b96"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If it's not the front-matter separator page, restart the page numbering here to 0,
so that the first real page of the section (the next one) will start at 1.
REMOVED: This condition wasn't getting invoked for some reason.">
<Tests>
<XPathTest expression="ancestor::pmEntry[@entryType!='pmt51']"/></Tests>
<BaseProperties>
<Breaks newPageSet="Front_Matter_Page_Set" pageNumber="custom"
pageNumberXPath="'0'" startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A72352bd9-a96a-47cd-aa1f-507a5cf208d2"><_gte:Target lang="en"
> ZZ</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Abcdb04a4-6b87-4d88-b0a5-c0032e3920d3"><_gte:Target lang="en"
>YY</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="0" selector="_ufe:SeparatorPageBack">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Separator_Page_Set"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afb851025-f357-4052-b09e-8f83e307d5ed"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:SeparatorPageHeading" style="block">
<Context priority="0" selector="_ufe:SeparatorPageHeading">
<BaseProperties>
<Font size="16pt" weight="bold"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:StandardIndent" style="block">
<Context priority="0" selector="_ufe:StandardIndent">
<BaseProperties>
<Indent leftIndent="20mm"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element comment="Left-aligned subheadings for dmodules"
name="_ufe:SubHeading" style="block">
<Context priority="0" selector="_ufe:SubHeading">
<BaseProperties propertySetReferences="SubHeading">
<SpaceAfter optimum="0pt"/>
<Breaks blockOrInline="block"/>
<Keep withNext="4"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A06a7fefe-a3c9-45fa-800d-838ff2e0bbf0"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:SubtaskFromDmRef" style="inline">
<Context priority="0" selector="_ufe:SubtaskFromDmRef">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="(ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument"/>
</Tests>
<BaseProperties>
<Font weight="normal"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A8a0da26f-5ab6-4cd4-961e-6d230ab60535"><_gte:Target lang="en"
> (Subtask <_gte:XPathString
expr="(ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument"
/>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:SupplyNameText" style="inline">
<Context priority="0" selector="_ufe:SupplyNameText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:SupplyNameText

var supplyNo = formatting.evaluateXPath("ancestor::supplyDescr/supplyRef/@supplyNumber");

var supplyName = formatting.evaluateXPath("/pm/commonRepository/supplyRepository/supplySpec[supplyIdent/@supplyNumber='" + supplyNo + "']/name");

// For "commercially available" tools, the supplySpec matches the id rather than the supply number.
if (!supplyName || supplyName == "") {
	supplyName = formatting.evaluateXPath("/pm/commonRepository/supplyRepository/supplySpec[supplyIdent/@id='" + supplyNo + "']/name");
}

if (supplyName && supplyName != "") {
	formatting.output(supplyName);
}
else {
	formatting.output("<?tic=r>Supply name not found for supply number: " + supplyNo + "<?tic>");
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:SupplyNameText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:SupplyNameTextInternalRef" style="inline">
<Context priority="0" selector="_ufe:SupplyNameTextInternalRef">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:SupplyShortNameText

var supplyNo = formatting.evaluateXPath("id(ancestor::internalRef/@internalRefId)/supplyRef/@supplyNumber");

var supplyName = formatting.evaluateXPath("/pm/commonRepository/supplyRepository/supplySpec[supplyIdent/@supplyNumber='" + supplyNo + "']/name");

// For "commercially available" tools, the toolSpec matches the id rather than the tool number.
if (!supplyName || supplyName == "") {
	supplyShortName = formatting.evaluateXPath("/pm/commonRepository/supplyRepository/supplySpec[supplyIdent/@id='" + supplyNo + "']/name");
}

if (supplyName && supplyName != "") {
	formatting.output(supplyName);
}
else {
	formatting.output("<?tic=r>Supply name not found for supply number: " + supplyNo + "<?tic>");
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:SupplyShortNameText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:SupplyRefText" style="inline">
<Context priority="0" selector="_ufe:SupplyRefText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:SupplyRefText

var supplyNo = formatting.evaluateXPath("ancestor::supplyRef/@supplyNumber");

// See if an id attribute in a supplySpec matches the supply number. If so, we just output "Commercially Available"
var numSupplySpecs = formatting.evaluateXPath("count(/pm/commonRepository/supplyRepository/supplySpec/supplyIdent[@id='" + supplyNo + "'])");

if (numSupplySpecs > 0) {
	formatting.output("Commercially Available");
}
else {
	formatting.output("Supply: " + supplyNo + "\nCAGE: ");

	var mfrCode = formatting.evaluateXPath("/pm/commonRepository/supplyRepository/supplySpec[supplyIdent/@supplyNumber='" + supplyNo + "']/enterpriseGroup/enterpriseInfo/enterpriseRef/@manufacturerCodeValue");

	if (mfrCode && mfrCode != "") {
		formatting.output(mfrCode);
	}
	else {
		formatting.output("<?tic=r>Manufacturer Code not found for supply number: " + supplyNo + "<?tic>");
	}
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:SupplyRefText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:SupplyShortNameText" style="inline">
<Context priority="0" selector="_ufe:SupplyShortNameText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:SupplyShortNameText

var supplyNo = formatting.evaluateXPath("id(ancestor::internalRef/@internalRefId)/supplyRef/@supplyNumber");

var supplyShortName = formatting.evaluateXPath("/pm/commonRepository/supplyRepository/supplySpec[supplyIdent/@supplyNumber='" + supplyNo + "']/shortName");

// For "commercially available" tools, the toolSpec matches the id rather than the tool number.
if (!supplyShortName || supplyShortName == "") {
	supplyShortName = formatting.evaluateXPath("/pm/commonRepository/supplyRepository/supplySpec[supplyIdent/@id='" + supplyNo + "']/shortName");
}

if (supplyShortName && supplyShortName != "") {
	formatting.output(supplyShortName);
}
else {
	formatting.output("<?tic=r>Supply short name not found for supply number: " + supplyNo + "<?tic>");
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:SupplyShortNameText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:TableHeading" style="block">
<Context priority="0" selector="_ufe:TableHeading">
<BaseProperties
propertySetReferences="bold Sans-Serif_Font Default_Font_Size">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:TableLabel" style="inline">
<Context priority="0" selector="_ufe:TableLabel">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4bff0fb4-a0b7-4ccb-8f8e-8543061f8210"><_gte:Target lang="en"
>X</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="ancestor::_ufe:ToC_Tables"/></Tests>
<BaseProperties>
<Hidden hidden="yes"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A5f453741-3f60-4d07-b006-e3297a877c7e"><_gte:Target lang="en"
>Y</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element description="This element wraps all tables of contents."
name="_sfe:TableOfContents" style="block">
<Context priority="0" selector="_sfe:TableOfContents">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="_ufe:TableOfHighlights" style="block">
<Context priority="0" selector="_ufe:TableOfHighlights">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aba74354f-a6bf-466e-be7a-59fdaf770185"><_gte:Target lang="en"
><_dtd:table frame="topbot"><_dtd:title>Table of Highlights</_dtd:title
><_dtd:tgroup cols="3"><?PubTbl tgroup cbmarg="5.00pt"?><_dtd:colspec
colname="col1" colwidth="2.00in" colsep="0"/><_dtd:colspec
colname="COLSPEC0" colwidth="4.00*" colsep="0"/><_dtd:colspec
colname="col2" colwidth="1.25in"/><_dtd:thead><_dtd:row rowsep="0"
><_dtd:entry align="left" valign="top" rowsep="1">Task/Page</_dtd:entry
><_dtd:entry align="left" valign="top" rowsep="1">Description of Change</_dtd:entry
><_dtd:entry align="left" valign="top" rowsep="1">Effectivity</_dtd:entry
></_dtd:row></_dtd:thead><_dtd:tbody><_dtd:row rowsep="0"><_dtd:entry
><_gte:ElementContent include="contentOnly"
xpath="/pm/commonRepository/supplyRepository/supplySpec[1]/name"/></_dtd:entry
><_dtd:entry><_gte:AttributeContent attr="supplyNumber"
xpath="/pm/commonRepository/supplyRepository/supplySpec[1]/supplyIdent"
/></_dtd:entry><_dtd:entry></_dtd:entry></_dtd:row><_dtd:row rowsep="0"
><_dtd:entry>Subtask<_dtd:_newline/>49-50-65-700-007-A01<_dtd:_newline
/>(Page 1010)</_dtd:entry><_dtd:entry>Paragraph 2.L. Step (2). Added
steps to 2.L. Position Indicator Switch.</_dtd:entry><_dtd:entry>All</_dtd:entry
></_dtd:row><_dtd:row rowsep="0"><_dtd:entry>Subtask<_dtd:_newline
/>49-50-65-700-007-A01<_dtd:_newline/>(Page 1010)</_dtd:entry><_dtd:entry
>Paragraph 2.L. Step (2). Added steps to 2.L. Position Indicator Switch.</_dtd:entry
><_dtd:entry>All</_dtd:entry></_dtd:row><_dtd:row rowsep="0"><_dtd:entry
>Subtask<_dtd:_newline/>49-50-65-700-007-A01<_dtd:_newline/>(Page
1010)</_dtd:entry><_dtd:entry>Paragraph 2.L. Step (2). Added steps
to 2.L. Position Indicator Switch.</_dtd:entry><_dtd:entry>All</_dtd:entry
></_dtd:row><_dtd:row rowsep="0"><_dtd:entry>Subtask<_dtd:_newline
/>49-50-65-700-007-A01<_dtd:_newline/>(Page 1010)</_dtd:entry><_dtd:entry
>Paragraph 2.L. Step (2). Added steps to 2.L. Position Indicator Switch.</_dtd:entry
><_dtd:entry>All</_dtd:entry></_dtd:row><_dtd:row rowsep="0"><_dtd:entry
>Subtask<_dtd:_newline/>49-50-65-700-007-A01<_dtd:_newline/>(Page
1010)</_dtd:entry><_dtd:entry>Paragraph 2.L. Step (2). Added steps
to 2.L. Position Indicator Switch.</_dtd:entry><_dtd:entry>All</_dtd:entry
></_dtd:row><_dtd:row rowsep="0"><_dtd:entry>Subtask<_dtd:_newline
/>49-50-65-700-007-A01<_dtd:_newline/>(Page 1010)</_dtd:entry><_dtd:entry
>Paragraph 2.L. Step (2). Added steps to 2.L. Position Indicator Switch.</_dtd:entry
><_dtd:entry>All</_dtd:entry></_dtd:row><_dtd:row rowsep="0"><_dtd:entry
>Subtask<_dtd:_newline/>49-50-65-700-007-A01<_dtd:_newline/>(Page
1010)</_dtd:entry><_dtd:entry>Paragraph 2.L. Step (2). Added steps
to 2.L. Position Indicator Switch.</_dtd:entry><_dtd:entry>All</_dtd:entry
></_dtd:row><_dtd:row rowsep="0"><_dtd:entry>Subtask<_dtd:_newline
/>49-50-65-700-007-A01<_dtd:_newline/>(Page 1010)</_dtd:entry><_dtd:entry
>Paragraph 2.L. Step (2). Added steps to 2.L. Position Indicator Switch.</_dtd:entry
><_dtd:entry>All</_dtd:entry></_dtd:row><_dtd:row rowsep="0"><_dtd:entry
>Subtask<_dtd:_newline/>49-50-65-700-007-A01<_dtd:_newline/>(Page
1010)</_dtd:entry><_dtd:entry>Paragraph 2.L. Step (2). Added steps
to 2.L. Position Indicator Switch.</_dtd:entry><_dtd:entry>All</_dtd:entry
></_dtd:row><_dtd:row rowsep="0"><_dtd:entry>Subtask<_dtd:_newline
/>49-50-65-700-007-A01<_dtd:_newline/>(Page 1010)</_dtd:entry><_dtd:entry
>Paragraph 2.L. Step (2). Added steps to 2.L. Position Indicator Switch.</_dtd:entry
><_dtd:entry>All</_dtd:entry></_dtd:row><_dtd:row rowsep="0"><_dtd:entry
>Subtask<_dtd:_newline/>49-50-65-700-007-A01<_dtd:_newline/>(Page
1010)</_dtd:entry><_dtd:entry>Paragraph 2.L. Step (2). Added steps
to 2.L. Position Indicator Switch.</_dtd:entry><_dtd:entry>All</_dtd:entry
></_dtd:row><_dtd:row rowsep="0"><_dtd:entry>Subtask<_dtd:_newline
/>49-50-65-700-007-A01<_dtd:_newline/>(Page 1010)</_dtd:entry><_dtd:entry
>Paragraph 2.L. Step (2). Added steps to 2.L. Position Indicator Switch.</_dtd:entry
><_dtd:entry>All</_dtd:entry></_dtd:row><_dtd:row rowsep="0"><_dtd:entry
>Subtask<_dtd:_newline/>49-50-65-700-007-A01<_dtd:_newline/>(Page
1010)</_dtd:entry><_dtd:entry>Paragraph 2.L. Step (2). Added steps
to 2.L. Position Indicator Switch.</_dtd:entry><_dtd:entry>All</_dtd:entry
></_dtd:row><_dtd:row rowsep="0"><_dtd:entry>Subtask<_dtd:_newline
/>49-50-65-700-007-A01<_dtd:_newline/>(Page 1010)</_dtd:entry><_dtd:entry
>Paragraph 2.L. Step (2). Added steps to 2.L. Position Indicator Switch.</_dtd:entry
><_dtd:entry>All</_dtd:entry></_dtd:row><_dtd:row rowsep="0"><_dtd:entry
>Subtask<_dtd:_newline/>49-50-65-700-007-A01<_dtd:_newline/>(Page
1010)</_dtd:entry><_dtd:entry>Paragraph 2.L. Step (2). Added steps
to 2.L. Position Indicator Switch.</_dtd:entry><_dtd:entry>All</_dtd:entry
></_dtd:row><_dtd:row rowsep="0"><_dtd:entry>Subtask<_dtd:_newline
/>49-50-65-700-007-A01<_dtd:_newline/>(Page 1010)</_dtd:entry><_dtd:entry
>Paragraph 2.L. Step (2). Added steps to 2.L. Position Indicator Switch.</_dtd:entry
><_dtd:entry>All</_dtd:entry></_dtd:row><_dtd:row><_dtd:entry>Subtask<_dtd:_newline
/>49-50-65-700-007-A01<_dtd:_newline/>(Page 1010)</_dtd:entry><_dtd:entry
>Paragraph 2.L. Step (2). Added steps to 2.L. Position Indicator Switch.</_dtd:entry
><_dtd:entry>All</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="It's possible for there to be no changes, so make a condition for that here: omit the table altogether.">
<Tests>
<XPathTest
expression="count(//reasonForUpdate[@updateHighlight='0'])=count(//reasonForUpdate)"/>
</Tests>
<BaseProperties>
<Breaks startNew="none"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab9963010-b677-44d1-956d-cf118e33ba84"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:TableOfHighlights

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "_ufeTableOfHighlights_everywhere0257";
contextProp.pdfTag = 'P';
contextProp.pdfAttrs = {};

// Base properties

if ( formatting.evaluateXPath( " boolean( count(//reasonForUpdate[@updateHighlight='0']) != count(//reasonForUpdate) )", 130, template.primaryStream ) != 0 )
{

//if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:_ufe:TableOfHighlights:_ufeTableOfHighlights_everywhere0257:addBefore');

   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:TableOfHighlights:_ufeTableOfHighlights_everywhere0257:addBefore', primaryStream.type );
	}
	else {
		stream.clear();
	}

  if (true) {
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Aba74354f-a6bf-466e-be7a-59fdaf770185\"><_gte:Target lang=\"en\"><table frame=\"topbot\"><title>Table of Highlights</title><tgroup cols=\"3\"><?PubTbl tgroup cbmarg=\"5.00pt\"?>" );
    stream.write( "<colspec colname=\"col1\" colwidth=\"2.00in\" colsep=\"0\"/><colspec colname=\"COLSPEC0\" colwidth=\"4.00*\" colsep=\"0\"/><colspec colname=\"col2\" colwidth=\"1.25in\"/><thead><row rowsep=\"0\"><entry align=\"left\" valign=\"top\" rowsep=\"1\">" );
    stream.write( "Task/Page</entry><entry align=\"left\" valign=\"top\" rowsep=\"1\">Description of Change</entry><entry align=\"left\" valign=\"top\" rowsep=\"1\">Effectivity</entry></row></thead><tbody>");

      // Generate the Highlights (which is a list of the "reasons for change") using a script.

      // Changes that we are reporting are usually encoded with an idref to a reasonForUpdate,
      // and a changeType attribute on the changed para/table/figure/etc.

		// First output the front-matter pmEntries that have a reasonForUpdate (that occur before or in the Introduction, pmt58)
		
		// Count the number of dmodules that have a reasonForUpdate
		var count = formatting.evaluateXPath("count(/pm/content/pmEntry[following-sibling::pmEntry[@pmEntryType='pmt58']]/dmContent/dmodule[identAndStatusSection/dmStatus/reasonForUpdate])");
         	//stream.write( "<row rowsep=\"0\"><entry>count: " + count + "</entry><entry>z</entry><entry/></row>"); // debugging

		// Loop through the front-matter modules with reasonForUpdates
		for (var i = 1; i <= count; i++) {

			// For pmt77 (after title page - "Honeywell confidential", etc.) we use the title of the first levelledPara rather than
			// the pmEntryTitle of the section.
			var pmEntryType = formatting.evaluateXPath("(/pm/content/pmEntry[following-sibling::pmEntry[@pmEntryType='pmt58']]/dmContent/dmodule[identAndStatusSection/dmStatus/reasonForUpdate])[" + i + "]/ancestor::pmEntry/@pmEntryType");
			var sectionName;
			if (pmEntryType == "pmt77") {
				sectionName = formatting.evaluateXPath("string((/pm/content/pmEntry[following-sibling::pmEntry[@pmEntryType='pmt58']]/dmContent/dmodule[identAndStatusSection/dmStatus/reasonForUpdate])[" + i + "]/content/descendant::title[1])");
			}
			else {
				sectionName = formatting.evaluateXPath("string((/pm/content/pmEntry[following-sibling::pmEntry[@pmEntryType='pmt58']]/dmContent/dmodule[identAndStatusSection/dmStatus/reasonForUpdate])[" + i + "]/ancestor::pmEntry/pmEntryTitle)");
			}

         	// There can be more than one RFU per dmodule in the front-matter sections
         	var rfuCount = formatting.evaluateXPath("count((/pm/content/pmEntry[following-sibling::pmEntry[@pmEntryType='pmt58']]/dmContent/dmodule[identAndStatusSection/dmStatus/reasonForUpdate])[" + i + "]/identAndStatusSection/dmStatus/reasonForUpdate)");

         	//stream.write( "<row rowsep=\"0\"><entry>rfuCount: " + rfuCount + "</entry><entry>pmEntryType: " + pmEntryType + "</entry><entry/></row>"); // debugging
			
         	for (var j = 1; j <= rfuCount; j++) {
         	  var rfu = formatting.evaluateXPath("string((/pm/content/pmEntry[following-sibling::pmEntry[@pmEntryType='pmt58']]/dmContent/dmodule[identAndStatusSection/dmStatus/reasonForUpdate])[" + i + "]/identAndStatusSection/dmStatus/reasonForUpdate[" + j + "])");
	
         	  stream.write( "<row rowsep=\"0\">");
         	  stream.write( "<entry>" + sectionName + "</entry>" );
         	  stream.write( "<entry colsep=\"0\">" + rfu + "</entry>" );
         	  stream.write( "<entry>All</entry>" ); // debug: highlights[i][0] + ": " + 

         	  stream.write( "</row>" );
         	}
		}


		// Search for changes to add to the highlight table

		// Search in PMs after or including the Introduction
		var pmSelector = "/pm/content/pmEntry[preceding-sibling::pmEntry[@pmEntryType='pmt58'] or @pmEntryType='pmt58']";

		// Select particular elements with attributes reasonForUpdateRefIds and changeType set
		var changeSelector = "//*[name()='para' or name()='graphic' or name()='itemSeqNumber' or name()='note' or name()='notePara' or name()='figure' or name()='proceduralStep' or name()='levelledPara' or name()='table'][@reasonForUpdateRefIds][@changeType]";

		count = formatting.evaluateXPath("count(" + pmSelector + changeSelector + ")");

		//stream.write( "<row rowsep=\"0\"><entry>change count: " + count + "</entry><entry/><entry/></row>"); // debugging

		var allEntries = new Array();

function entryExists(allE, newE) {
	for (var i = 0; i < allE.length; i++) {
		// Compare only particular entries:
		// [highlightType, highlightAuthorityDocument, figureId, iplFigureId, paraId, paraId2, paraId3, reasonForUpdateRefIds];
		if (newE[0] == allE[i][0] && newE[1] == allE[i][1] && newE[2] == allE[i][2] && newE[3] == allE[i][3] && newE[7] == allE[i][7]) {
			return true;
		}
	}
	return false;
}

		
		for (i = 1; i <= count; i++) {

         	var highlightType = "NOT FOUND";
         	var highlightAuthorityDocument = "NOT FOUND";
         	var figureId = "NOT FOUND";
         	var tableId = "NOT FOUND";
         	var legendId = "NOT FOUND";
         	var iplFigureId = "NOT FOUND";
         	var paraId = "NOT FOUND";
         	var paraId2 = "NOT FOUND";
         	var pageNo = "NOT FOUND";
         	var reasonForUpdateRefIds = "NOT FOUND";
         	var isLevelledPara = false;
         	var isInLegend = false;
         	var realId;
         	// New for EM:

					var nodeList = formatting.currentXMLNode.evaluateXPath("(" + pmSelector + changeSelector + ")[" + i + "]");
					if (nodeList && nodeList.nodeListValue) {
						var node = nodeList.nodeListValue.item(0);
						isLevelledPara = node.getAttribute("isLevelledPara") == "1";
						isInLegend = node.getAttribute("inLegend") == "1";
						realId = node.getAttribute("id");
         		highlightType = node.getAttribute("highlightType");
         		highlightAuthorityDocument = node.getAttribute("highlightAuthorityDocument");
         		figureId = node.getAttribute("figureId");
         		tableId = node.getAttribute("tableId");
         		legendId = node.getAttribute("legendId");
         		iplFigureId = node.getAttribute("iplFigureId");
         		pmEntryId = node.getAttribute("pmEntryId");
         		paraId = node.getAttribute("paraId");
         		paraId1 = node.getAttribute("paraId1");
         		paraId2 = node.getAttribute("paraId2");
         		paraId3 = node.getAttribute("paraId3");
         		paraId4 = node.getAttribute("paraId4");
         		paraId5 = node.getAttribute("paraId5");
         		paraId6 = node.getAttribute("paraId6");
         		pageNo = node.getAttribute("pageNo");
         		reasonForUpdateRefIds = node.getAttribute("reasonForUpdateRefIds");

						// Save the new entry if it is unique so far. Leave out the page number though.
						var newEntry = [highlightType, highlightAuthorityDocument, figureId, iplFigureId, paraId, paraId2, paraId3, reasonForUpdateRefIds];
						if (!entryExists(allEntries, newEntry)) {
							allEntries.push(newEntry);
						}
						else {
							continue;
						}
						//stream.write( "<row rowsep=\"0\"><entry>Entry:</entry><entry>" + newEntry + "</entry><entry/></row>"); // debugging
						if (false) {
							stream.write( "<row rowsep=\"0\"><entry>Entry:</entry><entry>");
							stream.write( "<para>nodeName: " + node.nodeName + "</para>");
							stream.write( "<para>highlightType: " + highlightType + "</para>");
							stream.write( "<para>isLevelledPara: " + isLevelledPara + "; isInLegend: " + isInLegend + "</para>");
							stream.write( "<para>paraId: " + paraId + "</para>");
							stream.write( "<para>paraId1: " + paraId1 + "</para>");
							stream.write( "<para>paraId2: " + paraId2 + "</para>");
							stream.write( "<para>paraId3: " + paraId3 + "</para>");
							stream.write( "<para>realId: " + realId + "</para>");
							stream.write( "<para>reasonForUpdateRefIds: " + reasonForUpdateRefIds + "</para>");
							stream.write( "</entry><entry/></row>"); // debugging
						}
					}

        	  stream.write( "<row rowsep=\"0\">");
					//stream.write( "<entry>" + i);

        	  stream.write( "<entry>" + highlightType + "<_newline/>");

					if (iplFigureId) {
						stream.write("<internalRef internalRefId=\"" + iplFigureId + "\"/><_newline/>");
					}
					else if (highlightAuthorityDocument) {
						stream.write(highlightAuthorityDocument + "<_newline/>");
					}

					if (pageNo && !iplFigureId) {
						if (paraId) {
							stream.write( "(Page <xlink:locator xlink:href=\"" + paraId + "\" xlink:label=\"" + pageNo + "\"/>)" );
						}
						else if (figureId) {
							stream.write( "(Page <xlink:locator xlink:href=\"" + figureId + "\" xlink:label=\"" + pageNo + "\"/>)" );
						}
						else if (realId) {
							stream.write( "(Page <xlink:locator xlink:href=\"" + realId + "\" xlink:label=\"" + pageNo + "\"/>)" );
						}
						else {
							stream.write( "(Page " + pageNo + ")" );
						}
					}

        	  stream.write( "</entry>" );

        	  stream.write( "<entry colsep=\"0\">");

					// Treat an update in a legend as part of the figure
					if (isInLegend) {
						stream.write("<link idref='" + legendId + "'><internalRef internalRefId=\"" + figureId + "\"/></link>. "); // "Figure" will be output as part of the xref
					}
					// Special rules for levelledPara (proceduralStep and its nested paras below)
					else if (paraId && isLevelledPara) {
						stream.write("Paragraph <!--(id: " + paraId + ") -->");

						// Surround the xrefs with a link to the para (over-rides the individual xref links)
						// If the node is a table, link to the table rather than the surrounding para
						stream.write( "<link idref='" + (node.nodeName == 'table' ? realId : paraId) + "'>" );


						// Write out the full paragraph/procedural step number, starting with the pmEntry number
						if (pmEntryId) {
							stream.write("<internalRef internalRefId=\"" + pmEntryId + "\"/>.");
						}

						// The levelledPara ids should be saved in order by the Property Set "Set Para Highlight Info"
						if (paraId1) {
							stream.write("<internalRef internalRefId=\"" + paraId1 + "\"/>.");
						}
						if (paraId2) {
							// At this level add the prefix "Step"
							stream.write(" Step <internalRef internalRefId=\"" + paraId2 + "\"/>");
						}
						if (paraId3) {
							stream.write("<internalRef internalRefId=\"" + paraId3 + "\"/>.");
						}
						if (paraId4) {
							stream.write("<internalRef internalRefId=\"" + paraId4 + "\"/>");
						}
						if (paraId5) {
							stream.write("<internalRef internalRefId=\"" + paraId5 + "\"/>");
						}
						if (paraId6) {
							stream.write("<internalRef internalRefId=\"" + paraId6 + "\"/>");
						}
						//if (node.nodeName == "proceduralStep") {
						//	stream.write("<internalRef internalRefId=\"" + realId + "\"/>");
						//}

						stream.write( "</link>" );
						if (paraId2) {
							// If there was at least paraId2, there is a Step specified, and we need to add a period after
							stream.write( "." );
						}
						stream.write( " " );
					}

					// proceduralStep and its nested paras
					else if (paraId) {
						stream.write("Paragraph <!--(id: " + paraId + ") -->");

						// Surround the xrefs with a link to the para (over-rides the individual xref links)
						// If the node is a table, link to the table rather than the surrounding para
						stream.write( "<link idref='" + (node.nodeName == 'table' ? realId : paraId) + "'>" );

						// Write out the full paragraph/procedural step number, starting with the pmEntry number
						if (pmEntryId) {
							stream.write("<internalRef internalRefId=\"" + pmEntryId + "\"/>.");
						}

						// The proceduralStep ids should be saved in order by the Property Set "Set Para Highlight Info"
						if (paraId1) {
							stream.write("<internalRef internalRefId=\"" + paraId1 + "\"/>.");
						}
						if (paraId2) {
							// At this level add the prefix "Step"
							stream.write(" Step <internalRef internalRefId=\"" + paraId2 + "\"/>");
						}
						if (paraId3) {
							stream.write("<internalRef internalRefId=\"" + paraId3 + "\"/>");
						}
						if (paraId4) {
							stream.write("<internalRef internalRefId=\"" + paraId4 + "\"/>");
						}
						if (paraId5) {
							stream.write("<internalRef internalRefId=\"" + paraId5 + "\"/>");
						}
						if (paraId6) {
							stream.write("<internalRef internalRefId=\"" + paraId6 + "\"/>");
						}
						//if (node.nodeName == "proceduralStep") {
						//	stream.write("<internalRef internalRefId=\"" + realId + "\"/>");
						//}

						stream.write( "</link>" );
						if (paraId2) {
							// If there was at least paraId2, there is a Step specified, and we need to add a period after
							stream.write( "." );
						}
						stream.write( " " );
					}
					else if (figureId && !iplFigureId) {
						stream.write("<internalRef internalRefId=\"" + figureId + "\"/>. "); // "Figure" will be output as part of the xref
					}
					else if (tableId) {
						stream.write("<link idref='" + tableId + "'>Table <internalRef internalRefId=\"" + tableId + "\"/></link>. ");
					}

					// This should be a plain para in a description: use the pmEntry number
					else if (node.nodeName == "para" && pmEntryId && realId) {
						stream.write( "<link idref='" + realId + "'>" );

						// Surround the xrefs with a link to the para (over-rides the individual xref links)
						stream.write("Paragraph <internalRef internalRefId=\"" + pmEntryId + "\"/>. ");
						stream.write( "</link>" );
					}

					if (reasonForUpdateRefIds) {
						stream.write("<_gte:ElementContent include=\"contentOnly\" xpath=\"id('" + reasonForUpdateRefIds + "')\"/>");
					}


        	  stream.write( "</entry>");

        	  stream.write( "<entry>All</entry>" );

        	  stream.write( "</row>" );
		}

    stream.write( "</tbody></tgroup></table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
//}
}


fish[ 'gentextResolved' ] = 0; // Allows conditions to overwrite gentext

/*
if ( formatting.evaluateXPath( " boolean( count(//reasonForUpdate[@updateHighlight='0'])=count(//reasonForUpdate) )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  contextProp.startNew = 0;
  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:_ufe:TableOfHighlights:_ufeTableOfHighlights_everywhere0257:addBefore_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:TableOfHighlights:_ufeTableOfHighlights_everywhere0257:addBefore_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Ab9963010-b677-44d1-956d-cf118e33ba84\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentBefore( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' ) {
    currentNode.augmentAfter( null );
    currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
  }

}
*/

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:TableOfHighlights

template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "_ufeTableOfHighlights_everywhere0257", false, false );
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element
comment='"Temporary" heading; used for a heading of various sections for development purposes. Not meant for final version.'
name="_ufe:TempHeading" style="block">
<Context priority="0" selector="_ufe:TempHeading">
<BaseProperties>
<Font size="12pt" weight="bold"/>
<Highlight textUnderlineStyle="underline"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:Test" style="block">
<Context priority="0" selector="_ufe:Test">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A209a8a08-9419-4022-8e5f-ada046314439"><_gte:Target lang="en"
><_dtd:table><_dtd:tgroup cols="4"><_dtd:colspec colname="col1"
colwidth="1.50*"/><_dtd:colspec colname="col2" colwidth="0.83*"/><_dtd:colspec
colname="col3" colwidth="0.40*"/><_dtd:colspec colname="col4"
colwidth="1.27*"/><_dtd:tbody><_dtd:row><_dtd:entry></_dtd:entry><_dtd:entry
nameend="col3" namest="col2">asdasd<_dtd:_hardspace/>sdasdad</_dtd:entry
><_dtd:entry></_dtd:entry></_dtd:row><_dtd:row><_dtd:entry>asd</_dtd:entry
><_dtd:entry align="right">asda</_dtd:entry><_dtd:entry>asda</_dtd:entry
><_dtd:entry>asda</_dtd:entry></_dtd:row><_dtd:row><_dtd:entry></_dtd:entry
><_dtd:entry></_dtd:entry><_dtd:entry></_dtd:entry><_dtd:entry></_dtd:entry
></_dtd:row><_dtd:row><_dtd:entry></_dtd:entry><_dtd:entry></_dtd:entry
><_dtd:entry></_dtd:entry><_dtd:entry></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:TitleCase" style="inline">
<Context priority="0" selector="_ufe:TitleCase">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:TitleCase

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

template.content.functions[ template.stylerNamespace ].PropertySet['Title_Case'].onEnter( block, contextProp );
contextProp.isBlock =  isBlock = 0;
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );

// SOURCE EDIT: Output some APP PIs to change the first character of each word to uppercase.
// NOTE: Will only work with relatively simple cases (words separated by spaces).
formatting.output("<?up><?tcaps=1><?char><?down>");
formatting.output("<?:loop><#,32><?up><?tcaps=1> <?char><?down><?{loop>");

// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:TitleCase

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();

template.content.functions[ template.stylerNamespace ].PropertySet['Title_Case'].onExit();

if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ToC" style="block">
<Context priority="0" selector="_ufe:ToC">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Default_Page_Set"
pageNumber="continue"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A417ccb81-c2b3-442a-a9c2-deb4d3d9bd01"><_gte:Target lang="en"
><_ufe:ToC_Title_Repeat></_ufe:ToC_Title_Repeat><_ufe:ToCTitle></_ufe:ToCTitle
><_ufe:ToCHeadings></_ufe:ToCHeadings><_ufe:LEP_save_ToC_start_page
></_ufe:LEP_save_ToC_start_page><_sfe:TableOfContents><_sfe:TocMain_ToC
><_gte:TableOfContents tocNameRef="Main_ToC"/></_sfe:TocMain_ToC></_sfe:TableOfContents
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Acf47af43-6bc6-4f05-af96-7f721b190107"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition comment="Use customized ToC for SDOM/SDIM/IM">
<Tests>
<XPathTest
expression="/pm/@type='im' or /pm/@type='sdim' or /pm/@type='sdom'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa9b33cb5-8edf-4538-9288-1839a604674c"><_gte:Target lang="en"
><_ufe:ToC_Title_Repeat></_ufe:ToC_Title_Repeat><_ufe:ToCTitle></_ufe:ToCTitle
><_ufe:ToCHeadings></_ufe:ToCHeadings><_ufe:LEP_save_ToC_start_page
></_ufe:LEP_save_ToC_start_page><_sfe:TableOfContents><_sfe:TocMain_ToC_IM
><_gte:TableOfContents tocNameRef="Main_ToC_IM"/></_sfe:TocMain_ToC_IM
></_sfe:TableOfContents></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A45a6bb9a-6524-4d10-835d-e2f35fb5e7f8"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:ToCHeadings" style="block">
<Context priority="0" selector="_ufe:ToCHeadings">
<BaseProperties propertySetReferences="Centred_Heading_TOC">
<SpaceAfter optimum="10pt"/>
<Breaks blockOrInline="block"/>
<Keep withNext="0"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A42013e79-b357-4bad-81f1-6b788831d98d"><_gte:Target lang="en"
><_gte:Font TypeSize="12pt" FamName="Arial">LIST OF SECTIONS</_gte:Font
><_dtd:_newline/><_gte:Font Underline="single" ScoreSpace="yes"
ScoreColor="black" Weight="bold" TypeSize="12pt">Title<_gte:Leaders
leaderType="text" lenType="fit" minLen="0.00pt" leaderText=" "
vshift="0.00pt"/>Page</_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ToCTitle" style="block">
<Context priority="0" selector="_ufe:ToCTitle">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font size="14pt" weight="bold"/>
<Alignment align="center"/>
<SpaceAfter optimum="4pt"/>
<Breaks blockOrInline="block"/>
<Keep withNext="0"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae28458a3-5fef-4822-9f68-11fec973baef"><_gte:Target lang="en"
><_ufe:FrontToCTitle><_ufe:FrontToCStyle>TABLE OF CONTENTS</_ufe:FrontToCStyle
></_ufe:FrontToCTitle></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ToC_Figures" style="block">
<Context priority="0" selector="_ufe:ToC_Figures">
<BaseProperties>
<Breaks blockOrInline="block" pageNumber="continue" startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Abef54ce4-9401-4217-a14d-aa8bbb65ea90"><_gte:Target lang="en"
><_ufe:ToC_Title_Repeat_Figures></_ufe:ToC_Title_Repeat_Figures><_ufe:FrontToCTitle
><_ufe:FrontToCStyle>TABLE OF CONTENTS (Continued)</_ufe:FrontToCStyle
></_ufe:FrontToCTitle><_ufe:ListOfFiguresTitle></_ufe:ListOfFiguresTitle
><_ufe:ListOfFiguresHeadings></_ufe:ListOfFiguresHeadings><_sfe:TableOfContents
><_sfe:TocList_of_Figures><_gte:TableOfContents
tocNameRef="List_of_Figures"/></_sfe:TocList_of_Figures></_sfe:TableOfContents
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A14a679f7-60d8-4005-8e4a-7f335e5c61bc"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition comment="If there is an IPL, add the IPL Figures ToC">
<Tests>
<XPathTest
expression="/pm/content/pmEntry[@pmEntryType='pmt75']//illustratedPartsCatalog"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aced6885e-7a1d-4df4-890d-fec96fe299ec"><_gte:Target lang="en"
><_ufe:ToC_Title_Repeat_Figures></_ufe:ToC_Title_Repeat_Figures><_ufe:FrontToCTitle
><_ufe:FrontToCStyle>TABLE OF CONTENTS (Continued)</_ufe:FrontToCStyle
></_ufe:FrontToCTitle><_ufe:ListOfFiguresTitle></_ufe:ListOfFiguresTitle
><_ufe:ListOfFiguresHeadings></_ufe:ListOfFiguresHeadings><_sfe:TableOfContents
><_sfe:TocList_of_Figures><_gte:TableOfContents
tocNameRef="List_of_Figures"/></_sfe:TocList_of_Figures></_sfe:TableOfContents
><_ufe:ListOfIPLFiguresHeadings></_ufe:ListOfIPLFiguresHeadings><_sfe:TableOfContents
><_sfe:TocList_of_IPL_Figures><_gte:TableOfContents
tocNameRef="List_of_IPL_Figures"/></_sfe:TocList_of_IPL_Figures></_sfe:TableOfContents
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A44e5b553-adb3-4025-bd2a-eb2ca64e5b49"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:ToC_Indent" style="nostyle">
<Context priority="0" selector="_ufe:ToC_Indent">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[//Make a hanging indent for ToC items (inserted between the label and the text)
formatting.output("<?itab 1,0.25in,x>");]]></OnEnter><OnExit
type="application/x-javascript" xml:space="preserve"><![CDATA[]]></OnExit
></EditedSource>
</Context>
</Element>
<Element name="_ufe:ToC_Pageset" style="block">
<Context priority="0" selector="_ufe:ToC_Pageset">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="ToC_Page_Set"
pageNumber="initial" startNew="oddPage"/></BaseProperties>
</Context>
</Element>
<Element name="_ufe:ToC_Tables" style="block">
<Context priority="0" selector="_ufe:ToC_Tables">
<BaseProperties>
<Breaks blockOrInline="block" pageNumber="continue" startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A67c11078-833c-46bf-9579-5ccc08aaacd5"><_gte:Target lang="en"
><_ufe:ToC_Title_Repeat_Tables></_ufe:ToC_Title_Repeat_Tables><_ufe:FrontToCTitle
><_ufe:FrontToCStyle>TABLE OF CONTENTS (Continued)</_ufe:FrontToCStyle
></_ufe:FrontToCTitle><_ufe:ListOfTablesTitle></_ufe:ListOfTablesTitle
><_ufe:ListOfTablesHeadings></_ufe:ListOfTablesHeadings><_sfe:TableOfContents
><_sfe:TocList_of_Tables><_gte:TableOfContents
tocNameRef="List_of_Tables"/></_sfe:TocList_of_Tables></_sfe:TableOfContents
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ToC_Title_Repeat" style="title">
<Context priority="10" selector="_ufe:ToC//_ufe:ToC_Title_Repeat">
<BaseProperties>
<SpaceAfter optimum="10pt" precedence="force"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A364bc330-e140-4e8d-b0f2-cead0768c01c"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="Af53c3ea7-fa51-44c3-9a2c-97a082550ae2"><_gte:Target
lang="en"><_ufe:FrontToCTitle><_ufe:FrontToCStyle>TABLE OF CONTENTS
(Continued)</_ufe:FrontToCStyle></_ufe:FrontToCTitle><_ufe:ToCHeadings
></_ufe:ToCHeadings></_gte:Target></_gte:Translate></_sfe:RepeatingTitle
></_sfe:Gentext></RepeatingTitle>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:ToC_Title_Repeat">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1c029aa1-5474-47c6-bdd1-82ce0449abab"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ToC_Title_Repeat_Figures" style="title">
<Context priority="10"
selector="_ufe:ToC_Figures//_ufe:ToC_Title_Repeat_Figures">
<BaseProperties>
<SpaceAfter optimum="0pt" precedence="force"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0bbcdd81-4ada-44b6-bef0-3ab505ed38ea"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A0ee9e6ae-de18-4cf5-bc63-fdeaa173d099"><_gte:Target
lang="en"><_ufe:FrontToCTitle><_ufe:FrontToCStyle>TABLE OF CONTENTS
(Continued)</_ufe:FrontToCStyle></_ufe:FrontToCTitle><_ufe:ListOfFiguresTitle
></_ufe:ListOfFiguresTitle><_ufe:ListOfFiguresHeadings></_ufe:ListOfFiguresHeadings
></_gte:Target></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext
></RepeatingTitle>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:ToC_Title_Repeat_Figures">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0579e01c-1631-4298-a997-c851be59db87"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ToC_Title_Repeat_Tables" style="title">
<Context priority="10"
selector="_ufe:ToC_Tables//_ufe:ToC_Title_Repeat_Tables">
<BaseProperties>
<SpaceAfter optimum="10pt" precedence="force"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A19a165bb-ff14-4b60-b167-8fef08b2f400"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A60a132e5-8797-4154-aed7-ac6283fae653"><_gte:Target
lang="en"><_ufe:FrontToCTitle><_ufe:FrontToCStyle>TABLE OF CONTENTS
(Continued)</_ufe:FrontToCStyle></_ufe:FrontToCTitle><_ufe:ListOfTablesTitle
></_ufe:ListOfTablesTitle><_ufe:ListOfTablesHeadings></_ufe:ListOfTablesHeadings
></_gte:Target></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext
></RepeatingTitle>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="_ufe:ToC_Title_Repeat_Tables">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ada3972a1-2447-4ead-9582-8cb2a8089532"><_gte:Target lang="en"
>MATAFIx</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="_ufe:ToC_Title_level_3" style="inline">
<Context priority="0" selector="_ufe:ToC_Title_level_3">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aeb5579d1-10f8-4aef-add7-4dc9ceaf36bd"><_gte:Target lang="en"
><_gte:ElementLabelAndNumber display="A"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="A" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Aa4e7a6ed-5ae6-420a-b86d-c00e09e98fd8"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
description="This element wraps first level table of contents entries."
name="_sfe:TocEntry1_List_of_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry1_List_of_Figures">
<BaseProperties>
<Indent firstLineIndent="*-1in" lastLineRightIndent="0pt"
leftIndent="@1in" rightIndent="@2pc"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="0em" followWith="tab" includeLabel="yes"
numberAlignment="left" tabtoAfter="1in"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps first level table of contents entries."
name="_sfe:TocEntry1_List_of_IPL_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry1_List_of_IPL_Figures">
<BaseProperties>
<Indent firstLineIndent="*-1in" lastLineRightIndent="0pt"
leftIndent="@1in" rightIndent="@2pc"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="0em" followWith="tab" includeLabel="yes"
numberAlignment="left" tabtoAfter="1in"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps first level table of contents entries."
name="_sfe:TocEntry1_List_of_Tables" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry1_List_of_Tables">
<BaseProperties>
<Indent firstLineIndent="*-1in" lastLineRightIndent="0pt"
leftIndent="@1in" rightIndent="@2pc"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="0em" followWith="tab" includeLabel="yes"
numberAlignment="left" tabtoAfter="1in"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps first level table of contents entries."
name="_sfe:TocEntry1_Main_ToC" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry1_Main_ToC">
<BaseProperties>
<Font weight="bold"/>
<Indent firstLineIndent="*-4.00em" lastLineRightIndent="0pt"
leftIndent="@4em" rightIndent="@2pc"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="descendant::_ufe:FrontToCStyle"/></Tests>
<BaseProperties>
<Font weight="normal"/>
<SpaceBefore optimum="0pt"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element
description="This element wraps first level table of contents entries."
name="_sfe:TocEntry1_Main_ToC_IM" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry1_Main_ToC_IM">
<BaseProperties>
<Font weight="bold"/>
<Indent firstLineIndent="*-4em" lastLineRightIndent="0pt"
leftIndent="@4em" rightIndent="@2pc"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="0em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps first level table of contents entries."
name="_sfe:TocEntry1_PDF_Bookmarks" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry1_PDF_Bookmarks">
<BaseProperties>
<Indent firstLineIndent="*-4.00em" lastLineRightIndent="0pt"
leftIndent="@4em" rightIndent="@2pc"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps second level table of contents entries."
name="_sfe:TocEntry2_List_of_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry2_List_of_Figures">
<BaseProperties>
<Indent firstLineIndent="*-6em" lastLineRightIndent="0pt"
leftIndent="@6em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="2em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps second level table of contents entries."
name="_sfe:TocEntry2_List_of_IPL_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry2_List_of_IPL_Figures">
<BaseProperties>
<Indent firstLineIndent="*-6em" lastLineRightIndent="0pt"
leftIndent="@6em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="2em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps second level table of contents entries."
name="_sfe:TocEntry2_List_of_Tables" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry2_List_of_Tables">
<BaseProperties>
<Indent firstLineIndent="*-6em" lastLineRightIndent="0pt"
leftIndent="@6em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="2em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps second level table of contents entries."
name="_sfe:TocEntry2_Main_ToC" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry2_Main_ToC">
<BaseProperties>
<Indent firstLineIndent="*0.00in" lastLineRightIndent="0pt"
leftIndent="@0.25in" rightIndent="@2pc"/>
<SpaceBefore optimum="0pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps second level table of contents entries."
name="_sfe:TocEntry2_Main_ToC_IM" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry2_Main_ToC_IM">
<BaseProperties>
<Indent firstLineIndent="*0.00in" lastLineRightIndent="0pt"
leftIndent="@0.25in" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps second level table of contents entries."
name="_sfe:TocEntry2_PDF_Bookmarks" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry2_PDF_Bookmarks">
<BaseProperties>
<Indent firstLineIndent="*0.00in" lastLineRightIndent="0pt"
leftIndent="@0.25in" rightIndent="@2pc"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps third level table of contents entries."
name="_sfe:TocEntry3_List_of_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry3_List_of_Figures">
<BaseProperties>
<Indent firstLineIndent="*-8em" lastLineRightIndent="0pt"
leftIndent="@8em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="4em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps third level table of contents entries."
name="_sfe:TocEntry3_List_of_IPL_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry3_List_of_IPL_Figures">
<BaseProperties>
<Indent firstLineIndent="*-8em" lastLineRightIndent="0pt"
leftIndent="@8em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="4em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps third level table of contents entries."
name="_sfe:TocEntry3_List_of_Tables" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry3_List_of_Tables">
<BaseProperties>
<Indent firstLineIndent="*-8em" lastLineRightIndent="0pt"
leftIndent="@8em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="4em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps third level table of contents entries."
name="_sfe:TocEntry3_Main_ToC" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry3_Main_ToC">
<BaseProperties>
<Indent firstLineIndent="*0.00in" lastLineRightIndent="0pt"
leftIndent="@0.5in" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps third level table of contents entries."
name="_sfe:TocEntry3_Main_ToC_IM" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry3_Main_ToC_IM">
<BaseProperties>
<Indent firstLineIndent="*0.00in" lastLineRightIndent="0pt"
leftIndent="@0.5in" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps third level table of contents entries."
name="_sfe:TocEntry3_PDF_Bookmarks" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry3_PDF_Bookmarks">
<BaseProperties>
<Indent firstLineIndent="*0.00in" lastLineRightIndent="0pt"
leftIndent="@0.5in" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fourth level table of contents entries."
name="_sfe:TocEntry4_List_of_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry4_List_of_Figures">
<BaseProperties>
<Indent firstLineIndent="*-10em" lastLineRightIndent="0pt"
leftIndent="@10em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="6em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fourth level table of contents entries."
name="_sfe:TocEntry4_List_of_IPL_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry4_List_of_IPL_Figures">
<BaseProperties>
<Indent firstLineIndent="*-10em" lastLineRightIndent="0pt"
leftIndent="@10em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="6em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fourth level table of contents entries."
name="_sfe:TocEntry4_List_of_Tables" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry4_List_of_Tables">
<BaseProperties>
<Indent firstLineIndent="*-10em" lastLineRightIndent="0pt"
leftIndent="@10em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="6em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fourth level table of contents entries."
name="_sfe:TocEntry4_Main_ToC" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry4_Main_ToC">
<BaseProperties>
<Indent firstLineIndent="*-10em" lastLineRightIndent="0pt"
leftIndent="@10em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="6em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fourth level table of contents entries."
name="_sfe:TocEntry4_Main_ToC_IM" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry4_Main_ToC_IM">
<BaseProperties>
<Indent firstLineIndent="*-10em" lastLineRightIndent="0pt"
leftIndent="@10em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="6em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fourth level table of contents entries."
name="_sfe:TocEntry4_PDF_Bookmarks" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry4_PDF_Bookmarks">
<BaseProperties>
<Indent firstLineIndent="*-10em" lastLineRightIndent="0pt"
leftIndent="@10em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="6em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fifth level table of contents entries."
name="_sfe:TocEntry5_List_of_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry5_List_of_Figures">
<BaseProperties>
<Indent firstLineIndent="*-12em" lastLineRightIndent="0pt"
leftIndent="@12em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="8em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fifth level table of contents entries."
name="_sfe:TocEntry5_List_of_IPL_Figures" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry5_List_of_IPL_Figures">
<BaseProperties>
<Indent firstLineIndent="*-12em" lastLineRightIndent="0pt"
leftIndent="@12em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="8em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fifth level table of contents entries."
name="_sfe:TocEntry5_List_of_Tables" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry5_List_of_Tables">
<BaseProperties>
<Indent firstLineIndent="*-12em" lastLineRightIndent="0pt"
leftIndent="@12em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="8em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fifth level table of contents entries."
name="_sfe:TocEntry5_Main_ToC" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry5_Main_ToC">
<BaseProperties>
<Indent firstLineIndent="*-12em" lastLineRightIndent="0pt"
leftIndent="@12em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="8em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fifth level table of contents entries."
name="_sfe:TocEntry5_Main_ToC_IM" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry5_Main_ToC_IM">
<BaseProperties>
<Indent firstLineIndent="*-12em" lastLineRightIndent="0pt"
leftIndent="@12em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="8em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps fifth level table of contents entries."
name="_sfe:TocEntry5_PDF_Bookmarks" style="link">
<LinkDetails idrefAttrname="tocentry_id"/>
<Context priority="0" selector="_sfe:TocEntry5_PDF_Bookmarks">
<BaseProperties>
<Indent firstLineIndent="*-12em" lastLineRightIndent="0pt"
leftIndent="@12em" rightIndent="@2pc"/>
<Breaks blockOrInline="block"/>
<NumberLayout alignAt="8em" followWith="space" includeLabel="yes"
numberAlignment="left" tabtoAfter="0em"/></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the label and number of table of contents entries."
name="_sfe:TocLabel_List_of_Figures" style="inline">
<Context priority="0" selector="_sfe:TocLabel_List_of_Figures">
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A490dc910-be1a-4d77-a079-b5b101d519d7"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the label and number of table of contents entries."
name="_sfe:TocLabel_List_of_IPL_Figures" style="inline">
<Context priority="0" selector="_sfe:TocLabel_List_of_IPL_Figures">
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7c0476b8-f6b6-45fa-80aa-77d744953d5f"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the label and number of table of contents entries."
name="_sfe:TocLabel_List_of_Tables" style="inline">
<Context priority="0" selector="_sfe:TocLabel_List_of_Tables">
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aff54c2c7-df99-4cd7-aafa-aedd7c0bbeec"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the label and number of table of contents entries."
name="_sfe:TocLabel_Main_ToC" style="inline">
<Context priority="0" selector="_sfe:TocLabel_Main_ToC">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the label and number of table of contents entries."
name="_sfe:TocLabel_Main_ToC_IM" style="inline">
<Context priority="0" selector="_sfe:TocLabel_Main_ToC_IM">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps the label and number of table of contents entries."
name="_sfe:TocLabel_PDF_Bookmarks" style="inline">
<Context priority="0" selector="_sfe:TocLabel_PDF_Bookmarks">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element description="This element wraps a table of contents."
name="_sfe:TocList_of_Figures" style="block">
<Context priority="0" selector="_sfe:TocList_of_Figures">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element description="This element wraps a table of contents."
name="_sfe:TocList_of_IPL_Figures" style="block">
<Context priority="0" selector="_sfe:TocList_of_IPL_Figures">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element description="This element wraps a table of contents."
name="_sfe:TocList_of_Tables" style="block">
<Context priority="0" selector="_sfe:TocList_of_Tables">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element description="This element wraps a table of contents."
name="_sfe:TocMain_ToC" style="block">
<Context priority="0" selector="_sfe:TocMain_ToC">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element description="This element wraps a table of contents."
name="_sfe:TocMain_ToC_IM" style="block">
<Context priority="0" selector="_sfe:TocMain_ToC_IM">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element description="This element wraps a table of contents."
name="_sfe:TocPDF_Bookmarks" style="block">
<Context priority="0" selector="_sfe:TocPDF_Bookmarks">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps page numbers in table of contents entries."
name="_sfe:TocPage_List_of_Figures" style="inline">
<Context priority="0" selector="_sfe:TocPage_List_of_Figures">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
<OutputProperties output="printpdf">
<Hidden hidden="no"/></OutputProperties>
</Context>
</Element>
<Element
description="This element wraps page numbers in table of contents entries."
name="_sfe:TocPage_List_of_IPL_Figures" style="inline">
<Context priority="0" selector="_sfe:TocPage_List_of_IPL_Figures">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
<OutputProperties output="printpdf">
<Hidden hidden="no"/></OutputProperties>
</Context>
</Element>
<Element
description="This element wraps page numbers in table of contents entries."
name="_sfe:TocPage_List_of_Tables" style="inline">
<Context priority="0" selector="_sfe:TocPage_List_of_Tables">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
<OutputProperties output="printpdf">
<Hidden hidden="no"/></OutputProperties>
</Context>
</Element>
<Element
description="This element wraps page numbers in table of contents entries."
name="_sfe:TocPage_Main_ToC" style="inline">
<Context priority="0" selector="_sfe:TocPage_Main_ToC">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
<OutputProperties output="printpdf">
<Hidden hidden="no"/></OutputProperties>
</Context>
</Element>
<Element
description="This element wraps page numbers in table of contents entries."
name="_sfe:TocPage_Main_ToC_IM" style="inline">
<Context priority="0" selector="_sfe:TocPage_Main_ToC_IM">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
<OutputProperties output="printpdf">
<Hidden hidden="no"/></OutputProperties>
</Context>
</Element>
<Element
description="This element wraps page numbers in table of contents entries."
name="_sfe:TocPage_PDF_Bookmarks" style="inline">
<Context priority="0" selector="_sfe:TocPage_PDF_Bookmarks">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
<OutputProperties output="printpdf">
<Hidden hidden="no"/></OutputProperties>
</Context>
</Element>
<Element
description="This element wraps title text in table of contents entries."
name="_sfe:TocTitle_List_of_Figures" style="inline">
<Context priority="0" selector="_sfe:TocTitle_List_of_Figures">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps title text in table of contents entries."
name="_sfe:TocTitle_List_of_IPL_Figures" style="inline">
<Context priority="0" selector="_sfe:TocTitle_List_of_IPL_Figures">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps title text in table of contents entries."
name="_sfe:TocTitle_List_of_Tables" style="inline">
<Context priority="0" selector="_sfe:TocTitle_List_of_Tables">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps title text in table of contents entries."
name="_sfe:TocTitle_Main_ToC" style="inline">
<Context priority="0" selector="_sfe:TocTitle_Main_ToC">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps title text in table of contents entries."
name="_sfe:TocTitle_Main_ToC_IM" style="inline">
<Context priority="0" selector="_sfe:TocTitle_Main_ToC_IM">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
description="This element wraps title text in table of contents entries."
name="_sfe:TocTitle_PDF_Bookmarks" style="inline">
<Context priority="0" selector="_sfe:TocTitle_PDF_Bookmarks">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="_ufe:ToolNameText" style="inline">
<Context priority="0" selector="_ufe:ToolNameText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ToolNameText

var toolNo = formatting.evaluateXPath("ancestor::supportEquipDescr/toolRef/@toolNumber");

var toolName = formatting.evaluateXPath("/pm/commonRepository/toolRepository/toolSpec[toolIdent/@toolNumber='" + toolNo + "']/itemIdentData/descrForPart");

// For "commercially available" tools, the toolSpec matches the id rather than the tool number.
if (!toolName || toolName == "") {
	toolName = formatting.evaluateXPath("/pm/commonRepository/toolRepository/toolSpec[toolIdent/@id='" + toolNo + "']/itemIdentData/descrForPart");
}

if (toolName && toolName != "") {
	formatting.output(toolName);
}
else {
	formatting.output("<?tic=r>Tool name not found for tool number: " + toolNo + "<?tic>");
}

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ToolNameText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ToolNameTextInternalRef" style="inline">
<Context priority="0" selector="_ufe:ToolNameTextInternalRef">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ToolNameTextInternalRef

var toolNo = formatting.evaluateXPath("id(ancestor::internalRef/@internalRefId)/toolRef/@toolNumber");

var toolName = formatting.evaluateXPath("/pm/commonRepository/toolRepository/toolSpec[toolIdent/@toolNumber='" + toolNo + "']/itemIdentData/descrForPart");

// For "commercially available" tools, the toolSpec matches the id rather than the tool number.
if (!toolName) {
	toolName = formatting.evaluateXPath("/pm/commonRepository/toolRepository/toolSpec[toolIdent/@id='" + toolNo + "']/itemIdentData/descrForPart");
}

if (toolName) {
	formatting.output(toolName);
}
else {
	formatting.output("<?tic=r>Tool descrForPart not found for tool number: " + toolNo + "<?tic>");
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ToolNameTextInternalRef

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ToolRefText" style="inline">
<Context priority="0" selector="_ufe:ToolRefText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ToolRefText

var toolNo = formatting.evaluateXPath("ancestor::supportEquipDescr/toolRef/@toolNumber");

// See if an id attribute in a toolSpec matches the tool number. If so, we just output "Commercially Available"
var numToolSpecs = formatting.evaluateXPath("count(/pm/commonRepository/toolRepository/toolSpec/toolIdent[@id='" + toolNo + "'])");

if (numToolSpecs > 0) {
	formatting.output("Commercially Available");
}
else {
	formatting.output("Part Number: " + toolNo + "\nCAGE: ");

	var mfrCode = formatting.evaluateXPath("/pm/commonRepository/toolRepository/toolSpec[toolIdent/@toolNumber='" + toolNo + "']/procurementData/enterpriseRef/@manufacturerCodeValue");

	if (mfrCode && mfrCode != "") {
		formatting.output(mfrCode);
	}
	else {
		formatting.output("<?tic=r>Manufacturer Code not found for tool number: " + toolNo + "<?tic>");
	}
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ToolRefText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:ToolShortNameText" style="inline">
<Context priority="0" selector="_ufe:ToolShortNameText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:ToolShortNameText

var toolNo = formatting.evaluateXPath("id(ancestor::internalRef/@internalRefId)/toolRef/@toolNumber");

var toolShortName = formatting.evaluateXPath("/pm/commonRepository/toolRepository/toolSpec[toolIdent/@toolNumber='" + toolNo + "']/itemIdentData/shortName");

// For "commercially available" tools, the toolSpec matches the id rather than the tool number.
if (!toolShortName || toolShortName == "") {
	toolShortName = formatting.evaluateXPath("/pm/commonRepository/toolRepository/toolSpec[toolIdent/@id='" + toolNo + "']/itemIdentData/shortName");
}

if (toolShortName && toolShortName != "") {
	formatting.output(toolShortName);
  //formatting.output("ZZ<internalLink idref='DMC-d1e23120-t001'>YY" + toolShortName + "</internalLink>");
}
else {
	formatting.output("<?tic=r>Tool short name not found for tool number: " + toolNo + "<?tic>");
}


]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:ToolShortNameText

]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:TopDataModuleCode" style="block">
<Context
comment="Only output when print-variant='dmc'. Set by menu item in Arbortext"
priority="0" selector="_ufe:TopDataModuleCode">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font italic="yes" size="8pt"/>
<Alignment align="left"/>
<SpaceBefore optimum="6pt" precedence="high"/>
<SpaceAfter optimum="5pt"/>
<Breaks blockOrInline="block"/>
<Keep withNext="5"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="/pm/@print-variant='dmc'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A00be26d2-83b7-4211-bff6-4fbbb4b1deeb"><_gte:Target lang="en"
><_ufe:DataModuleCode></_ufe:DataModuleCode> (<_gte:AttributeContent
attr="year"
xpath="ancestor::dmodule[1]/identAndStatusSection/dmAddress/dmAddressItems/issueDate"
/>-<_gte:AttributeContent attr="month"
xpath="ancestor::dmodule[1]/identAndStatusSection/dmAddress/dmAddressItems/issueDate"
/>-<_gte:AttributeContent attr="day"
xpath="ancestor::dmodule[1]/identAndStatusSection/dmAddress/dmAddressItems/issueDate"
/>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:TotalPages" style="inline">
<Context priority="0" selector="_ufe:TotalPages">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae1ae2dd8-b946-445f-a42b-072130aa5a1d"><_gte:Target lang="en"
>X</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M040" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: _ufe:TotalPages

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 0;

var totalPages = formatting.evaluateShowString("$^01536");

//if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
//{
   var stream = template.content.getStream('stylesheet0:Element:_ufe:TotalPages:_ufeTotalPages_everywhere7813:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:_ufe:TotalPages:_ufeTotalPages_everywhere7813:addBefore', primaryStream.type );
	}
	else {
		stream.clear();
	}
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\"><_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Ae1ae2dd8-b946-445f-a42b-072130aa5a1d\"><_gte:Target lang=\"en\">" + totalPages + "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   //}
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
//}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: _ufe:TotalPages

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="_ufe:TransmittalInformation" style="block">
<Context priority="0" selector="_ufe:TransmittalInformation">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/content/pmEntry/dmContent/dmodule[identAndStatusSection/dmAddress/dmIdent/dmCode/@infoCode='00U']"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Front_Matter_Page_Set" pageNumber="continue"
startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ace69682f-e5aa-434f-8bcc-5bf65b03c125"><_gte:Target lang="en"
><_gte:ElementContent include="elementAndContent"
xpath="/pm/content/pmEntry/dmContent/dmodule[identAndStatusSection/dmAddress/dmIdent/dmCode/@infoCode='00U']"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="_ufe:WarningCautionWrapper" style="block">
<Context priority="0" selector="_ufe:WarningCautionWrapper">
<BaseProperties>
<Breaks blockOrInline="block"/>
<Keep together="4" withNext="4"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="@false and not(name(ancestor::*[name()='addwarning' or name()='addcaution']/following-sibling::*[1])='addwarning' or name(ancestor::*[name()='addwarning' or name()='addcaution']/following-sibling::*[1])='addcaution')"/>
</Tests>
<BaseProperties>
<Keep together="4" withNext="7"/></BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest
expression="name(ancestor::*[name()='addwarning' or name()='addcaution']/preceding-sibling::*[1])='title'"/>
</Tests>
<BaseProperties>
<Keep keepScope="withinPage" withPrevious="7"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="accessFrom" style="unstyled">
<Context priority="0" selector="accessFrom">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="accessPoint" style="unstyled">
<Context priority="0" selector="accessPoint">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="accessPointAlts" style="unstyled">
<Context priority="0" selector="accessPointAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="accessPointIdent" style="unstyled">
<Context priority="0" selector="accessPointIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="accessPointRef" style="unstyled">
<Context priority="0" selector="accessPointRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="accessPointRefGroup" style="unstyled">
<Context priority="0" selector="accessPointRefGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="accessPointRepository" style="unstyled">
<Context priority="0" selector="accessPointRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="accessPointSpec" style="unstyled">
<Context priority="0" selector="accessPointSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="accessPointType" style="unstyled">
<Context priority="0" selector="accessPointType">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="accessTo" style="unstyled">
<Context priority="0" selector="accessTo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="acronym" style="inline">
<Context priority="0" selector="acronym">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="acronymDefinition" style="hidden">
<Context priority="0" selector="acronymDefinition">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="acronymTable" style="block">
<Context
comment="A special print-only element added by XSLT as a placeholder for where the Table of Acronyms and Abbreviations should be generated (transformed from a &lt;?Pub Acronym?> PI in the source XML)."
priority="0" selector="acronymTable">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac66fcf66-cf37-48f8-aa36-a0fd916ca7eb"><_gte:Target lang="en"
><_ufe:ListOfAbbreviations></_ufe:ListOfAbbreviations></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="acronymTerm" style="inline">
<Context
comment="Removed acronym definition in parens following the acronym"
priority="0" selector="acronymTerm">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="action" style="unstyled">
<Context priority="0" selector="action">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="addcaution" style="block">
<Context priority="20" selector="mainProcedure/addcaution">
<BaseProperties>
<Indent leftIndent="20mm"/>
<SpaceBefore optimum="8pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4da7c5b5-1ed8-44ad-860b-524e77d4ee76"><_gte:Target lang="en"
><_gte:Font Weight="bold">CAUTION:</_gte:Font> <_ufe:ProceduralStepCautionText
></_ufe:ProceduralStepCautionText><_dtd:_newline/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution')"/>
</Tests>
<BaseProperties>
<Keep withNext="4"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: mainProcedure/addcaution

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

//block.indentStart = '20mm';
//block.absoluteStart = 2;
block.indentStart = '0.5in';
block.absoluteStart = 0;

block.marginTop = '8pt';
contextProp.isBlock =  isBlock = 1;
block.keepTogether = 42;
block.keepWithNext = 42;

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:addcaution:addcaution_in_mainProcedure:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:addcaution:addcaution_in_mainProcedure:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A4da7c5b5-1ed8-44ad-860b-524e77d4ee76\"><_gte:Target lang=\"en\"><_ufe:WarningCautionWrapper><_gte:Font Underline=\"single\" ScoreSpace=\"yes\">CAUTION</_gte:Font>:<_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"11.5pt\"/><?A3B2 ri?><_ufe:ProceduralStepCautionText></_ufe:ProceduralStepCautionText>" );
      stream.write( "</_ufe:WarningCautionWrapper></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution') )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  block.keepWithNext = 42;

}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: mainProcedure/addcaution

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="10" selector="proceduralStep/addcaution">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad6a19e09-9fee-410e-b98d-1724a5e5a150"><_gte:Target lang="en"
><_gte:Font Underline="single" ScoreSpace="yes">CAUTION:</_gte:Font
> <_ufe:ProceduralStepCautionText></_ufe:ProceduralStepCautionText
><_dtd:_newline/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(preceding-sibling::*)!=0"/></Tests>
<BaseProperties>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest
expression="not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution')"/>
</Tests>
<BaseProperties>
<Keep withNext="4"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: proceduralStep/addcaution

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "addcaution_in_proceduralStep";
contextProp.pdfTag = 'P';
contextProp.pdfAttrs = {};

// Base properties
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:addcaution:addcaution_in_proceduralStep:addBefore');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:addcaution:addcaution_in_proceduralStep:addBefore', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Ad6a19e09-9fee-410e-b98d-1724a5e5a150\"><_gte:Target lang=\"en\"><_ufe:WarningCautionWrapper><_gte:Font Underline=\"single\" ScoreSpace=\"yes\">CAUTION</_gte:Font>:<_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"11.5pt\"/><?A3B2 ri?><_ufe:ProceduralStepCautionText>" );
    stream.write( "</_ufe:ProceduralStepCautionText></_ufe:WarningCautionWrapper></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::*)!=0 )", 130, template.primaryStream ) != 0 )
{

  // Base properties
  block.marginTop = '6pt';
  contextProp.isBlock = 1;

}

if ( formatting.evaluateXPath( " boolean( not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution') )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  block.keepWithNext = 42;

}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: proceduralStep/addcaution

template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "addcaution_in_proceduralStep", false, false );
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="0" selector="addcaution">
<BaseProperties>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Adac41cd1-68be-45f5-bd1e-27c977d96c5f"><_gte:Target lang="en"
><_gte:Font Underline="single" ScoreSpace="yes">CAUTION:</_gte:Font
> <_ufe:ProceduralStepCautionText></_ufe:ProceduralStepCautionText
><_dtd:_newline/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(preceding-sibling::*)!=0"/></Tests>
<BaseProperties>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest
expression="not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution')"/>
</Tests>
<BaseProperties>
<Keep withNext="4"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: addcaution

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

block.indentStart = '14mm';
block.marginTop = '6pt';
contextProp.isBlock =  isBlock = 1;
block.keepTogether = 42;
block.keepWithNext = 42;

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:addcaution:addcaution_everywhere:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:addcaution:addcaution_everywhere:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Adac41cd1-68be-45f5-bd1e-27c977d96c5f\"><_gte:Target lang=\"en\"><_ufe:WarningCautionWrapper><_gte:Font Underline=\"single\" ScoreSpace=\"yes\">CAUTION</_gte:Font>:<_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"8.00pt\"/><?A3B2 ri?><_ufe:ProceduralStepCautionText></_ufe:ProceduralStepCautionText>" );
      stream.write( "</_ufe:WarningCautionWrapper></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::*)!=0 )", 130, template.primaryStream, null ) != 0 )
{
   block.marginTop = '6pt';
   contextProp.isBlock =  isBlock = 1;
}

if ( formatting.evaluateXPath( " boolean( not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution') )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  block.keepWithNext = 42;

}


// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: addcaution

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="additionalModification" style="unstyled">
<Context priority="0" selector="additionalModification">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="addwarning" style="block">
<Context priority="20" selector="mainProcedure/addwarning">
<BaseProperties>
<Indent leftIndent="@0.5in"/>
<SpaceBefore optimum="8pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aef58ecee-20d3-4cff-bf6b-da95544339db"><_gte:Target lang="en"
><_gte:Font Weight="bold">WARNING:</_gte:Font> <_ufe:ProceduralStepWarningText
></_ufe:ProceduralStepWarningText><_dtd:_newline/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution')"/>
</Tests>
<BaseProperties>
<Keep withNext="4"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: mainProcedure/addwarning

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

//block.indentStart = '20mm';
//block.absoluteStart = 2;
block.indentStart = '0.5in';
block.absoluteStart = 0;

block.marginTop = '8pt';
contextProp.isBlock =  isBlock = 1;

block.keepTogether = 42;
block.keepWithNext = 42;

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:addwarning:addwarning_in_mainProcedure:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:addwarning:addwarning_in_mainProcedure:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Aef58ecee-20d3-4cff-bf6b-da95544339db\"><_gte:Target lang=\"en\"><_ufe:WarningCautionWrapper><_gte:Font Underline=\"single\" ScoreSpace=\"yes\" Weight=\"bold\">WARNING</_gte:Font>:<_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"8.00pt\"/><?A3B2 ri?><_gte:Font Weight=\"bold\"><_ufe:ProceduralStepWarningText></_ufe:ProceduralStepWarningText></_gte:Font>" );
      stream.write( "</_ufe:WarningCautionWrapper></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

if ( formatting.evaluateXPath( " boolean( not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution') )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  block.keepWithNext = 42;

}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: mainProcedure/addwarning

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="10" selector="proceduralStep/addwarning">
<BaseProperties>
<Indent leftIndent="@0in"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae44f92a4-60b2-4e48-bd4a-62d79e8296f4"><_gte:Target lang="en"
><_ufe:WarningCautionWrapper><_gte:Font Underline="single"
ScoreSpace="yes" Weight="bold">WARNING:</_gte:Font> <_ufe:ProceduralStepWarningText
></_ufe:ProceduralStepWarningText><_dtd:_newline/></_ufe:WarningCautionWrapper
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(preceding-sibling::*)!=0"/></Tests>
<BaseProperties>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest
expression="not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution')"/>
</Tests>
<BaseProperties>
<Keep withNext="4"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: proceduralStep/addwarning

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "addwarning_in_proceduralStep";
contextProp.pdfTag = 'P';
contextProp.pdfAttrs = {};

// Base properties
block.indentStart = '0in';
block.absoluteStart = 0;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:addwarning:addwarning_in_proceduralStep:addBefore');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:addwarning:addwarning_in_proceduralStep:addBefore', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A4fa0d48e-fec4-4995-a49c-4416d0e9bef0\"><_gte:Target lang=\"en\"><_ufe:WarningCautionWrapper><_gte:Font Underline=\"single\" ScoreSpace=\"yes\" Weight=\"bold\">WARNING</_gte:Font>:" );
    stream.write( "<_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"8.00pt\"/><?A3B2 ri?><_gte:Font Weight=\"bold\"><_ufe:ProceduralStepWarningText/></_gte:Font></_ufe:WarningCautionWrapper></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::*)!=0 )", 130, template.primaryStream ) != 0 )
{

  // Base properties
  block.marginTop = '6pt';
  contextProp.isBlock = 1;

}

if ( formatting.evaluateXPath( " boolean( not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution') )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  block.keepWithNext = 255;

}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: proceduralStep/addwarning

template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "addwarning_in_proceduralStep", false, false );
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="0" selector="addwarning">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A08d3256c-81cc-4e39-acdc-177fb3f960fd"><_gte:Target lang="en"
><_gte:Font Weight="bold">WARNING:</_gte:Font> <_ufe:ProceduralStepWarningText
></_ufe:ProceduralStepWarningText><_dtd:_newline/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(preceding-sibling::*)!=0"/></Tests>
<BaseProperties>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest
expression="not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution')"/>
</Tests>
<BaseProperties>
<Keep withNext="4"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: addwarning

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

block.indentStart= '14mm';

// context preamble complete.
block.keepTogether = 42;
block.keepWithNext = 42;

contextProp.isBlock =  isBlock = 1;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:addwarning:addwarning_everywhere:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:addwarning:addwarning_everywhere:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A08d3256c-81cc-4e39-acdc-177fb3f960fd\"><_gte:Target lang=\"en\"><_ufe:WarningCautionWrapper><_gte:Font Underline=\"single\" ScoreSpace=\"yes\" Weight=\"bold\">WARNING</_gte:Font>:<_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"8.00pt\"/><?A3B2 ri?><_gte:Font Weight=\"bold\"><_ufe:ProceduralStepWarningText></_ufe:ProceduralStepWarningText></_gte:Font>" );
      stream.write( "</_ufe:WarningCautionWrapper></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::*)!=0 )", 130, template.primaryStream, null ) != 0 )
{
   block.marginTop = '6pt';
   contextProp.isBlock =  isBlock = 1;
   block.absoluteStart = 0;

}

if ( formatting.evaluateXPath( " boolean( not(name(following-sibling::*[1])='addwarning' or name(following-sibling::*[1])='addcaution') )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  block.keepWithNext = 42;

}


// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: addwarning

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="alteredFromPart" style="unstyled">
<Context priority="0" selector="alteredFromPart">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="alteredFromPartDescr" style="unstyled">
<Context priority="0" selector="alteredFromPartDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="amperage" style="unstyled">
<Context priority="0" selector="amperage">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="applic" style="block">
<Context priority="10" selector="_ufe:FooterApplicabilityStyle//applic">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="0" selector="applic">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="applicCrossRefTableRef" style="unstyled">
<Context priority="0" selector="applicCrossRefTableRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="applicRef" style="unstyled">
<Context priority="0" selector="applicRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="applicRepository" style="unstyled">
<Context priority="0" selector="applicRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="applicSpec" style="unstyled">
<Context priority="0" selector="applicSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="applicSpecIdent" style="unstyled">
<Context priority="0" selector="applicSpecIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="applicabilitySegment" style="hidden">
<Context priority="0" selector="applicabilitySegment">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="xlink:arc" style="unstyled">
<Context priority="0" selector="xlink:arc">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="assert" style="hidden">
<Context priority="0" selector="assert">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="assocWarningMalfunction" style="unstyled">
<Context priority="0" selector="assocWarningMalfunction">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="assocWarningMalfunctionAlts" style="unstyled">
<Context priority="0" selector="assocWarningMalfunctionAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="attachStoreShipPart" style="unstyled">
<Context priority="0" selector="attachStoreShipPart">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="attachingPartsEnd" style="hidden">
<Context priority="0" selector="attachingPartsEnd">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="attachingPartsStart" style="hidden">
<Context priority="0" selector="attachingPartsStart">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="attentionListItemPara" style="block">
<Context priority="4" selector="attentionListItemPara[1]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="0" selector="attentionListItemPara">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="attentionRandomList" style="bulletedList">
<Context priority="27"
selector="warningAndCautionPara/attentionRandomList">
<BaseProperties
propertySetReferences="Standard_space Reverse_relative_indent">
<Indent leftIndent="@0.82in"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="22" selector="notePara[1]/attentionRandomList">
<BaseProperties
propertySetReferences="Standard_space Reverse_relative_indent">
<Indent leftIndent="@0.68in"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="20" selector="note/attentionRandomList">
<BaseProperties
propertySetReferences="Standard_space Reverse_relative_indent">
<Indent leftIndent="@0.68in"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(attentionRandomListItem) > 1"/></Tests>
<BaseProperties>
<Indent leftIndent="@0.76in"/></BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="0" selector="attentionRandomList">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="attentionRandomListItem" style="listItem">
<Context priority="40"
selector="attentionRandomList//attentionRandomList//attentionRandomList/attentionRandomListItem">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6f294ec7-7f40-452d-be5b-cdb4af50072a"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>♦</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="30"
selector="attentionRandomList//attentionRandomList/attentionRandomListItem">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A97d924b5-4d7f-41cb-8a2e-45de6350b65d"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>–</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20"
selector="attentionRandomList/attentionRandomListItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1b9e8b8d-7ded-4f52-9db8-9a74fce195e9"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>•</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="attentionRandomListItem">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="attentionSequentialList" style="numberedList">
<Context priority="0" selector="attentionSequentialList">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="parent::notePara"/></Tests>
<BaseProperties propertySetReferences="Reverse_relative_indent">
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="attentionSequentialListItem" style="listItem">
<Context priority="50"
selector="attentionSequentialList//attentionSequentialList//attentionSequentialList//attentionSequentialList/attentionSequentialListItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad9ef9ee0-09b3-4e4e-8617-c1f0993e2799"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) ')'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="A247ecab2-a0a9-4561-af94-b342e964f4a9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="40"
selector="attentionSequentialList//attentionSequentialList//attentionSequentialList/attentionSequentialListItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-3em" leftIndent="@3em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A57e78e45-5da0-42d6-abfb-3d67b946e4c6"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="2em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="i" tabtoAfter="3em">
<LabelAndNumber><_gte:Translate translate="off"
id="A7a71f90e-7dee-469a-8574-37999504866c"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="30"
selector="attentionSequentialList//attentionSequentialList/attentionSequentialListItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2em" leftIndent="@2em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1ba7ec55-1016-482d-aa46-f586f2530d5d"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="a" tabtoAfter="2em">
<LabelAndNumber><_gte:Translate translate="off"
id="A6beb04ea-5d9a-43b4-a26d-032bc17090b0"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20"
selector="attentionSequentialList/attentionSequentialListItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A26dec2f3-d739-4152-bfd0-0054e7bdf2ed"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Weight="bold"><_gte:ElementLabelAndNumber
display="1"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A05e63b25-1697-4d54-b644-6735cbe6538d"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="attentionSequentialListItem">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="authorityExceptions" style="unstyled">
<Context priority="0" selector="authorityExceptions">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="authorityInfo" style="unstyled">
<Context priority="0" selector="authorityInfo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="authorityInfoAndTp" style="unstyled">
<Context priority="0" selector="authorityInfoAndTp">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="authorityNotes" style="unstyled">
<Context priority="0" selector="authorityNotes">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="authorizationStatus" style="unstyled">
<Context priority="0" selector="authorizationStatus">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="basicCorrelatedFaults" style="block">
<Context priority="0" selector="basicCorrelatedFaults">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="behavior" style="unstyled">
<Context priority="0" selector="behavior">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="bitMessage" style="block">
<Context priority="0" selector="bitMessage">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="bitMessageAlts" style="unstyled">
<Context priority="0" selector="bitMessageAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="booleanFunction" style="unstyled">
<Context priority="0" selector="booleanFunction">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="booleanOperator" style="unstyled">
<Context priority="0" selector="booleanOperator">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="booleanValue" style="unstyled">
<Context priority="0" selector="booleanValue">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="boundary" style="unstyled">
<Context priority="0" selector="boundary">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="boundaryFrom" style="unstyled">
<Context priority="0" selector="boundaryFrom">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="boundaryTo" style="unstyled">
<Context priority="0" selector="boundaryTo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="brexDmRef" style="unstyled">
<Context priority="0" selector="brexDmRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="building" style="unstyled">
<Context priority="0" selector="building">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="businessUnit" style="unstyled">
<Context priority="0" selector="businessUnit">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="businessUnitAddress" style="unstyled">
<Context priority="0" selector="businessUnitAddress">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="businessUnitName" style="unstyled">
<Context priority="0" selector="businessUnitName">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="buyerFurnishedEquipFlag" style="unstyled">
<Context priority="0" selector="buyerFurnishedEquipFlag">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="calibrationMarker" style="unstyled">
<Context priority="0" selector="calibrationMarker">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="caption" style="block">
<Context priority="0" selector="caption">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="captionBody" style="unstyled">
<Context priority="0" selector="captionBody">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="captionEntry" style="unstyled">
<Context priority="0" selector="captionEntry">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="captionGroup" style="unstyled">
<Context priority="0" selector="captionGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="captionLine" style="block">
<Context priority="0" selector="captionLine">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="captionRow" style="unstyled">
<Context priority="0" selector="captionRow">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="captionText" style="unstyled">
<Context priority="0" selector="captionText">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="catalogSeqNumber" style="block">
<Context
comment='In the first catalogSeqNumber, construct the IPD list using IPD_ListWrapper for pagination.
NOTE: The table header for following pages is output from UFE IPD_TableHeader in the "Repeat title or continuation text" gentext setting
UPDATE: From EIPC, set the figureNumber and variant based on document structure'
priority="6"
selector="catalogSeqNumber[not(name(preceding-sibling::*[1])='catalogSeqNumber') and not(ancestor::_ufe:IPD_ListWrapper)]">
<BaseProperties propertySetReferences="Set_figureNumber">
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A84799999-d24c-4e7d-8646-aeb2cc953909"><_gte:Target lang="en"
><_ufe:IPD_ListWrapper><_ufe:IPD_TableHeader></_ufe:IPD_TableHeader
><_gte:Font Weight="medium"><_dtd:table frame="topbot"><_dtd:tgroup
cols="6"><?PubTbl tgroup clmarg="3.00pt" crmarg="2.00pt"?><_dtd:colspec
colname="col1" colwidth="0.52in"/><_dtd:colspec colname="col3"
colwidth="1.34in"/><_dtd:colspec colname="col4" colwidth="0.97in"
/><_dtd:colspec colname="col5" colwidth="100*"/><_dtd:colspec
colname="col6" colwidth="0.95in"/><_dtd:colspec colname="col7"
colwidth="0.52in"/><_dtd:tbody><_dtd:row valign="bottom"><_dtd:entry
colsep="0" align="center">FIG. ITEM</_dtd:entry><_dtd:entry colsep="0"
align="center">PART NUMBER</_dtd:entry><_dtd:entry colsep="0"
align="center">AIRLINE<_dtd:_newline/>STOCK NO.</_dtd:entry><_dtd:entry
colsep="0" align="left">1234567<_gte:Leaders leaderType="space"
lenType="specified" specLen="0.35in"/>NOMENCLATURE</_dtd:entry><_dtd:entry
colsep="0" align="left">EFFECT<_dtd:_newline/>(USE)<_dtd:_newline
/>CODE</_dtd:entry><_dtd:entry align="left">UNITS<_dtd:_newline/>PER<_dtd:_newline
/>ASSY</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Font><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup
cols="7"><?PubTbl tgroup
cbmarg="7.00pt" clmarg="2.00pt" crmarg="2.00pt" ctmarg="8.00pt"?><_dtd:colspec
colname="col1" colwidth="0.44in"/><_dtd:colspec colname="col2"
colwidth="0.40in"/><_dtd:colspec colname="col3" colwidth="1.33in"
/><_dtd:colspec colname="col4" colwidth="0.62in"/><_dtd:colspec
colname="col5" colwidth="2.69in"/><_dtd:colspec colname="col6"
colwidth="0.60in"/><_dtd:colspec colname="col7" colwidth="0.80in"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:Leaders
leaderType="space" lenType="specified" specLen="4.00pt"/><_gte:XPathString
expr="count((ancestor::pmEntry)[last()]/preceding-sibling::pmEntry)+1"
/><_ufe:IPD_FigureNumberVariant></_ufe:IPD_FigureNumberVariant></_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry colsep="0"></_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry colsep="0"></_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry></_dtd:entry></_dtd:row
></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow><_gte:ElementContent
include="elementAndContent"
xpath=". | following-sibling::catalogSeqNumber"/></_ufe:IPD_ListWrapper
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="Check for odd last page at the end of the generated table">
<Tests>
<XPathTest
expression="count(ancestor::pmEntry[1]/following-sibling::pmEntry)=0"/>
<XPathTest
expression="count(ancestor::dmContent/following-sibling::dmContent)=0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A73cac15d-e1e2-4c3d-94ef-726b5b806133"><_gte:Target lang="en"
><_ufe:IPD_ListWrapper><_ufe:IPD_TableHeader></_ufe:IPD_TableHeader
><_gte:Font Weight="medium"><_dtd:table frame="topbot"><_dtd:tgroup
cols="6"><?PubTbl tgroup clmarg="3.00pt" crmarg="2.00pt"?><_dtd:colspec
colname="col1" colwidth="0.52in"/><_dtd:colspec colname="col3"
colwidth="1.34in"/><_dtd:colspec colname="col4" colwidth="0.97in"
/><_dtd:colspec colname="col5" colwidth="100*"/><_dtd:colspec
colname="col6" colwidth="0.95in"/><_dtd:colspec colname="col7"
colwidth="0.52in"/><_dtd:tbody><_dtd:row valign="bottom"><_dtd:entry
colsep="0" align="center">FIG. ITEM</_dtd:entry><_dtd:entry colsep="0"
align="center">PART NUMBER</_dtd:entry><_dtd:entry colsep="0"
align="center">AIRLINE<_dtd:_newline/>STOCK NO.</_dtd:entry><_dtd:entry
colsep="0" align="left">1234567<_gte:Leaders leaderType="space"
lenType="specified" specLen="0.35in"/>NOMENCLATURE</_dtd:entry><_dtd:entry
colsep="0" align="left">EFFECT<_dtd:_newline/>(USE)<_dtd:_newline
/>CODE</_dtd:entry><_dtd:entry align="left">UNITS<_dtd:_newline/>PER<_dtd:_newline
/>ASSY</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Font><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup
cols="7"><?PubTbl tgroup
cbmarg="7.00pt" clmarg="2.00pt" crmarg="2.00pt" ctmarg="8.00pt"?><_dtd:colspec
colname="col1" colwidth="0.44in"/><_dtd:colspec colname="col2"
colwidth="0.40in"/><_dtd:colspec colname="col3" colwidth="1.33in"
/><_dtd:colspec colname="col4" colwidth="0.62in"/><_dtd:colspec
colname="col5" colwidth="2.69in"/><_dtd:colspec colname="col6"
colwidth="0.60in"/><_dtd:colspec colname="col7" colwidth="0.80in"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:Leaders
leaderType="space" lenType="specified" specLen="4.00pt"/><_gte:XPathString
expr="count((ancestor::pmEntry)[last()]/preceding-sibling::pmEntry)+1"
/><_ufe:IPD_FigureNumberVariant></_ufe:IPD_FigureNumberVariant></_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry colsep="0"></_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry colsep="0"></_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry></_dtd:entry></_dtd:row
></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow><_gte:ElementContent
include="elementAndContent"
xpath=". | following-sibling::catalogSeqNumber"/><_ufe:SaveLastPageNumber
></_ufe:SaveLastPageNumber></_ufe:IPD_ListWrapper></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment="For the last catalogSeqNumber within the IPD_ListWrapper (constructed in the first catalogSeqNumber),
add a skinny extra row after the last catalogSeqNumber to act as the bottom rule of the IPD table.
" priority="3"
selector="catalogSeqNumber[not(following-sibling::catalogSeqNumber) and (ancestor::_ufe:IPD_ListWrapper)]">
<BaseProperties>
<Breaks blockOrInline="block"/>
<Keep together="4"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad8fe385a-4459-41c4-a949-8dd8824a6830"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad827c7e8-81d4-430f-b0b1-7a4f0a7c09b4"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="bottom"><_dtd:tgroup cols="7"
><?PubTbl tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="0.00pt"?><_dtd:colspec colname="col1" colwidth="0.44in"/><_dtd:colspec
colname="col2" colwidth="0.44in"/><_dtd:colspec colname="col3"
colwidth="1.30in"/><_dtd:colspec colname="col4" colwidth="0.62in"
/><_dtd:colspec colname="col5" colwidth="2.69in"/><_dtd:colspec
colname="col6" colwidth="0.60in"/><_dtd:colspec colname="col7"
colwidth="0.83in"/><_dtd:tbody><_dtd:row><?PubTbl row rht="0.01in"?><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry
align="center"></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
<Context
comment="Show normally catalogSeqNumbers in the IPD_ListWrapper"
priority="1.5"
selector="catalogSeqNumber[ancestor::_ufe:IPD_ListWrapper]">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context
comment="Hide other catalogSeqNumbers in the main stream (they're all output from the first catalogSeqNumber)."
priority="0" selector="catalogSeqNumber">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A437aac54-6f15-47fc-ba96-3d3e612e7540"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="catalogSeqNumberRef" style="hidden">
<Context priority="0" selector="catalogSeqNumberRef">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="categoryOneContainerLocation" style="unstyled">
<Context priority="0" selector="categoryOneContainerLocation">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="caution" style="block">
<Context priority="0" selector="caution">
<BaseProperties>
<Indent leftIndent="@Standard_Indent"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="cautionIdent" style="unstyled">
<Context priority="0" selector="cautionIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="cautionRef" style="unstyled">
<Context priority="0" selector="cautionRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="cautionRepository" style="unstyled">
<Context priority="0" selector="cautionRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="cautionSpec" style="unstyled">
<Context priority="0" selector="cautionSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="changeAuthority" style="unstyled">
<Context priority="0" selector="changeAuthority">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="changeAuthorityData" style="hidden">
<Context priority="0" selector="changeAuthorityData">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="changeInline" style="unstyled">
<Context priority="0" selector="changeInline">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="choice" style="unstyled">
<Context priority="0" selector="choice">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreaker" style="unstyled">
<Context priority="0" selector="circuitBreaker">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerAlts" style="unstyled">
<Context priority="0" selector="circuitBreakerAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerClass" style="unstyled">
<Context priority="0" selector="circuitBreakerClass">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerDescr" style="unstyled">
<Context priority="0" selector="circuitBreakerDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerDescrGroup" style="unstyled">
<Context priority="0" selector="circuitBreakerDescrGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerDescrSubGroup" style="unstyled">
<Context priority="0" selector="circuitBreakerDescrSubGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerIdent" style="unstyled">
<Context priority="0" selector="circuitBreakerIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerLocation" style="unstyled">
<Context priority="0" selector="circuitBreakerLocation">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerRef" style="unstyled">
<Context priority="0" selector="circuitBreakerRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerRefGroup" style="unstyled">
<Context priority="0" selector="circuitBreakerRefGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerRepository" style="unstyled">
<Context priority="0" selector="circuitBreakerRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="circuitBreakerSpec" style="unstyled">
<Context priority="0" selector="circuitBreakerSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="city" style="unstyled">
<Context priority="0" selector="city">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="closeRqmts" style="block">
<Context priority="0" selector="closeRqmts">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A274ff2f5-f074-4e3d-ba3b-0eceb3887150"><_gte:Target lang="en"
><_ufe:CentredHeading>Close up procedures</_ufe:CentredHeading></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If there are no closing requirements, don't output the table.">
<Tests>
<XPathTest expression="reqCondGroup/noConds"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afae6d433-8145-439e-9861-baf275ec5c82"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="colspec" style="hidden">
<Context priority="0" selector="colspec">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="commonInfo" style="block">
<Context priority="0" selector="commonInfo">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="commonInfoDescrPara" style="block">
<Context priority="0" selector="commonInfoDescrPara">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="commonInfoDescrParaAlts" style="unstyled">
<Context priority="0" selector="commonInfoDescrParaAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="commonRepository" style="hidden">
<Context priority="0" selector="commonRepository">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="complianceCategory" style="unstyled">
<Context priority="0" selector="complianceCategory">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="contactIdentification" style="unstyled">
<Context priority="0" selector="contactIdentification">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="contactPerson" style="unstyled">
<Context priority="0" selector="contactPerson">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="contactPersonAddress" style="unstyled">
<Context priority="0" selector="contactPersonAddress">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="content" style="block">
<Context priority="0" selector="content">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="contextAndIsolationInfo" style="unstyled">
<Context priority="0" selector="contextAndIsolationInfo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dc:contributor" style="unstyled">
<Context priority="0" selector="dc:contributor">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="controlIndicatorDescr" style="unstyled">
<Context priority="0" selector="controlIndicatorDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="controlIndicatorFunction" style="unstyled">
<Context priority="0" selector="controlIndicatorFunction">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="controlIndicatorGroup" style="unstyled">
<Context priority="0" selector="controlIndicatorGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="controlIndicatorKey" style="unstyled">
<Context priority="0" selector="controlIndicatorKey">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="controlIndicatorName" style="unstyled">
<Context priority="0" selector="controlIndicatorName">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="controlIndicatorRef" style="unstyled">
<Context priority="0" selector="controlIndicatorRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="controlIndicatorRepository" style="unstyled">
<Context priority="0" selector="controlIndicatorRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="controlIndicatorSpec" style="unstyled">
<Context priority="0" selector="controlIndicatorSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="copyright" style="unstyled">
<Context priority="0" selector="copyright">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="copyrightPara" style="block">
<Context priority="0" selector="copyrightPara">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="correlatedFault" style="block">
<Context priority="0" selector="correlatedFault">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="correlatedFaultAlts" style="unstyled">
<Context priority="0" selector="correlatedFaultAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="country" style="unstyled">
<Context priority="0" selector="country">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dc:creator" style="unstyled">
<Context priority="0" selector="dc:creator">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="crossRefTable" style="hidden">
<Context priority="0" selector="crossRefTable">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="customerStockNumber" style="hidden">
<Context priority="0" selector="customerStockNumber">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="dataConds" style="unstyled">
<Context priority="0" selector="dataConds">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dataDestruction" style="unstyled">
<Context priority="0" selector="dataDestruction">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dataDisclosure" style="unstyled">
<Context priority="0" selector="dataDisclosure">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dataDistribution" style="unstyled">
<Context priority="0" selector="dataDistribution">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dataHandling" style="unstyled">
<Context priority="0" selector="dataHandling">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dataRestrictions" style="unstyled">
<Context priority="0" selector="dataRestrictions">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dc:date" style="unstyled">
<Context priority="0" selector="dc:date">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="definitionList" style="definitionList">
<DefinitionListDetails
definitionListDefinitionElement="listItemDefinition"
definitionListItemElement="definitionListItem"
definitionListTermElement="listItemTerm"/>
<Context priority="0" selector="definitionList">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="definitionListHeader" style="block">
<Context priority="0" selector="definitionListHeader">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Font weight="bold"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="definitionListItem" style="definitionListItem">
<Context priority="0" selector="definitionListItem">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="definitionTitle" style="unstyled">
<Context priority="0" selector="definitionTitle">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="department" style="unstyled">
<Context priority="0" selector="department">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="descr" style="block">
<Context priority="0" selector="descr">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrAccessDoorOrPanel" style="block">
<Context priority="0" selector="descrAccessDoorOrPanel">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrAccessory" style="block">
<Context priority="0" selector="descrAccessory">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrAccessoryPartNumber" style="block">
<Context priority="0" selector="descrAccessoryPartNumber">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrAltPartNumber" style="block">
<Context priority="0" selector="descrAltPartNumber">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrAmperage" style="block">
<Context priority="0" selector="descrAmperage">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrAssy" style="block">
<Context priority="0" selector="descrAssy">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrAttenuation" style="block">
<Context priority="0" selector="descrAttenuation">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrBlockGroupingValue" style="block">
<Context priority="0" selector="descrBlockGroupingValue">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrCircuitIdent" style="block">
<Context priority="0" selector="descrCircuitIdent">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrCoaxialCableFlag" style="block">
<Context priority="0" selector="descrCoaxialCableFlag">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrConduit" style="block">
<Context priority="0" selector="descrConduit">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrConnectionListClass" style="block">
<Context priority="0" selector="descrConnectionListClass">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrConnector" style="block">
<Context priority="0" selector="descrConnector">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrContact" style="block">
<Context priority="0" selector="descrContact">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A962629f9-acca-4d3c-8d9f-34196f716299"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrContactCount" style="block">
<Context priority="0" selector="descrContactCount">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrContactDiameter" style="block">
<Context priority="0" selector="descrContactDiameter">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrContactSize" style="block">
<Context priority="0" selector="descrContactSize">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrDistributionPart" style="block">
<Context priority="0" selector="descrDistributionPart">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrElectricalContact" style="block">
<Context priority="0" selector="descrElectricalContact">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrElectricalEquip" style="block">
<Context priority="0" selector="descrElectricalEquip">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrElectricalStateDescr" style="block">
<Context priority="0" selector="descrElectricalStateDescr">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrEmcCode" style="block">
<Context priority="0" selector="descrEmcCode">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrEquipDescrRef" style="block">
<Context priority="0" selector="descrEquipDescrRef">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrEquipName" style="block">
<Context priority="0" selector="descrEquipName">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrFeedThru" style="block">
<Context priority="0" selector="descrFeedThru">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Adfcd22d0-13f4-4def-b7a2-3486ac1e225e"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrFinishingInfo" style="block">
<Context priority="0" selector="descrFinishingInfo">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrForLocation" style="unstyled">
<Context priority="0" selector="descrForLocation">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="descrForPart" style="block">
<Context priority="0" selector="descrForPart">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrFrequency" style="block">
<Context priority="0" selector="descrFrequency">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrFunctionalDescrRef" style="block">
<Context priority="0" selector="descrFunctionalDescrRef">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrFunctionalItemRef" style="block">
<Context priority="0" selector="descrFunctionalItemRef">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5516b387-e2a7-4f05-9925-754f74a44076"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrGroupCode" style="block">
<Context priority="0" selector="descrGroupCode">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A68cd15dc-c47a-4801-85d3-5da697c3e061"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrHarness" style="block">
<Context priority="0" selector="descrHarness">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A2a426f2b-c109-42ca-a501-fefc14e7a34e"><_gte:Target lang="en"
><_ufe:TempHeading>Harness Description:</_ufe:TempHeading></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrHarnessEnvironment" style="block">
<Context priority="0" selector="descrHarnessEnvironment">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrHarnessIdent" style="block">
<Context priority="0" selector="descrHarnessIdent">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aea96a2a9-9bc0-4135-a6fd-d278db8114f1"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrHarnessName" style="block">
<Context priority="0" selector="descrHarnessName">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrHarnessVariantIdent" style="block">
<Context priority="0" selector="descrHarnessVariantIdent">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5554e6ae-7817-445d-8e65-47323d448792"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrHarnessVariantIssue" style="block">
<Context priority="0" selector="descrHarnessVariantIssue">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad3b883c3-f7b4-4040-a8c9-97892d3d040d"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrIdentSleeve" style="block">
<Context priority="0" selector="descrIdentSleeve">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrIllustrationRef" style="block">
<Context priority="0" selector="descrIllustrationRef">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrImpedance" style="block">
<Context priority="0" selector="descrImpedance">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrInstallationLocation" style="block">
<Context priority="0" selector="descrInstallationLocation">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrLength" style="block">
<Context priority="0" selector="descrLength">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ade3c0e0a-a34c-4ea6-8fa1-0d598ce5b55b"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrManufacturerCode" style="block">
<Context priority="0" selector="descrManufacturerCode">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrMass" style="block">
<Context priority="0" selector="descrMass">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrMaterial" style="block">
<Context priority="0" selector="descrMaterial">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrMaxDiameter" style="block">
<Context priority="0" selector="descrMaxDiameter">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrMaxHarnessSize" style="block">
<Context priority="0" selector="descrMaxHarnessSize">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrMaxMountingPositions" style="block">
<Context priority="0" selector="descrMaxMountingPositions">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrMaxTemperature" style="block">
<Context priority="0" selector="descrMaxTemperature">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrMinDiameter" style="block">
<Context priority="0" selector="descrMinDiameter">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrMinHarnessSize" style="block">
<Context priority="0" selector="descrMinHarnessSize">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrMinTemperature" style="block">
<Context priority="0" selector="descrMinTemperature">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrNetworkAnalysisCode" style="block">
<Context priority="0" selector="descrNetworkAnalysisCode">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrNextHigherAssy" style="block">
<Context priority="0" selector="descrNextHigherAssy">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aca5d5f30-1c30-4ad7-9fe2-5a290431aa1e"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrNumberOfCores" style="block">
<Context priority="0" selector="descrNumberOfCores">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrOrientation" style="block">
<Context priority="0" selector="descrOrientation">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrOuterDiameter" style="block">
<Context priority="0" selector="descrOuterDiameter">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrOuterJacketColor" style="block">
<Context priority="0" selector="descrOuterJacketColor">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrPartNumber" style="block">
<Context priority="0" selector="descrPartNumber">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8dab2ab8-0c95-4028-8a7c-e043bacd4942"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrPositionOnNextHigherAssy" style="block">
<Context priority="0" selector="descrPositionOnNextHigherAssy">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrPreparationInfo" style="block">
<Context priority="0" selector="descrPreparationInfo">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrRack" style="block">
<Context priority="0" selector="descrRack">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrReqQuantity" style="block">
<Context priority="0" selector="descrReqQuantity">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrResistance" style="block">
<Context priority="0" selector="descrResistance">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrResponsiblePartnerCompany" style="block">
<Context priority="0" selector="descrResponsiblePartnerCompany">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6d352386-e4cd-4d21-b350-24c31339562b"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrRestriction" style="block">
<Context priority="0" selector="descrRestriction">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrRouting" style="block">
<Context priority="0" selector="descrRouting">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrScreen" style="block">
<Context priority="0" selector="descrScreen">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A90b78c8c-2633-4746-94fc-9ea9253ff452"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrScreenCount" style="block">
<Context priority="0" selector="descrScreenCount">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrSectionIdent" style="block">
<Context priority="0" selector="descrSectionIdent">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrShrinkSleeve" style="block">
<Context priority="0" selector="descrShrinkSleeve">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrShuntGroupingValue" style="block">
<Context priority="0" selector="descrShuntGroupingValue">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrSiblingPlugIdent" style="block">
<Context priority="0" selector="descrSiblingPlugIdent">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrSignalInfo" style="block">
<Context priority="0" selector="descrSignalInfo">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrSize" style="block">
<Context priority="0" selector="descrSize">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrSleeve" style="block">
<Context priority="0" selector="descrSleeve">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrSolderSleeve" style="block">
<Context priority="0" selector="descrSolderSleeve">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrSpecialTerminal" style="block">
<Context priority="0" selector="descrSpecialTerminal">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrStandardPartGroup" style="block">
<Context priority="0" selector="descrStandardPartGroup">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrSurfaceProtection" style="block">
<Context priority="0" selector="descrSurfaceProtection">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrSystemBreakdownCode" style="block">
<Context priority="0" selector="descrSystemBreakdownCode">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrTerminationModuleGroupingValue" style="block">
<Context priority="0" selector="descrTerminationModuleGroupingValue">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrThermoCoupleMinus" style="block">
<Context priority="0" selector="descrThermoCoupleMinus">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrThermoCouplePlus" style="block">
<Context priority="0" selector="descrThermoCouplePlus">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrTransverseLink" style="block">
<Context priority="0" selector="descrTransverseLink">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrTriaxialCableFlag" style="block">
<Context priority="0" selector="descrTriaxialCableFlag">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrTwist" style="block">
<Context priority="0" selector="descrTwist">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A173e8802-e561-4775-a976-1f9e19f4fbc8"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrVoltage" style="block">
<Context priority="0" selector="descrVoltage">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrWallThickness" style="block">
<Context priority="0" selector="descrWallThickness">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrWire" style="block">
<Context priority="0" selector="descrWire">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A70b017b2-db60-48c3-b308-85cbfb47a001"><_gte:Target lang="en"
><_ufe:TempHeading>Wire Description:</_ufe:TempHeading></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrWireColor" style="block">
<Context priority="0" selector="descrWireColor">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2a41927d-d938-4fd2-92f3-b2857798560b"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrWireConnectionCode" style="block">
<Context priority="0" selector="descrWireConnectionCode">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrWireGauge" style="block">
<Context priority="0" selector="descrWireGauge">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A131a45d9-8701-4417-9d1d-f7a4cde1562f"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrWireInfoCircuitIdent" style="block">
<Context priority="0" selector="descrWireInfoCircuitIdent">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5edcc26f-0353-4132-89e3-aaf976ca433b"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrWireInfoSectionIdent" style="block">
<Context priority="0" selector="descrWireInfoSectionIdent">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A591ed6c6-86e0-4dc5-9b08-ff8579f83329"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrWireMaterial" style="block">
<Context priority="0" selector="descrWireMaterial">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrWireNumber" style="block">
<Context priority="0" selector="descrWireNumber">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1adf50c3-53ce-4f54-967c-c3fc4e18b770"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrWireRoute" style="block">
<Context priority="0" selector="descrWireRoute">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="descrWireSeqNumber" style="block">
<Context priority="0" selector="descrWireSeqNumber">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1b204c32-e906-4c75-a8da-391c53479403"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="descrWireType" style="block">
<Context priority="0" selector="descrWireType">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6b215631-6a0f-402a-ada3-41a18bc2c03f"><_gte:Target lang="en"
><_ufe:FieldDescription></_ufe:FieldDescription></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="description" style="block">
<Context priority="0" selector="description">
<BaseProperties>
<SpaceBefore minimum="0pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="For Transmittal Information, output the Table of Highlights after. Was doing it at the pmEntry level, but it was causing the table to keep with the previous paragraph for some reason.">
<Tests>
<XPathTest expression="ancestor::pmEntry[@pmEntryType='pmt52']"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9d2ac2f6-4865-46c3-9877-10c533a95463"><_gte:Target lang="en"
><_ufe:TableOfHighlights></_ufe:TableOfHighlights></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="detailedFaultDescr" style="unstyled">
<Context priority="0" selector="detailedFaultDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="detectedFault" style="block">
<Context priority="0" selector="detectedFault">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="detectedFaultAlts" style="unstyled">
<Context priority="0" selector="detectedFaultAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="detectedLruItem" style="block">
<Context priority="0" selector="detectedLruItem">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="detectedSruItem" style="unstyled">
<Context priority="0" selector="detectedSruItem">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="detectionInfo" style="block">
<Context priority="0" selector="detectionInfo">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="diagnosticProcess" style="unstyled">
<Context priority="0" selector="diagnosticProcess">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="diagnosticsReason" style="unstyled">
<Context priority="0" selector="diagnosticsReason">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="displayText" style="block">
<Context priority="10"
selector="_ufe:FooterApplicabilityStyle//displayText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="0" selector="displayText">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="dmAddress" style="unstyled">
<Context priority="0" selector="dmAddress">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dmAddressItems" style="unstyled">
<Context priority="0" selector="dmAddressItems">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dmCode" style="hidden">
<Context priority="0" selector="dmCode">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="dmContent" style="block">
<Context priority="10" selector="_ufe:ReasonForUpdate//dmContent">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="4" selector="dmContent[1]">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="dmContent">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="dmIdent" style="unstyled">
<Context priority="0" selector="dmIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dmRef" style="link">
<LinkDetails idrefAttrname="applicRefId"/>
<Context priority="45" selector="catalogSeqNumber//dmRef">
<BaseProperties propertySetReferences="Link">
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="40" selector="content/refs/dmRef">
<BaseProperties>
<Highlight textUnderlineStyle="none"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A31a1f555-2a1c-46ac-bd75-900768e10a6e"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="none"><_dtd:tgroup
cols="2"><_dtd:colspec colname="col1"/><_dtd:colspec colname="col2"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:AttributeContent
attr="modelIdentCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="systemDiffCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="systemCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="subSystemCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="subSubSystemCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="assyCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="disassyCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="disassyCodeVariant" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="infoCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="infoCodeVariant" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="itemLocationCode" xpath="dmRefIdent/dmCode"/></_dtd:entry><_dtd:entry
><_gte:ElementContent include="contentOnly"
xpath="id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName"
/> — <_gte:ElementContent include="contentOnly"
xpath="id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/infoName"
/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="count(id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName)=0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A26fd42cd-dca6-4600-997d-54b039831acb"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="none"><_dtd:tgroup
cols="2"><_dtd:colspec colname="col1"/><_dtd:colspec colname="col2"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:AttributeContent
attr="modelIdentCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="systemDiffCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="systemCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="subSystemCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="subSubSystemCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="assyCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="disassyCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="disassyCodeVariant" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="infoCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="infoCodeVariant" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="itemLocationCode" xpath="dmRefIdent/dmCode"/></_dtd:entry><_dtd:entry
><_gte:Font FontColor="red">dmRef ERROR</_gte:Font></_dtd:entry></_dtd:row
></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:RequirementsTableRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest expression="count(following-sibling::*)=0"/></Tests>
<BaseProperties>
<Highlight textUnderlineStyle="none"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A095f587e-4a17-4ebc-ada6-fa1af73d21eb"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="bottom"><_dtd:tgroup
cols="2"><_dtd:colspec colname="col1"/><_dtd:colspec colname="col2"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:AttributeContent
attr="modelIdentCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="systemDiffCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="systemCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="subSystemCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="subSubSystemCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="assyCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="disassyCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="disassyCodeVariant" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="infoCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="infoCodeVariant" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="itemLocationCode" xpath="dmRefIdent/dmCode"/></_dtd:entry><_dtd:entry
><_gte:ElementContent include="contentOnly"
xpath="id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName"
/> — <_gte:ElementContent include="contentOnly"
xpath="id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/infoName"
/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="count(id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName)=0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A0e3d3bfd-3fda-49b8-9482-4cfb8ea06469"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="bottom"><_dtd:tgroup
cols="2"><_dtd:colspec colname="col1"/><_dtd:colspec colname="col2"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:AttributeContent
attr="modelIdentCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="systemDiffCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="systemCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="subSystemCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="subSubSystemCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="assyCode" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="disassyCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="disassyCodeVariant" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="infoCode" xpath="dmRefIdent/dmCode"/><_gte:AttributeContent
attr="infoCodeVariant" xpath="dmRefIdent/dmCode"/>-<_gte:AttributeContent
attr="itemLocationCode" xpath="dmRefIdent/dmCode"/></_dtd:entry><_dtd:entry
><_gte:Font FontColor="red">dmRef ERROR</_gte:Font></_dtd:entry></_dtd:row
></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:RequirementsTableRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M090" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: content/refs/dmRef

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

// SOURCE EDIT to construct the module ID to link to, which will be the same as
// the data module's "code" (constructed from various attributes in the dmCode).

			var modelIdentCode = formatting.evaluateXPath("dmRefIdent/dmCode/@modelIdentCode"); // "S1000DBIKE"
			var systemDiffCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemDiffCode"); // "AAA"
			var systemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemCode");
			var subSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSystemCode");
			var subSubSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSubSystemCode");
			var disassyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCode");
			var assyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@assyCode");
			var disassyCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCodeVariant");
			var infoCode = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCode");
			var infoCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCodeVariant");
			var itemLocationCode = formatting.evaluateXPath("dmRefIdent/dmCode/@itemLocationCode");

			// A full module code currently looks like this:
			// S1000DBIKE-AAA-A0-10-20-00AA-362B-A

			var moduleId = modelIdentCode + "-" + systemDiffCode + "-" + systemCode
				+ "-" + subSystemCode + subSubSystemCode + "-" + assyCode + "-" + disassyCode + disassyCodeVariant + "-"
				+ infoCode + infoCodeVariant + "-" + itemLocationCode;

currentNode.setAttribute("refId", moduleId); //"R123");


template.content.functions._app.LineStyle( style.underlineRule, 'none' );
contextProp.isBlock =  isBlock = 0;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:dmRef:dmRef_in_refs_in_content:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:dmRef:dmRef_in_refs_in_content:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A31a1f555-2a1c-46ac-bd75-900768e10a6e\"><_gte:Target lang=\"en\"><_ufe:RequirementsTableRow><table frame=\"none\"><tgroup cols=\"2\"><colspec colname=\"col1\"/>" );
      stream.write( "<colspec colname=\"col2\"/><tbody><row><entry colsep=\"0\"><_gte:AttributeContent attr=\"modelIdentCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"systemDiffCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"systemCode\" xpath=\"dmRefIdent/dmCode\"/>" );
      stream.write( "-<_gte:AttributeContent attr=\"subSystemCode\" xpath=\"dmRefIdent/dmCode\"/><_gte:AttributeContent attr=\"subSubSystemCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"assyCode\" xpath=\"dmRefIdent/dmCode\"/>" );
      stream.write( "-<_gte:AttributeContent attr=\"disassyCode\" xpath=\"dmRefIdent/dmCode\"/><_gte:AttributeContent attr=\"disassyCodeVariant\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"infoCode\" xpath=\"dmRefIdent/dmCode\"/>" );
      stream.write( "<_gte:AttributeContent attr=\"infoCodeVariant\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"itemLocationCode\" xpath=\"dmRefIdent/dmCode\"/></entry><entry><_gte:ElementContent include=\"contentOnly\" xpath=\"id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName\"/>" );
      stream.write( " — <_gte:ElementContent include=\"contentOnly\" xpath=\"id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/infoName\"/></entry></row></tbody></tgroup></table></_ufe:RequirementsTableRow></_gte:Target>" );
      stream.write( "</_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( count(id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName)=0 )", 130, template.primaryStream, null ) != 0 )
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:dmRef:dmRef_in_refs_in_content:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:dmRef:dmRef_in_refs_in_content:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A26fd42cd-dca6-4600-997d-54b039831acb\"><_gte:Target lang=\"en\"><_ufe:RequirementsTableRow><table frame=\"none\"><tgroup cols=\"2\"><colspec colname=\"col1\"/>" );
         stream.write( "<colspec colname=\"col2\"/><tbody><row><entry colsep=\"0\"><_gte:AttributeContent attr=\"modelIdentCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"systemDiffCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"systemCode\" xpath=\"dmRefIdent/dmCode\"/>" );
         stream.write( "-<_gte:AttributeContent attr=\"subSystemCode\" xpath=\"dmRefIdent/dmCode\"/><_gte:AttributeContent attr=\"subSubSystemCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"assyCode\" xpath=\"dmRefIdent/dmCode\"/>" );
         stream.write( "-<_gte:AttributeContent attr=\"disassyCode\" xpath=\"dmRefIdent/dmCode\"/><_gte:AttributeContent attr=\"disassyCodeVariant\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"infoCode\" xpath=\"dmRefIdent/dmCode\"/>" );
         stream.write( "<_gte:AttributeContent attr=\"infoCodeVariant\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"itemLocationCode\" xpath=\"dmRefIdent/dmCode\"/></entry><entry><_gte:Font FontColor=\"red\">dmRef ERROR</_gte:Font>" );
         stream.write( "</entry></row></tbody></tgroup></table></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
   }
}

if ( formatting.evaluateXPath( " boolean( count(following-sibling::*)=0 )", 130, template.primaryStream, null ) != 0 )
{
   template.content.functions._app.LineStyle( style.underlineRule, 'none' );
   if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:dmRef:dmRef_in_refs_in_content:addBefore_Test2');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:dmRef:dmRef_in_refs_in_content:addBefore_Test2', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A095f587e-4a17-4ebc-ada6-fa1af73d21eb\"><_gte:Target lang=\"en\"><_ufe:RequirementsTableRow><table frame=\"bottom\"><tgroup cols=\"2\"><colspec colname=\"col1\"/>" );
         stream.write( "<colspec colname=\"col2\"/><tbody><row><entry colsep=\"0\"><_gte:AttributeContent attr=\"modelIdentCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"systemDiffCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"systemCode\" xpath=\"dmRefIdent/dmCode\"/>" );
         stream.write( "-<_gte:AttributeContent attr=\"subSystemCode\" xpath=\"dmRefIdent/dmCode\"/><_gte:AttributeContent attr=\"subSubSystemCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"assyCode\" xpath=\"dmRefIdent/dmCode\"/>" );
         stream.write( "-<_gte:AttributeContent attr=\"disassyCode\" xpath=\"dmRefIdent/dmCode\"/><_gte:AttributeContent attr=\"disassyCodeVariant\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"infoCode\" xpath=\"dmRefIdent/dmCode\"/>" );
         stream.write( "<_gte:AttributeContent attr=\"infoCodeVariant\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"itemLocationCode\" xpath=\"dmRefIdent/dmCode\"/></entry><entry><_gte:ElementContent include=\"contentOnly\" xpath=\"id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName\"/>" );
         stream.write( " — <_gte:ElementContent include=\"contentOnly\" xpath=\"id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/infoName\"/></entry></row></tbody></tgroup></table></_ufe:RequirementsTableRow></_gte:Target>" );
         stream.write( "</_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
   }

   if ( formatting.evaluateXPath( " boolean( count(id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/techName)=0 )", 130, template.primaryStream, null ) != 0 )
   {
      if ( currentNode.getUserString( '_temp_hasBefore_Test3' ) != '1' )
      {
         var stream = template.content.getStream('stylesheet0:Element:dmRef:dmRef_in_refs_in_content:addBefore_Test3');
         if ( stream == null )
         {
            var primaryStream = template.content.getStream( template.primaryStream );
            stream = template.content.createStream( 'stylesheet0:Element:dmRef:dmRef_in_refs_in_content:addBefore_Test3', primaryStream.type );
            stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
            stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A0e3d3bfd-3fda-49b8-9482-4cfb8ea06469\"><_gte:Target lang=\"en\"><_ufe:RequirementsTableRow><table frame=\"bottom\"><tgroup cols=\"2\"><colspec colname=\"col1\"/>" );
            stream.write( "<colspec colname=\"col2\"/><tbody><row><entry colsep=\"0\"><_gte:AttributeContent attr=\"modelIdentCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"systemDiffCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"systemCode\" xpath=\"dmRefIdent/dmCode\"/>" );
            stream.write( "-<_gte:AttributeContent attr=\"subSystemCode\" xpath=\"dmRefIdent/dmCode\"/><_gte:AttributeContent attr=\"subSubSystemCode\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"assyCode\" xpath=\"dmRefIdent/dmCode\"/>" );
            stream.write( "-<_gte:AttributeContent attr=\"disassyCode\" xpath=\"dmRefIdent/dmCode\"/><_gte:AttributeContent attr=\"disassyCodeVariant\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"infoCode\" xpath=\"dmRefIdent/dmCode\"/>" );
            stream.write( "<_gte:AttributeContent attr=\"infoCodeVariant\" xpath=\"dmRefIdent/dmCode\"/>-<_gte:AttributeContent attr=\"itemLocationCode\" xpath=\"dmRefIdent/dmCode\"/></entry><entry><_gte:Font FontColor=\"red\">dmRef ERROR</_gte:Font>" );
            stream.write( "</entry></row></tbody></tgroup></table></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
         }
         currentNode.augmentBefore( stream.xmlDocument );
         currentNode.setUserString( '_temp_hasBefore_Test3', '1' );
         var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
         if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
      }
      if ( currentNode.getUserString( '_temp_hasAfter_Test3' ) != '1' )
      {
         currentNode.augmentAfter( null );
         currentNode.setUserString( '_temp_hasAfter_Test3', '1' );
      }
   }
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

formatting.formatStream( template.content.streams._app.Link, { idAttr:"applicRefId", linkColor:"none" });
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: content/refs/dmRef

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();

if ( !isHidden ) formatting.formatStream( template.content.streams._app['/Link'] );

if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context comment="Hide the dmRef it it's in pmEntry." priority="20"
selector="pmEntry/dmRef">
<BaseProperties>
<Hidden hidden="yes"/>
<Font family="Times New Roman"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context comment='Hide dmRef in partRef (in the "Spares" table).'
priority="17.5" selector="partRef/refs/dmRef">
<BaseProperties propertySetReferences="Link">
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="15" selector="reqCondDm/dmRef">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="13.875"
selector="dmRef[@referredFragment and @authorityName]">
<BaseProperties propertySetReferences="Set_referredFragment_ID">
<Highlight textUnderlineStyle="none"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6c27b87f-2396-4b1c-ae65-1f0df57405c1"><_gte:Target lang="en"
><xlink:locator xlink:href="s000A" xlink:label="TEXT"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: dmRef[@referredFragment and @authorityName]

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = {};
block.defaultParagraph = {};
var style = block.defaultStyle = new fStyle();
contextProp.isHidden = 0;
contextProp.pdfTag = 'Link';
contextProp.pdfAttrs = {};
fish[ 'gentextResolved' ] = 1; // Signal to property sets not to overwrite context gentext

// Base properties
//template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_dmRef_refId' ].onEnter( block, contextProp );

// Fix the referredFragmentId to add module prefix (which is added to the destination ID during the pre-processing XSL)
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_referredFragment_ID' ].onEnter( block, contextProp );

template.content.functions._app.LineStyle( style.underlineRule, 'none' );

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {

   // SOURCE EDIT: Make a new stream for each link and use the authorityName attribute for its text
   var streamName = 'stylesheet0:Element:dmRef:dmRefreferredFragment_and_authorityNameC546:addBefore' + template.referredFragmentCtr++ + ':addBefore';

   var stream = template.content.getStream(streamName);
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( streamName, primaryStream.type );

    var text = formatting.evaluateXPath("@authorityName");
    var href = formatting.evaluateXPath("@referredFragment");

    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A6c27b87f-2396-4b1c-ae65-1f0df57405c1\"><_gte:Target lang=\"en\"><xlink:locator xlink:href=\"" + href + "\" xlink:label=\"" + text + "\"/></_gte:Target></_gte:Translate>" );
    stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
if ( contextProp.isHidden == 1 ) {
  currentNode.augmentReference( '_app:hidden', 1 );
}

template.content.functions._app.inlineStart( style );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 0 );
formatting.formatStream( template.content.streams._app.Link, { idAttr:"applicRefId", linkColor:"none" });
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: dmRef[@referredFragment and @authorityName]

formatting.formatStream( template.content.streams._app[ '/Link' ] );
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_dmRef_refId' ].onExit();
template.content.functions._app.endPdfTag();
template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="6.005" selector="dmRef[@authorityName]">
<BaseProperties propertySetReferences="Set_dmRef_refId">
<Highlight textUnderlineStyle="none"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aed2f2ea4-61b0-4d27-a154-114a5b400838"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly"
xpath="id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/infoName"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: dmRef[@authorityName]

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

template.content.functions._app.LineStyle( style.underlineRule, 'none' );
contextProp.isBlock =  isBlock = 0;

// SOURCE EDIT to construct the module ID to link to, which will be the same as
// the data module's "code" (constructed from various attributes in the dmCode).

			var modelIdentCode = formatting.evaluateXPath("dmRefIdent/dmCode/@modelIdentCode"); // "S1000DBIKE"
			var systemDiffCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemDiffCode"); // "AAA"
			var systemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemCode");
			var subSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSystemCode");
			var subSubSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSubSystemCode");
			var disassyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCode");
			var assyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@assyCode");
			var disassyCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCodeVariant");
			var infoCode = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCode");
			var infoCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCodeVariant");
			var itemLocationCode = formatting.evaluateXPath("dmRefIdent/dmCode/@itemLocationCode");

			// A full module code currently looks like this:
			// S1000DBIKE-AAA-A0-10-20-00AA-362B-A

			var moduleId = modelIdentCode + "-" + systemDiffCode + "-" + systemCode
				+ "-" + subSystemCode + subSubSystemCode + "-" + assyCode + "-" + disassyCode + disassyCodeVariant + "-"
				+ infoCode + infoCodeVariant + "-" + itemLocationCode;

currentNode.setAttribute("refId", moduleId); //"R123");


if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:dmRef:dmRefauthorityName:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:dmRef:dmRefauthorityName:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A752b7824-9e47-4f46-a582-d5448e64c73e\"><_gte:Target lang=\"en\">" );
      stream.write( "<_gte:AttributeContent attr=\"authorityName\" occur=\"1\" scope=\"dmRef\"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

// RS: SOURCE EDIT: Update the link ID to use refId (set by property set "Set dmRef refId")
//formatting.formatStream( template.content.streams._app.Link, { idAttr:"applicRefId", linkColor:"none" });
formatting.formatStream( template.content.streams._app.Link, { idAttr:"refId", linkColor:"none" });
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: dmRef

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();

if ( !isHidden ) formatting.formatStream( template.content.streams._app['/Link'] );
template.content.functions[ template.stylerNamespace ].PropertySet['Set_dmRef_refId'].onExit();

if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="6" selector="dmRef[@referredFragment]">
<BaseProperties propertySetReferences="Set_referredFragment_ID">
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa11ba9f8-81cb-401f-89f2-445cbe0dd67e"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="referredFragment"
xrefStyle="Label_Number"/></_sfe:CrossReference></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="dmRef">
<BaseProperties propertySetReferences="Set_dmRef_refId">
<Highlight textUnderlineStyle="none"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A752b7824-9e47-4f46-a582-d5448e64c73e"><_gte:Target lang="en"
><_gte:ElementContent include="contentOnly"
xpath="id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/infoName"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: dmRef

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

template.content.functions._app.LineStyle( style.underlineRule, 'none' );
contextProp.isBlock =  isBlock = 0;

// SOURCE EDIT to construct the module ID to link to, which will be the same as
// the data module's "code" (constructed from various attributes in the dmCode).

			var modelIdentCode = formatting.evaluateXPath("dmRefIdent/dmCode/@modelIdentCode"); // "S1000DBIKE"
			var systemDiffCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemDiffCode"); // "AAA"
			var systemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@systemCode");
			var subSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSystemCode");
			var subSubSystemCode = formatting.evaluateXPath("dmRefIdent/dmCode/@subSubSystemCode");
			var disassyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCode");
			var assyCode = formatting.evaluateXPath("dmRefIdent/dmCode/@assyCode");
			var disassyCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@disassyCodeVariant");
			var infoCode = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCode");
			var infoCodeVariant = formatting.evaluateXPath("dmRefIdent/dmCode/@infoCodeVariant");
			var itemLocationCode = formatting.evaluateXPath("dmRefIdent/dmCode/@itemLocationCode");

			// A full module code currently looks like this:
			// S1000DBIKE-AAA-A0-10-20-00AA-362B-A

			var moduleId = modelIdentCode + "-" + systemDiffCode + "-" + systemCode
				+ "-" + subSystemCode + subSubSystemCode + "-" + assyCode + "-" + disassyCode + disassyCodeVariant + "-"
				+ infoCode + infoCodeVariant + "-" + itemLocationCode;

currentNode.setAttribute("refId", moduleId); //"R123");


if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:dmRef:dmRef_everywhere_else:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:dmRef:dmRef_everywhere_else:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A752b7824-9e47-4f46-a582-d5448e64c73e\"><_gte:Target lang=\"en\">" );
      stream.write( "<_gte:ElementContent xpath=\"id(@refId)/identAndStatusSection/dmAddress/dmAddressItems/dmTitle/infoName\" include=\"contentOnly\"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

// RS: SOURCE EDIT: Update the link ID to use refId (set by property set "Set dmRef refId")
//formatting.formatStream( template.content.streams._app.Link, { idAttr:"applicRefId", linkColor:"none" });
formatting.formatStream( template.content.streams._app.Link, { idAttr:"refId", linkColor:"none" });
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: dmRef

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();

if ( !isHidden ) formatting.formatStream( template.content.streams._app['/Link'] );
template.content.functions[ template.stylerNamespace ].PropertySet['Set_dmRef_refId'].onExit();

if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="dmRefAddressItems" style="hidden">
<Context priority="0" selector="dmRefAddressItems">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="dmRefIdent" style="hidden">
<Context priority="0" selector="dmRefIdent">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="dmStatus" style="unstyled">
<Context priority="0" selector="dmStatus">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dmTitle" style="block">
<Context priority="0" selector="dmTitle">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="dmodule" style="block">
<Context
comment="Now IPD figures start new pages themselves, so we don't need a new page here."
priority="6" selector="dmodule[content/illustratedPartsCatalog]">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A838fa4e6-de2f-40bd-bbf7-668c3491fa8b"><_gte:Target lang="en"
><_ufe:TopDataModuleCode></_ufe:TopDataModuleCode></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If this is the first of the dmodules in the IPD that has an illustratedPartsCatalog, output the Part Numerical Index first.
Also don't need to start a new page.
[Why is the UFE &#x22;DataModuleTitle&#x22; added here as well?]">
<Tests>
<XPathTest
expression="count(parent::dmContent/preceding::dmContent/dmodule/content/illustratedPartsCatalog)=0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A57107f19-c982-4186-bb59-320ad697aed6"><_gte:Target lang="en"
><_ufe:TopDataModuleCode></_ufe:TopDataModuleCode><_ufe:IPD_NumericalIndex
></_ufe:IPD_NumericalIndex></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Add441e4b-cd46-4eb1-970c-074cab3f2ede"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment='Add UFEs before and after to check if change bars should be applied to the whole DM (as it is done in the "S1000D" stylesheet).
Added data module codes at beginning and end, which are only output when print-variant is &#x27;dmc&#x27; (the added UFEs check first).'
priority="0" selector="dmodule">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4341bfb7-9bb8-4e42-a16f-42bcd70888cd"><_gte:Target lang="en"
><_ufe:CheckDMChangeBarBegin></_ufe:CheckDMChangeBarBegin><_ufe:TopDataModuleCode
></_ufe:TopDataModuleCode></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0644ef79-1e2c-48c6-8890-52b12e5ab912"><_gte:Target lang="en"
><_ufe:EndOfDataModule></_ufe:EndOfDataModule><_ufe:CheckDMChangeBarEnd
></_ufe:CheckDMChangeBarEnd></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="RS: This seems to be true for front-matter DMs. It hides the text, but then outputs it as text before.
I'm not so clear on why it is doing it this way. Something left over from another stylesheet maybe?
Disable this condition for now.
UPDATE: The only difference I can see is that the front matter tables were exempted from having the
default style (only rules in the header and at the bottom) since they were gentext.
">
<Tests>
<XPathTest expression="count(ancestor::pmEntry)=1"/>
<XPathTest expression="name(..)='dmContent'"/>
<XPathTest expression="@false"/></Tests>
<BaseProperties>
<Hidden hidden="yes"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7e5ee28b-ea1f-4148-bed6-06b5f7c8adbf"><_gte:Target lang="en"
><_ufe:CheckDMChangeBarBegin></_ufe:CheckDMChangeBarBegin><_ufe:TopDataModuleCode
></_ufe:TopDataModuleCode><_gte:ElementContent include="contentOnly"
occur="1" scope="dmodule"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac1b3a4c1-5e74-4852-ba93-f26736f5f10d"><_gte:Target lang="en"
><_ufe:CheckDMChangeBarEnd></_ufe:CheckDMChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="effectivity" style="unstyled">
<Context priority="0" selector="effectivity">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="email" style="unstyled">
<Context priority="0" selector="email">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="embeddedSpareDescr" style="unstyled">
<Context priority="0" selector="embeddedSpareDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="embeddedSupplyDescr" style="unstyled">
<Context priority="0" selector="embeddedSupplyDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="embeddedSupportEquipDescr" style="unstyled">
<Context priority="0" selector="embeddedSupportEquipDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="emphasis" style="inline">
<Context priority="0" selector="emphasis">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests>
<XPathTest expression="not(@emphasisType)"/></Tests>
<BaseProperties>
<Font weight="bold"/></BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="emphasisType" testType="equals"
testValue="em01"/></Tests>
<BaseProperties>
<Font weight="bold"/></BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="emphasisType" testType="equals"
testValue="em02"/></Tests>
<BaseProperties>
<Font italic="yes"/></BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="emphasisType" testType="equals"
testValue="em03"/></Tests>
<BaseProperties>
<Highlight textUnderlineStyle="underline"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="enterpriseGroup" style="unstyled">
<Context priority="0" selector="enterpriseGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="enterpriseIdent" style="unstyled">
<Context priority="0" selector="enterpriseIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="enterpriseIdentAlt" style="unstyled">
<Context priority="0" selector="enterpriseIdentAlt">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="enterpriseInfo" style="unstyled">
<Context priority="0" selector="enterpriseInfo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="enterpriseName" style="unstyled">
<Context priority="0" selector="enterpriseName">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="enterpriseRef" style="unstyled">
<Context priority="0" selector="enterpriseRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="enterpriseRepository" style="unstyled">
<Context priority="0" selector="enterpriseRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="enterpriseSpec" style="unstyled">
<Context priority="0" selector="enterpriseSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="entry" style="table">
<Context priority="20" selector="_ufe:FrontCoverPage//thead//entry">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="10" selector="thead//entry">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M070" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: thead//entry

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = {};
var paragraph = block.defaultParagraph = new fParagraph();
var style = block.defaultStyle = new fStyle();
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
if ( contextProp.startNew == '2' )
{
   formatting.pageSequenceBreak( contextProp.pageType );
}

var cell = formatting.currentTableCell;
if ( cell )
{
   for( var prop in block )
   {
      if (block.hasOwnProperty(prop))
      {
         switch( prop )
         {
            case 'defaultParagraph':
            case 'defaultStyle':
            case 'horizontalAlign':
               break;

            default:
               cell[prop] = block[prop];
               break;
         }
      }
   }
}
paragraph.preserveProperties = 2;
formatting.paragraphStart( paragraph, style );

// *******************
// RS: Customization to add cell bottom rule for table header cells
// UPDATE: Only for last header row

var lastHeaderRow = formatting.evaluateXPath("count(ancestor::row/following-sibling::row)=0");

if (lastHeaderRow == "1") {
  var rule = new fRule();
  rule.thickness = new fLength("1pt");
  cell.rules.rules[3] = rule;
  template.content.functions._app.Tables.set_sep(1, cell.rules, 1); //(1, formatting.currentTableCell.rules, 1 ); 
}
// *******************

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: thead//entry

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;

if ( !isHidden )
{
}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="0" selector="entry">
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="0pt" rightIndent="0pt"/>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="entrytbl" style="table">
<Context priority="0" selector="entrytbl">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="estimatedTime" style="unstyled">
<Context priority="0" selector="estimatedTime">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="evaluate" style="hidden">
<Context priority="0" selector="evaluate">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="excludedModification" style="unstyled">
<Context priority="0" selector="excludedModification">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="exportControl" style="unstyled">
<Context priority="0" selector="exportControl">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="exportRegistrationCode" style="unstyled">
<Context priority="0" selector="exportRegistrationCode">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="exportRegistrationStmt" style="unstyled">
<Context priority="0" selector="exportRegistrationStmt">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="expression" style="unstyled">
<Context priority="0" selector="expression">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="externalPubCode" style="inline">
<Context priority="0" selector="externalPubCode">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="externalPubIssue" style="inline">
<Context priority="0" selector="externalPubIssue">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="externalPubIssueDate" style="unstyled">
<Context priority="0" selector="externalPubIssueDate">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="externalPubIssueInfo" style="inline">
<Context priority="0" selector="externalPubIssueInfo">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="externalPubRef" style="inline">
<Context priority="0" selector="externalPubRef">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="externalPubRefAddressItems" style="unstyled">
<Context priority="0" selector="externalPubRefAddressItems">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="externalPubRefIdent" style="inline">
<Context priority="0" selector="externalPubRefIdent">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="externalPubTitle" style="inline">
<Context priority="0" selector="externalPubTitle">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5f12120c-3482-40e5-a519-4498b8996d9f"><_gte:Target lang="en"
> </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="falseValue" style="unstyled">
<Context priority="0" selector="falseValue">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="fastener" style="unstyled">
<Context priority="0" selector="fastener">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="fastenerQuantity" style="unstyled">
<Context priority="0" selector="fastenerQuantity">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="fastenerType" style="unstyled">
<Context priority="0" selector="fastenerType">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="fault" style="inline">
<Context priority="0" selector="fault">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="faultCond" style="unstyled">
<Context priority="0" selector="faultCond">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faultContext" style="unstyled">
<Context priority="0" selector="faultContext">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faultDescr" style="block">
<Context priority="0" selector="faultDescr">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A7411e7c5-79df-4c6d-a5b3-a1e3d2f83918"><_gte:Target lang="en"
><_gte:Font Weight="bold">Fault Description: </_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="faultEquip" style="unstyled">
<Context priority="0" selector="faultEquip">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faultIsolation" style="unstyled">
<Context priority="0" selector="faultIsolation">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faultIsolationProcedure" style="unstyled">
<Context priority="0" selector="faultIsolationProcedure">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faultIsolationRef" style="unstyled">
<Context priority="0" selector="faultIsolationRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faultIsolationTest" style="unstyled">
<Context priority="0" selector="faultIsolationTest">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faultMessageBody" style="unstyled">
<Context priority="0" selector="faultMessageBody">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faultMessageIndication" style="unstyled">
<Context priority="0" selector="faultMessageIndication">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faultReporting" style="block">
<Context priority="0" selector="faultReporting">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A13b2f2b2-2f6a-49be-b5fb-58d8309a146f"><_gte:Target lang="en"
><_ufe:FaultReport></_ufe:FaultReport></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="faultySubSystem" style="unstyled">
<Context priority="0" selector="faultySubSystem">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="faxNumber" style="unstyled">
<Context priority="0" selector="faxNumber">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="fieldName" style="block">
<Context priority="0" selector="fieldName">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element
comment="Changes to centred alignment from left with 20mm indent from left margin"
name="figure" style="formalBlock">
<Context
comment="Figures in the Introduction (pmt58) do not have a whole page for themselves (all others do)."
priority="13" selector="pmEntry[@pmEntryType='pmt58']//figure">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="0pt"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4f149f66-0af2-4d1e-8883-57a7c19b227f"><_gte:Target lang="en"
><_ufe:FigureTitleForToC><_gte:ElementContent
include="elementAndContent" xpath="title"/></_ufe:FigureTitleForToC
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7f7ffab2-69a1-407a-ac61-787614acacb8"><_gte:Target lang="en"
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If the width is greater than 150mm, don't use parent indent (avoids full page figures being pushed off to the right).
May need to add an explicit attribute for this if the width setting isn't consistent.
UPDATE: I don't think we ever use parent indent. Add a different condition if there is a case where we need to"
conditionType="if">
<Tests>
<XPathTest
expression="@false and substring(graphic/@reproductionWidth,1,3) > 150"/>
</Tests>
<BaseProperties>
<Indent leftIndent="0pt"/></BaseProperties>
</Condition>
<Condition comment="Foldout page if the last graphic is a foldout">
<Tests>
<XPathTest expression="graphic[last()]/@reproductionWidth='355.6 mm'"/>
</Tests>
<BaseProperties>
<Indent leftIndent="0pt"/>
<Alignment align="left"/>
<Breaks newPageSet="Foldout_Page_Set" startNew="oddPage"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4a8c62f5-a726-46af-af24-82ae5f38063a"><_gte:Target lang="en"
><_ufe:FigureTitleForToC><_gte:ElementContent
include="elementAndContent" xpath="title"/></_ufe:FigureTitleForToC
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab7d1a6d2-ad06-4ec6-afff-dc41db7822e6"><_gte:Target lang="en"
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment="Also figures in the Introduction of the IPL (first pmEntry in the IPL)  do not have a whole page for themselves."
priority="11.375"
selector="pmEntry[@pmEntryType='pmt75']/pmEntry[count(preceding-sibling::pmEntry)&lt;3]//figure[count(ancestor::pmEntry)=2]">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="0pt"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0a1f822e-6999-4032-990f-bdc47fae6b4e"><_gte:Target lang="en"
><_ufe:FigureTitleForToC><_gte:ElementContent
include="elementAndContent" xpath="title"/></_ufe:FigureTitleForToC
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac3b28e2d-5ab8-4eb9-b668-cf2ddf03ea85"><_gte:Target lang="en"
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If the width is greater than 150mm, don't use parent indent (avoids full page figures being pushed off to the right).
May need to add an explicit attribute for this if the width setting isn't consistent."
conditionType="if">
<Tests>
<XPathTest expression="substring(graphic/@reproductionWidth,1,3) > 150"/>
</Tests>
<BaseProperties>
<Indent leftIndent="0pt"/></BaseProperties>
</Condition>
<Condition
comment="If any graphic within this figure has a reproduction width of 355.6mm, use a foldout configuration.
Add a blank foldout page after (represents the backside of the foldout).
NOTE: This should be updated to add a blank page after EACH foldout graphic.">
<Tests>
<XPathTest expression="graphic/@reproductionWidth='355.6 mm'"/></Tests>
<BaseProperties>
<Indent leftIndent="0pt"/>
<Alignment align="left"/>
<Breaks newPageSet="Page_Block_Foldout_Page_Set" startNew="oddPage"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7772263a-929b-4320-b805-ab353ef96a57"><_gte:Target lang="en"
><_ufe:FigureTitleForToC><_gte:ElementContent
include="elementAndContent" xpath="title"/></_ufe:FigureTitleForToC
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A55c93d98-0b18-4c3c-8c25-ffd774f5aa31"><_gte:Target lang="en"
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd><_ufe:BlankFoldoutPage
></_ufe:BlankFoldoutPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties>
<Breaks newPageSet="#noChange" startNew="oddPage"/></BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context
comment="New context just for IPL figures (ancestor illustratedPartsCatalog), so they can appear in their own ToC
" priority="10" selector="illustratedPartsCatalog//figure">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="0pt"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A602a79eb-c584-497c-8c62-6c6e6dc266f7"><_gte:Target lang="en"
><_ufe:IPLFigureTitleForToC><_gte:ElementContent
include="elementAndContent" xpath="title"/></_ufe:IPLFigureTitleForToC
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A343e83a7-ed95-46de-8b8b-7654e7252fb0"><_gte:Target lang="en"
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If there are an even number of graphics in the figure, need to start on an odd page so the last one lands on an even page.">
<Tests>
<XPathTest expression="count(graphic) mod 2 = 0"/></Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Page_Set" pageNumber="continue"
startNew="oddPage"/></BaseProperties>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties>
<Breaks newPageSet="#noChange" startNew="oddPage"/></BaseProperties>
</Condition>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<Breaks newPageSet="Page_Block_Page_Set" startNew="evenPage"/>
</BaseProperties>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties>
<Breaks newPageSet="#noChange" startNew="evenPage"/></BaseProperties>
</Condition>
</Condition>
<Condition>
<Tests>
<XPathTest expression="graphic[last()]/@reproductionWidth='355.6 mm'"/>
</Tests>
<BaseProperties>
<Alignment align="left"/>
<Breaks newPageSet="Page_Block_Foldout_Page_Set" startNew="oddPage"/>
</BaseProperties>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties>
<Breaks newPageSet="Foldout_Page_Set" startNew="oddPage"/>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="0" selector="figure">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="0pt"/>
<Alignment align="center"/>
<Breaks blockOrInline="block" startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8c7161c4-4a87-44f9-a328-d942086c9e8c"><_gte:Target lang="en"
><_ufe:FigureTitleForToC><_gte:ElementContent
include="elementAndContent" xpath="title"/></_ufe:FigureTitleForToC
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad43cd278-a677-4889-aa27-873acdbeabb3"><_gte:Target lang="en"
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties>
<Breaks startNew="none"/></BaseProperties>
</Condition>
<Condition
comment="If the width is greater than 150mm, don't use parent indent (avoids full page figures being pushed off to the right).
May need to add an explicit attribute for this if the width setting isn't consistent."
conditionType="if">
<Tests>
<XPathTest expression="substring(graphic/@reproductionWidth,1,3) > 150"/>
</Tests>
<BaseProperties>
<Indent leftIndent="0pt"/></BaseProperties>
</Condition>
<Condition comment="Foldout page
">
<Tests>
<XPathTest expression="graphic[last()]/@reproductionWidth='355.6 mm'"/>
</Tests>
<BaseProperties>
<Indent leftIndent="0pt"/>
<Alignment align="left"/>
<Breaks newPageSet="Foldout_Page_Set" startNew="oddPage"/>
</BaseProperties>
<Condition comment="Page block foldout page">
<Tests>
<XPathTest
expression="number(ancestor::pmEntry[last()]/@startat) >= 1000"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Foldout_Page_Set" startNew="oddPage"/>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment="If any graphic within this figure has a reproduction width of 355.6mm, use a foldout pageset.
Except if the last graphic is not a foldout.
" conditionType="elseIf">
<Tests>
<XPathTest
expression="graphic/@reproductionWidth='355.6 mm' and not(graphic[last()]/@reproductionWidth='355.6 mm')"/>
</Tests>
<BaseProperties>
<Indent leftIndent="0pt"/>
<Alignment align="left"/>
<Breaks newPageSet="Default_Page_Set" startNew="oddPage"/>
</BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="number(ancestor::pmEntry[last()]/@startat) >= 1000"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Page_Set" startNew="oddPage"/>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment="If any graphic within this figure has a reproduction width of 355.6mm, use a foldout pageset.
" conditionType="elseIf">
<Tests>
<XPathTest expression="graphic/@reproductionWidth='355.6 mm'"/></Tests>
<BaseProperties>
<Indent leftIndent="0pt"/>
<Alignment align="left"/>
<Breaks newPageSet="Foldout_Page_Set" startNew="oddPage"/>
</BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="number(ancestor::pmEntry[last()]/@startat) >= 1000"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Foldout_Page_Set" startNew="oddPage"/>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment="If there is no legend, add a page break after so the figure appears on its own page (if it has a legend, the legend can add the new page).
UPDATE: Also don't need a new page if followed by another figure. This was actually incorrectly resetting the page count.
UPDATE: Also don't need a new page unless there is following content (another dmRef, or content in parent, grandparent, or great-grandparent). May need to add more ancestors later.
" conditionType="elseIf">
<Tests>
<XPathTest
expression="not(legend) and not(ancestor::pmEntry[@pmEntryType='pmt75'])"/>
<XPathTest expression="not(name(following-sibling::*[1])='figure')"/>
<XPathTest
expression="ancestor::dmContent/following-sibling::* or count(following-sibling::*)>0 or count(../following-sibling::*)>0 or count(../../following-sibling::*)>0 or count(../../../following-sibling::*)>0 or count(../../../../following-sibling::*)>0 or count(../../../../../following-sibling::*)>0 or count(../../../../../../following-sibling::*)>0 or ancestor::pmEntry[parent::pmEntry]/following-sibling::*"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A57cf252b-978b-457b-890d-09690e2f60c1"><_gte:Target lang="en"
><_ufe:FigureTitleForToC><_gte:ElementContent
include="elementAndContent" xpath="title"/></_ufe:FigureTitleForToC
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A489ac96f-1fdd-4720-b732-98b949be56d4"><_gte:Target lang="en"
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd><_ufe:PageBreak
></_ufe:PageBreak></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="figureAlts" style="block">
<Context priority="0" selector="figureAlts">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="firstName" style="unstyled">
<Context priority="0" selector="firstName">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="firstVerification" style="unstyled">
<Context priority="0" selector="firstVerification">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="fitmentCode" style="unstyled">
<Context priority="0" selector="fitmentCode">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
comment='The foldout element will no longer be used to trigger the foldout page, instead the "reproductionWidth=&#x27;355.6 mm&#x27; attribute on graphic will do so.
But it is still used for foldout tables.' name="foldout" style="block">
<Context priority="0" selector="foldout">
<BaseProperties>
<Indent leftIndent="0pt"/>
<Alignment align="left"/>
<Breaks blockOrInline="block" newPageSet="Foldout_Page_Set"
startNew="oddPage"/></BaseProperties>
<Conditions>
<Condition comment="Page block foldout page">
<Tests>
<XPathTest
expression="number(ancestor::pmEntry[last()]/@startat) >= 1000"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Foldout_Page_Set" startNew="oddPage"/>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="footnote" style="footnote">
<Context priority="0" selector="footnote">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<Footnote footnoteModelReference="Default_Footnotes"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aab7ea05a-3fcd-4789-b8d6-30cec9d9261d"><_gte:Target lang="en"
><_gte:Font TypeSize=".69em" Offset=".33em"><_gte:ElementNumber/></_gte:Font
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="nothing" format="(CURRENT)"
numberAlignment="left">
<LabelAndNumber><_gte:Translate translate="off"
id="Aecbce748-b0a2-4d49-974c-d824545d662f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context footnoteModelReference="Default_Footnotes" priority="-0.0001"
selector="footnote">
<BaseProperties propertySetReferences="Sans-Serif_Font">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/>
<Footnote footnoteModelReference="Default_Footnotes"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aed176af4-a319-40ec-b7bf-9bcd9fdfe357"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="1."/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="tab" format="(CURRENT) '.'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Aba1be3fe-64ac-4f63-8eb3-850ba90325a8"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="footnoteRef" style="footnote">
<Context priority="0" selector="footnoteRef">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<Footnote footnoteIdRefAttrName="internalRefId"
footnoteModelReference="Default_Footnotes" referenceType="references"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aca7f4ab4-ccdd-4327-b19a-e33ea86c97f0"><_gte:Target lang="en"
><_gte:Font TypeSize=".69em" Offset=".33em"><_gte:CrossReference
refAttr="internalRefId" xrefStyle="Number"/></_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="footnoteRemarks" style="unstyled">
<Context priority="0" selector="footnoteRemarks">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dc:format" style="unstyled">
<Context priority="0" selector="dc:format">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="fullNatoStockNumber" style="unstyled">
<Context priority="0" selector="fullNatoStockNumber">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="functionalItem" style="nostyle">
<Context priority="0" selector="functionalItem">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="functionalItemAlts" style="hidden">
<Context priority="0" selector="functionalItemAlts">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="functionalItemCode" style="unstyled">
<Context priority="0" selector="functionalItemCode">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="functionalItemFamily" style="unstyled">
<Context priority="0" selector="functionalItemFamily">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="functionalItemIdent" style="hidden">
<Context priority="0" selector="functionalItemIdent">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="functionalItemRef" style="block">
<Context priority="20"
selector="functionalItemRefGroup/functionalItemRef">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="functionalItemRef">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="functionalItemRefGroup" style="unstyled">
<Context priority="0" selector="functionalItemRefGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
comment="Looks like a table of functional items (each row represented by functionalItemSpec)"
name="functionalItemRepository" style="block">
<Context priority="0" selector="functionalItemRepository">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A7499d676-411d-4372-924a-cf429b114a14"><_gte:Target lang="en"
><_dtd:table><_dtd:tgroup cols="3"><_dtd:colspec colname="col1"/><_dtd:colspec
colname="col2"/><_dtd:colspec colname="col3"/><_dtd:tbody><_dtd:row
><_dtd:entry>Name</_dtd:entry><_dtd:entry>Installation Location</_dtd:entry
><_dtd:entry>Family</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="@bak"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3a7926ee-33a4-4129-a6ff-7e5419e29bdd"><_gte:Target lang="en"
><_dtd:table><_dtd:tgroup cols="3"><_dtd:colspec colname="col1"/><_dtd:colspec
colname="col2"/><_dtd:colspec colname="col3"/><_dtd:tbody><_dtd:row
><_dtd:entry>Name</_dtd:entry><_dtd:entry>Installation Location</_dtd:entry
><_dtd:entry>Family</_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="functionalItemSpec" style="block">
<Context priority="0" selector="functionalItemSpec">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afa241342-cb44-423f-8fd8-46cd9ea35dc4"><_gte:Target lang="en"
><_dtd:table><_dtd:tgroup cols="3"><_dtd:colspec colname="col1"/><_dtd:colspec
colname="col2"/><_dtd:colspec colname="col3"/><_dtd:tbody><_dtd:row
><_dtd:entry><_gte:ElementContent include="contentOnly" xpath="name"
/></_dtd:entry><_dtd:entry><_gte:ElementContent include="contentOnly"
xpath="functionalItemAlts/functionalItem/location/installationLocation"
/></_dtd:entry><_dtd:entry><_gte:ElementContent include="contentOnly"
xpath="functionalItemAlts/functionalItem/functionalItemFamily"/></_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="@bak"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aefeab0d0-0532-4aaa-810a-406830fe901f"><_gte:Target lang="en"
><_dtd:table><_dtd:tgroup cols="3"><_dtd:colspec colname="col1"/><_dtd:colspec
colname="col2"/><_dtd:colspec colname="col3"/><_dtd:tbody><_dtd:row
><_dtd:entry><_gte:ElementContent include="contentOnly" xpath="name"
/></_dtd:entry><_dtd:entry><_gte:ElementContent include="contentOnly"
xpath="functionalItemAlts/functionalItem/location/installationLocation"
/></_dtd:entry><_dtd:entry><_gte:ElementContent include="contentOnly"
xpath="functionalItemAlts/functionalItem/functionalItemFamily"/></_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="functionalPhysicalAreaIdent" style="unstyled">
<Context priority="0" selector="functionalPhysicalAreaIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="functionalPhysicalAreaRef" style="unstyled">
<Context priority="0" selector="functionalPhysicalAreaRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="functionalPhysicalAreaRefGroup" style="unstyled">
<Context priority="0" selector="functionalPhysicalAreaRefGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="functionalPhysicalAreaRepository" style="unstyled">
<Context priority="0" selector="functionalPhysicalAreaRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="functionalPhysicalAreaSpec" style="unstyled">
<Context priority="0" selector="functionalPhysicalAreaSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="genericPartData" style="block">
<Context priority="6.0125"
selector="genericPartData[ancestor::_ufe:IPD_GenericPartDataDD]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context
comment="When the genericPartDataName is 'csd', 'geoloc', &#x22;chgnbr&#x22;, &#x22;chgtyp&#x22;, &#x22;chgcond&#x22;, &#x22;opt&#x22;, or &#x22;eqdes&#x22;, it should not be output (hide).
Also hide &#x22;dd&#x22;, which is output separately." priority="6.0075"
selector="genericPartData[@genericPartDataName='csd' or @genericPartDataName='geoloc' or @genericPartDataName='chgnbr' or @genericPartDataName='chgtyp' or @genericPartDataName='chgcond' or @genericPartDataName='eqdes' or @genericPartDataName='opt' or @genericPartDataName='dd']">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="6.0025"
selector="genericPartData[ancestor::_ufe:IPD_GenericPartDataRD]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context
comment='When the genericPartDataName attribute is set to "rd" or "rdi", the values are to be set inline.
UPDATE: Now set to be hidden, and from the first occurrence, it will output all the &#x27;rd&#x27; and &#x27;rdi&#x27; entries at once.'
priority="6"
selector="genericPartData[@genericPartDataName='rd' or @genericPartDataName='rdi']">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition
comment="From the first occurrence will output all the 'rd' and 'rdi' entries at once (but not if we're already nested in IPD_GenericPartDataRD).
UPDATE: Now the rd/rdi generic part data is all output last, so disable this condition.
">
<Tests>
<XPathTest
expression="@false and not(ancestor::_ufe:IPD_GenericPartDataRD)"/>
<XPathTest
expression="count(preceding-sibling::genericPartData[@genericPartDataName='rd' or @genericPartDataName='rdi'])=0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Acc6350fd-26e1-4f5d-8c62-48ee1da9fd97"><_gte:Target lang="en"
><_ufe:IPD_GenericPartDataRD></_ufe:IPD_GenericPartDataRD></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="0" selector="genericPartData">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="genericPartDataGroup" style="hidden">
<Context priority="0" selector="genericPartDataGroup">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="genericPartDataValue" style="block">
<Context
comment='The genericPartDataName entries with attribute is set to "rd" or "rdi" are output from IPD_GenericPartDataRD.
The values are to be set inline, separated by commas.
Also, three or more consecutively numbered values in a row should be formatted like "C68 thru C93".
By default, add a comma after. The conditions will check if a "thru" is necessary or if it&#x27;s the last one and
doesn&#x27;t need a comma.
UPDATE: Now IPD_GenericPartDataRD outputs all the values directly, so this context is no longer necessary.
' priority="16"
selector="_ufe:IPD_GenericPartDataRD//genericPartDataValue[@false]">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac9bb6bfc-fdb7-4805-9076-210d91705c24"><_gte:Target lang="en"
>, </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If it's the last &#x22;rd&#x22; genericPartData, just output as-is (no comma following)">
<Tests>
<XPathTest
expression="not(parent::genericPartData/following-sibling::genericPartData[1][@genericPartDataName='rd'])"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0b3f2328-7b25-4829-a541-842e588fc7e9"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment='This condition is for the first of a sequence of values where "thru" needs to be used (like "C86 thru C93").
So add the "thru" text after.
The XPath condition used is just a placeholder for the source edit required to calculate it.'
conditionType="elseIf">
<Tests>
<XPathTest
expression="parent::genericPartData/following-sibling::genericPartData[1][@genericPartDataName='rd']='TEST'"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A9262fb76-68f4-42e0-b29e-4517afa0af8a"><_gte:Target lang="en"
> thru </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment='This condition is for the middle values of a sequence of values where "thru" needs to be used (like "C86 thru C93").
The value should be hidden.
The XPath condition used is just a placeholder for the source edit required to calculate it.'
conditionType="elseIf">
<Tests>
<XPathTest
expression="parent::genericPartData/following-sibling::genericPartData[1][@genericPartDataName='rd']='TEST'"/>
</Tests>
<BaseProperties>
<Hidden hidden="yes"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A67c0e6a0-7c52-4b79-80d4-bcf9a5be52d2"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: genericPartDataValue[parent::genericPartData/@genericPartDataName='rd']

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();
contextProp.isHidden = 0;

// SOURCE EDIT: We need to calculate if we are the first of a sequence of three or more values
// to add the "thru" text, and if we are in the middle of a sequence, when the value should
// be hidden.

// Get the current, previous two, and next two values:
var current = parseValue(formatting.evaluateXPath("."));
var previous1 = parseValue(formatting.evaluateXPath("parent::genericPartData/preceding-sibling::genericPartData[1][@genericPartDataName='rd' or @genericPartDataName='rdi']"));
var previous2 = parseValue(formatting.evaluateXPath("parent::genericPartData/preceding-sibling::genericPartData[2][@genericPartDataName='rd' or @genericPartDataName='rdi']"));
var next1 = parseValue(formatting.evaluateXPath("parent::genericPartData/following-sibling::genericPartData[1][@genericPartDataName='rd' or @genericPartDataName='rdi']"));
var next2 = parseValue(formatting.evaluateXPath("parent::genericPartData/following-sibling::genericPartData[2][@genericPartDataName='rd' or @genericPartDataName='rdi']"));

// This value is the first of a sequence if there are at least two sequential values following,
// and the previous one either is not in sequence, or this is the first value in a series.

var isFirstOfSequence = false;

if (next1 == current + 1 && next2 == current +2 && (previous1 != current - 1 || previous1 == -1)) {
	isFirstOfSequence = true;
}

// This value is in the middle of a sequence if it is part of a sequence of three numbers,
// and not the first or last of a sequence.

var isMiddleOfSequence = false;

// So there are three cases to check to be part of a sequence:
// 1. The preceding two are in sequence with the current
// 2. The preceding and next are in sequence with the current
// 3. The next two are in sequence

if ((previous1 == current - 1 && previous2 == current - 2)
		|| (previous1 == current - 1 && next1 == current + 1)
		|| (next1 == current + 1 && next2 == current + 2)) {
	isMiddleOfSequence = true;
}

// Check for first or last of sequence
if (isFirstOfSequence || next1 != current + 1) {
	isMiddleOfSequence = false;
}

// Debugging:
//formatting.output("[" + previous2 + "," + previous1 + "," + current + "," + next1 + "," + next2 + "]");

// parseValue: Returns an integer for the numeric part of the text of the "rd" value, or -1
// if not parsable.
// E.g., "C60" will return 60
function parseValue(text) {
	if (!text) {
		return -1;
	}
	
	var strippedText = text.replace(/^[a-zA-Z]*([0-9]+)$/, "$1");
	var intValue = parseInt(strippedText);
	if (!intValue) {
		return -1;
	}
	return intValue;
}


// Base properties
if ( currentNode.getUserString( '_temp_hasAfter_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:genericPartDataValue:genericPartDataValueparentgenericPartDatCCDE:addAfter');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:genericPartDataValue:genericPartDataValueparentgenericPartDatCCDE:addAfter', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Ab65b1488-fe37-4a87-8d04-c65d7e4ffa70\"><_gte:Target lang=\"en\">, </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentAfter( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasAfter_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


fish[ 'gentextResolved' ] = 0; // Allows conditions to overwrite gentext

if ( formatting.evaluateXPath( " boolean( not(parent::genericPartData/following-sibling::genericPartData[1][@genericPartDataName='rd'] or parent::genericPartData/following-sibling::genericPartData[1][@genericPartDataName='rdi']) )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:genericPartDataValue:genericPartDataValueparentgenericPartDatCCDE:addAfter_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:genericPartDataValue:genericPartDataValueparentgenericPartDatCCDE:addAfter_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Adc86e374-0c33-41c6-a057-cb04ab0c089e\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' ) {
    currentNode.augmentBefore( null );
    currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
  }

}

// This is the test for the first of a sequence
//else if ( formatting.evaluateXPath( " boolean( parent::genericPartData/following-sibling::genericPartData[1][@genericPartDataName='rd']='TEST' )", 130, template.primaryStream ) != 0 )
else if (isFirstOfSequence)
{
  // Base properties
  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:genericPartDataValue:genericPartDataValueparentgenericPartDatCCDE:addAfter_Test2');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:genericPartDataValue:genericPartDataValueparentgenericPartDatCCDE:addAfter_Test2', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A93293230-8ac4-4761-b9a9-6adfdbd25fa1\"><_gte:Target lang=\"en\"> thru </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' ) {
    currentNode.augmentBefore( null );
    currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
  }

}

// This is the test for the middle of a sequence
//else if ( formatting.evaluateXPath( " boolean( parent::genericPartData/following-sibling::genericPartData[1][@genericPartDataName='rd']='TEST' )", 130, template.primaryStream ) != 0 )
else if (isMiddleOfSequence)
{
  // Base properties
  contextProp.isHidden = 1;
  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasAfter_Test3' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:genericPartDataValue:genericPartDataValueparentgenericPartDatCCDE:addAfter_Test3');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:genericPartDataValue:genericPartDataValueparentgenericPartDatCCDE:addAfter_Test3', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A942e7ded-38f8-4370-ba00-35c682eb10a9\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test3', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasBefore_Test3' ) != '1' ) {
    currentNode.augmentBefore( null );
    currentNode.setUserString( '_temp_hasBefore_Test3', '1' );
  }

}
var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
if ( contextProp.isHidden == 1 ) {
  currentNode.augmentReference( '_app:hidden', 1 );
}

template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: genericPartDataValue[parent::genericPartData/@genericPartDataName='rd']

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="0" selector="genericPartDataValue">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="Some converted content had empty entries with parens and spaces. This hides any of these occurrences.">
<Tests>
<XPathTest
expression="starts-with(.,'(') and substring(.,string-length(.))=')' and normalize-space(substring(.,2,string-length(.)-2))=''"/>
</Tests>
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
<Condition comment="Auto-generate bracckets if missing"
conditionType="elseIf">
<Tests>
<XPathTest expression="not(starts-with(normalize-space(.), '('))"/>
<XPathTest
expression="not(parent::genericPartData/@genericPartDataName='dd')"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A453ac264-d1a0-443b-8310-384a429cd807"><_gte:Target lang="en"
>(</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A63402e29-81cf-4673-a614-350a7c115d90"><_gte:Target lang="en"
>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="genericSequences" style="hidden">
<Context priority="0" selector="genericSequences">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="globalPropertyRef" style="unstyled">
<Context priority="0" selector="globalPropertyRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="graphic" style="graphic">
<GraphicDetails filename="xlink:href"></GraphicDetails>
<Context priority="22" selector="figure/graphic[not(position()=last())]">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A495533c4-6560-4295-8be6-bda807330067"><_gte:Target lang="en"
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A029dc224-49a2-4ce6-a855-9a2833f5c920"><_gte:Target lang="en"
><_ufe:FigureSheetTitle> (Sheet <_gte:XPathString
expr="count(ancestor::graphic/preceding-sibling::graphic)+1"/> of <_gte:XPathString
expr="count(ancestor::figure/graphic)"/>)<_gte:Leaders
leaderType="space" lenType="specified" specLen="1.00em"/><_gte:ElementContent
include="contentOnly" xpath="ancestor::figure/title"/></_ufe:FigureSheetTitle
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="Add change bar also if parent figure has change attribute set."
conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/>
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="add"/>
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Graphic_Highlight_Info">
</BaseProperties>
</Condition>
<Condition
comment="Add a blank foldout page after each foldout graphic.">
<Tests>
<AttributeTest attributeName="reproductionWidth" testType="equals"
testValue="355.6 mm"/></Tests>
<BaseProperties>
<Breaks newPageSet="Foldout_Page_Set" startNew="oddPage"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A48d62c11-c8af-415b-8a19-fadb320f9947"><_gte:Target lang="en"
><_ufe:SaveFoldoutPage></_ufe:SaveFoldoutPage><_ufe:CheckChangeBarBegin
></_ufe:CheckChangeBarBegin></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A9c19419a-91ad-4bb3-8593-3e0e77d195ff"><_gte:Target lang="en"
><_ufe:FigureSheetTitle> (Sheet <_gte:XPathString
expr="count(ancestor::graphic/preceding-sibling::graphic)+1"/> of <_gte:XPathString
expr="count(ancestor::figure/graphic)"/>)<_gte:Leaders
leaderType="space" lenType="specified" specLen="1.00em"/><_gte:ElementContent
include="contentOnly" xpath="ancestor::figure/title"/></_ufe:FigureSheetTitle
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd><_ufe:BlankFoldoutPage
></_ufe:BlankFoldoutPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="number(ancestor::pmEntry[last()]/@startat) >= 1000"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Foldout_Page_Set" startNew="oddPage"/>
</BaseProperties>
</Condition>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<Breaks newPageSet="Default_Page_Set" startNew="page"/></BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="number(ancestor::pmEntry[last()]/@startat) >= 1000"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Page_Set" startNew="page"/>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment="If it's a multi-sheet figure, make sure there's a page break after the preceding graphic (otherwise a small one might go on the same page as the preceding sheet).
UPDATE: This should be handled by the other conditions (disable)">
<Tests>
<XPathTest
expression="@false and (not(@reproductionWidth='355.6 mm') and count(preceding-sibling::graphic)>0)"/>
</Tests>
<BaseProperties>
<Breaks startNew="page"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: figure/graphic[not(position()=last())]

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "not_last_graphic_in_figure";
var useGraphic = false;
var graphic = {};
contextProp.isBlock = 0;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.preformatted = false;
contextProp.pdfTag = 'Figure';
contextProp.pdfAttrs = {};
fish[ 'gentextResolved' ] = 1; // Signal to property sets not to overwrite context gentext

// SOURCE EDIT: Get the sheet number and figure ID to construct the title text
var sheetNum = formatting.evaluateXPath("count(preceding-sibling::graphic)+1");
var figureId = formatting.evaluateXPath("ancestor::figure/@id");
// Use counter to construct unique gentext stream names
template.sheetGraphicCtr++;

// Base properties
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Standard_space' ].onEnter( block, contextProp );
contextProp.isBlock = 1;


if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {

  var stream = template.content.getStream('stylesheet0:Element:graphic:not_last_graphic_in_figure:addBefore');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );

    stream = template.content.createStream( 'stylesheet0:Element:graphic:not_last_graphic_in_figure:addBefore', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A495533c4-6560-4295-8be6-bda807330067\"><_gte:Target lang=\"en\"><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target></_gte:Translate>" );
    stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}

if ( currentNode.getUserString( '_temp_hasAfter_' ) != '1' ) {

  // SOURCE EDIT: Make a new stream for each graphic, since we'll use the figure ID to construct
  // an xref to the figure number itself.

  var streamName = "stylesheet0:Element:graphic:not_last_graphic_in_figure" + template.sheetGraphicCtr + ":addAfter";
  var stream = template.content.getStream(streamName); //'stylesheet0:Element:graphic:not_last_graphic_in_figure:addAfter');

  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( streamName, primaryStream.type );

    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A029dc224-49a2-4ce6-a855-9a2833f5c920\"><_gte:Target lang=\"en\"><_ufe:FigureSheetTitle><internalRef internalRefId=\"" + figureId + "\"></internalRef>. (Sheet " + sheetNum);
    stream.write( " of <_gte:XPathString expr=\"count(ancestor::figure/graphic)\"/>)<_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"1.00em\"/><_gte:ElementContent include=\"contentOnly\" xpath=\"ancestor::figure/title\"/>" );
    stream.write( "</_ufe:FigureSheetTitle><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentAfter( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasAfter_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


fish[ 'gentextResolved' ] = 0; // Allows conditions to overwrite gentext

if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify' or ../@changeType = 'add' or ../@changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  // Base properties
  fish[ '_propset:Set_Graphic_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_Graphic_Highlight_Info' ].onEnter( block, contextProp );

}

if ( formatting.evaluateXPath( "@reproductionWidth = '355.6 mm'", 130, template.primaryStream ) != 0 )
{
  // Base properties
  // If it's the first graphic in the figure, don't need to start a new page, since the figure starts a the new foldout page already
  if ( formatting.evaluateXPath( "count(preceding-sibling::graphic)>0", 130, template.primaryStream ) != 0 ) {
    contextProp.startNew = 2; // start new page
    contextProp.pageType = 2;
    contextProp.pageSet = 'Foldout_Page_Set';
    contextProp.markerType = '';
  }

  if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:graphic:not_last_graphic_in_figure:addBefore_Test2');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:graphic:not_last_graphic_in_figure:addBefore_Test2', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A48d62c11-c8af-415b-8a19-fadb320f9947\"><_gte:Target lang=\"en\"><_ufe:SaveFoldoutPage></_ufe:SaveFoldoutPage><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin>" );
      stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentBefore( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' ) {

    // SOURCE EDIT: Make a new stream for each graphic, since we'll use the figure ID to construct
    // an xref to the figure number itself.

    var streamName = "stylesheet0:Element:graphic:not_last_graphic_in_figure" + template.sheetGraphicCtr + ":addAfter_Test2";
    var stream = template.content.getStream(streamName); //'stylesheet0:Element:graphic:not_last_graphic_in_figure:addAfter_Test2');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( streamName, primaryStream.type );

      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A9c19419a-91ad-4bb3-8593-3e0e77d195ff\"><_gte:Target lang=\"en\"><_ufe:FigureSheetTitle><internalRef internalRefId=\"" + figureId + "\"></internalRef>. (Sheet " + sheetNum );
      stream.write( " of <_gte:XPathString expr=\"count(ancestor::figure/graphic)\"/>)<_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"1.00em\"/><_gte:ElementContent include=\"contentOnly\" xpath=\"ancestor::figure/title\"/>" );
      stream.write( "</_ufe:FigureSheetTitle><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd><_ufe:BlankFoldoutPage></_ufe:BlankFoldoutPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }


  if ( formatting.evaluateXPath( " boolean( number(ancestor::pmEntry[last()]/@startat) >= 1000 )", 130, template.primaryStream ) != 0 )
  {

    // Base properties
    contextProp.startNew = 2; // start new page
    contextProp.pageType = 2;
    contextProp.pageSet = 'Page_Block_Foldout_Page_Set';

  }
}
else
{
  // Base properties
  contextProp.startNew = 2; // start new page
  contextProp.pageType = 0;
  contextProp.pageSet = 'Default_Page_Set';

	// SOURCE EDIT: Check for ACMM and apply ACMM Page Set instead of Default Page Set
	if ( formatting.evaluateXPath( "/pm/@type='acmm'", 130, template.primaryStream ) != 0 ) {
    contextProp.pageSet = 'ACMM_Page_Set';
	} 


  if ( formatting.evaluateXPath( " boolean( number(ancestor::pmEntry[last()]/@startat) >= 1000 )", 130, template.primaryStream ) != 0 )
  {
    // Base properties
    contextProp.startNew = 2; // start new page
    contextProp.pageType = 0;
    contextProp.pageSet = 'Page_Block_Page_Set';

  }
}

if ( formatting.evaluateXPath( " boolean( @false and (not(@reproductionWidth='355.6 mm') and count(preceding-sibling::graphic)>0) )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  contextProp.startNew = 2; // start new page
  contextProp.pageType = 0;

}
var attr = arguments[0].attributes;

// SOURCE EDIT: See if the graphic exists; if not use the filename of a large red "not found" graphic
var graphicFilename = attr['xlink:href'];
var graphicObj = template.content.functions._app.GetGraphic(graphicFilename);
if (!graphicObj) {
	graphicFilename = "graphic_not_found.png"; //"graphics/ICN-64547-0000210356-001-01.cgm.png";
}

//graphic = {  filename : attr[ 'xlink:href' ], valign : 'baseline'};
graphic = {  filename : graphicFilename, valign : 'baseline'};


useGraphic = true;
if ( contextProp.preformatted ) {
  template.content.functions._app.setPreformatted( block );
}

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
template.content.functions._app.setWantColumnTopMargin( contextProp.wantColumnTopMargin, block );
fish[ 'isHidden' ] = 0;
if ( contextProp.isHidden == 1 ) {
  currentNode.augmentReference( '_app:hidden', 1 );
  useGraphic = false;
}

fish[ 'pageSet' ] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' ) {
  if ( contextProp.pageSet != '' ) {
    template.content.functions._app.startPageSet( block, contextProp, 0 );
  } else {
    template.content.functions._app.pageBreak( contextProp, 0 );
  }
} else if ( contextProp.startNew == '1' ) {
  template.content.functions._app.startNewColumn( block, contextProp );
}

if ( contextProp.isBlock == 1 ) {
  if ( block.numColumns > 1 ) {
    template.content.functions._app.configureColumns( block );
  }

  fish[ 'isBlock' ] = 1;
  template.content.functions._app.blockStart( block, false, false );
} else {
  fish[ 'isBlock' ] = 0;
  template.content.functions._app.inlineStart( style );
}

template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, contextProp.isBlock );
if ( useGraphic && currentNode.hasAugmentation ) {
  var tempNode = currentNode.augFirstChild;
  if ( tempNode != null && tempNode.nodeType == Node.ELEMENT_NODE && tempNode.getAttribute('type') == 'AddBefore' ) {
    var tmpname = 'graphics:xml:graphic' + application.calculateHash( tempNode.getNodePath( 1 )).toString( 16 );
    var tempStream = template.content.getStream(tmpname);
    if ( !tempStream ) {
       var primaryStream = template.content.getStream( template.primaryStream);
      tempStream = template.content.createStream(tmpname, primaryStream.type);
      tempStream.write('<?xml version="1.0"?><_app:Graphic xmlns:_app="http://www.arbortext.com/namespace/APP/APPFormattingElements" ');
      if (graphic.filename) tempStream.write('  filename="' + graphic.filename + '"' );
      if (graphic.width) tempStream.write('  width="' + graphic.width + '"' );
      if (graphic.height) tempStream.write('  height="' + graphic.height + '"' );
      if (graphic.entity) tempStream.write('  entity="' + graphic.entity + '"' );
      if (graphic.valign) tempStream.write('  valign="' + graphic.valign + '"' );
      if (graphic.vscale) tempStream.write('  vscale="' + graphic.vscale + '"' );
      if (graphic.hscale) tempStream.write('  hscale="' + graphic.hscale + '"' );
      if (graphic.scalefit) tempStream.write('  scalefit="' + graphic.scalefit + '"' );
      if (useGraphic) tempStream.write(' hidden="' + useGraphic + '"');
      tempStream.write('/>');
    }

    if ( tempStream.xmlDocument ) {
      tempNode.augmentAfter(tempStream.xmlDocument);
      useGraphic = false;
    }
  }
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: figure/graphic[not(position()=last())]

var fish = formatting.fish[ template.stylerFish ];
if ( formatting.fishGet( template.stylerFish, '_propset:Set_Graphic_Highlight_Info', 0) == 1 ) {
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_Graphic_Highlight_Info' ].onExit();
}
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Standard_space' ].onExit();
template.content.functions._app.endPdfTag();
if ( fish[ 'isBlock' ] == 1 ) {
  template.content.functions._app.blockEnd( "not_last_graphic_in_figure", false, false );
} else {
  template.content.functions._app.inlineEnd();
}

if ( fish[ 'pageSet' ] != '' ) {
  template.content.functions._app.endPageSet();
}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context
comment="Source edit to check for missing graphics and use large red replacement if so"
priority="6" selector="graphic[@bak3 and @everywhere]">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="Add change bar also if parent figure has change attribute set."
conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/>
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="add"/>
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="modify"/></Tests>
<BaseProperties
propertySetReferences="Change_bar Set_Graphic_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa3637918-72e1-4e05-8e64-532ccb1297f9"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae2811adc-3977-401b-a390-4b0749a092be"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests>
<AttributeTest attributeName="reproductionWidth" testType="equals"
testValue="355.6 mm"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8762a83c-4933-498f-aee4-41150b8dd4cd"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:SaveFoldoutPage></_ufe:SaveFoldoutPage><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A27c91030-6e1e-495d-8711-e548c4c39d9e"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment='The page set name is set by the parent figure: if you specify one here it will cause the title to print on the next page, so use "No change".'>
<Tests>
<AttributeTest attributeName="reproductionWidth" testType="equals"
testValue="355.6 mm"/></Tests>
<BaseProperties>
<Breaks newPageSet="#noChange" startNew="oddPage"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Abccadb00-3d3c-471c-9730-4eddb028c29f"><_gte:Target lang="en"
><_ufe:SaveFoldoutPage></_ufe:SaveFoldoutPage></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa90ce383-463f-4a8f-8939-372c27f79117"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="number(ancestor::pmEntry[last()]/@startat) >= 1000"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="#noChange" startNew="oddPage"/></BaseProperties>
</Condition>
</Condition>
<Condition
comment="If it's a multi-sheet figure, make sure there's a page break before the last graphic (otherwise a small one might go on the same page as the preceding sheet)."
conditionType="elseIf">
<Tests>
<XPathTest expression="count(preceding-sibling::graphic)>0"/></Tests>
<BaseProperties>
<Breaks startNew="page"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: graphic

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "graphic_everywhere_else";
var useGraphic = false;
var graphic = {};
contextProp.isBlock = 0;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.preformatted = false;
contextProp.pdfTag = 'Figure';
contextProp.pdfAttrs = {};
fish[ 'gentextResolved' ] = 0; // Signal to property sets to apply gentext

// Base properties
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Standard_space' ].onEnter( block, contextProp );
contextProp.isBlock = 1;

fish[ 'gentextResolved' ] = 0; // Allows conditions to overwrite gentext

if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify' or ../@changeType = 'add' or ../@changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  // Base properties
  fish[ '_propset:Change_bar' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Change_bar' ].onEnter( block, contextProp );
  fish[ '_propset:Set_Graphic_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_Graphic_Highlight_Info' ].onEnter( block, contextProp );
  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addBefore_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addBefore_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A1f2ef394-368a-46b0-a97a-3cad3a408d79\"><_gte:Target lang=\"en\"><_gte:ChangeBarBegin class=\"default\" offset=\"10pt\" ruleThick=\"4pt\"/><_ufe:LEP_start_change>" );
      stream.write( "</_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentBefore( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addAfter_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addAfter_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A3411e8fa-a319-4366-83d1-df98b6817a36\"><_gte:Target lang=\"en\"><_gte:ChangeBarEnd class=\"default\"/><_ufe:LEP_end_change></_ufe:LEP_end_change></_gte:Target>" );
      stream.write( "</_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }


  if ( formatting.evaluateXPath( "@reproductionWidth = '355.6 mm'", 130, template.primaryStream ) != 0 )
  {

    // Base properties
    contextProp.markerType = '';
    if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' ) {
      var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addBefore_Test2');
      if ( stream == null ) {
        var primaryStream = template.content.getStream( template.primaryStream );
        stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addBefore_Test2', primaryStream.type );
        stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
        stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Abfa7e256-6303-47d3-9e0e-e1a4e590a146\"><_gte:Target lang=\"en\"><_gte:ChangeBarBegin class=\"default\" offset=\"10pt\" ruleThick=\"4pt\"/><_ufe:SaveFoldoutPage>" );
        stream.write( "</_ufe:SaveFoldoutPage><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }

      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
    }

    if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' ) {
      var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addAfter_Test2');
      if ( stream == null ) {
        var primaryStream = template.content.getStream( template.primaryStream );
        stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addAfter_Test2', primaryStream.type );
        stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
        stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A5c6b8295-664c-400d-818b-71ca6dec99b0\"><_gte:Target lang=\"en\"><_gte:ChangeBarEnd class=\"default\"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText>" );
        stream.write( "</_app:Gentext>" );
      }

      currentNode.augmentAfter( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
    }

  }
}

if ( formatting.evaluateXPath( "@reproductionWidth = '355.6 mm'", 130, template.primaryStream ) != 0 )
{
  // Base properties
  contextProp.startNew = 2; // start new page
  contextProp.pageType = 2;
  contextProp.pageSet = '';
  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasBefore_Test3' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addBefore_Test3');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addBefore_Test3', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A02278648-1683-4eeb-842e-e499eb6b9ea5\"><_gte:Target lang=\"en\"><_ufe:SaveFoldoutPage></_ufe:SaveFoldoutPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText>" );
      stream.write( "</_app:Gentext>" );
    }

    currentNode.augmentBefore( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasBefore_Test3', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasAfter_Test3' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addAfter_Test3');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addAfter_Test3', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A412ad9eb-bae3-4aa9-9d02-9331d0771b5d\"><_gte:Target lang=\"en\"></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test3', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }


  if ( formatting.evaluateXPath( " boolean( number(ancestor::pmEntry[last()]/@startat) >= 1000 )", 130, template.primaryStream ) != 0 )
  {

    // Base properties
    contextProp.startNew = 2; // start new page
    contextProp.pageType = 2;
    contextProp.pageSet = '';

  }
}
else if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::graphic)>0 )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  contextProp.startNew = 2; // start new page
  contextProp.pageType = 0;

}
var attr = arguments[0].attributes;

// SOURCE EDIT: See if the graphic exists; if not use the filename of a large red "not found" graphic
var graphicFilename = attr['xlink:href'];
var graphicObj = template.content.functions._app.GetGraphic(graphicFilename);
if (!graphicObj) {
	graphicFilename = "graphic_not_found.png";
}


//graphic = {  filename : attr['xlink:href'], valign : 'baseline'};
graphic = {  filename : graphicFilename, valign : 'baseline'};


useGraphic = true;
if ( contextProp.preformatted ) {
  template.content.functions._app.setPreformatted( block );
}

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
template.content.functions._app.setWantColumnTopMargin( contextProp.wantColumnTopMargin, block );
fish[ 'isHidden' ] = contextProp.isHidden;
if ( contextProp.isHidden == 1 ) {
  currentNode.augmentReference( '_app:hidden', 1 );
  useGraphic = false;
  if ( ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ) {
    fish[ 'isHidden' ] = 0;
  } else {
    return;
  }
}

fish[ 'pageSet' ] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' ) {
  if ( contextProp.pageSet != '' ) {
    template.content.functions._app.startPageSet( block, contextProp, 0 );
  } else {
    template.content.functions._app.pageBreak( contextProp, 0 );
  }
} else if ( contextProp.startNew == '1' ) {
  template.content.functions._app.startNewColumn( block, contextProp );
}

if ( contextProp.isBlock == 1 ) {
  if ( block.numColumns > 1 ) {
    template.content.functions._app.configureColumns( block );
  }

  fish[ 'isBlock' ] = 1;
  template.content.functions._app.blockStart( block, false, false );
} else {
  fish[ 'isBlock' ] = 0;
  template.content.functions._app.inlineStart( style );
}

template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, contextProp.isBlock );
if ( useGraphic && currentNode.hasAugmentation ) {
  var tempNode = currentNode.augFirstChild;
  if ( tempNode != null && tempNode.nodeType == Node.ELEMENT_NODE && tempNode.getAttribute('type') == 'AddBefore' ) {
    var tmpname = 'graphics:xml:graphic' + application.calculateHash( tempNode.getNodePath( 1 )).toString( 16 );
    var tempStream = template.content.getStream(tmpname);
    if ( !tempStream ) {
       var primaryStream = template.content.getStream( template.primaryStream);
      tempStream = template.content.createStream(tmpname, primaryStream.type);
      tempStream.write('<?xml version="1.0"?><_app:Graphic xmlns:_app="http://www.arbortext.com/namespace/APP/APPFormattingElements" ');
      if (graphic.filename) tempStream.write('  filename="' + graphic.filename + '"' );
      if (graphic.width) tempStream.write('  width="' + graphic.width + '"' );
      if (graphic.height) tempStream.write('  height="' + graphic.height + '"' );
      if (graphic.entity) tempStream.write('  entity="' + graphic.entity + '"' );
      if (graphic.valign) tempStream.write('  valign="' + graphic.valign + '"' );
      if (graphic.vscale) tempStream.write('  vscale="' + graphic.vscale + '"' );
      if (graphic.hscale) tempStream.write('  hscale="' + graphic.hscale + '"' );
      if (graphic.scalefit) tempStream.write('  scalefit="' + graphic.scalefit + '"' );
      if (useGraphic) tempStream.write(' hidden="' + useGraphic + '"');
      tempStream.write('/>');
    }

    if ( tempStream.xmlDocument ) {
      tempNode.augmentAfter(tempStream.xmlDocument);
      useGraphic = false;
    }
  }
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: graphic

var fish = formatting.fish[ template.stylerFish ];
if ( formatting.fishGet( template.stylerFish, '_propset:Change_bar', 0) == 1 ) {
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Change_bar' ].onExit();
}

if ( formatting.fishGet( template.stylerFish, '_propset:Set_Graphic_Highlight_Info', 0) == 1 ) {
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_Graphic_Highlight_Info' ].onExit();
}
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Standard_space' ].onExit();
if ( fish[ 'isHidden' ] != 1 ) {
  template.content.functions._app.endPdfTag();
  if ( fish[ 'isBlock' ] == 1 ) {
    template.content.functions._app.blockEnd( "graphic_everywhere_else", false, false );
  } else {
    template.content.functions._app.inlineEnd();
  }

  if ( fish[ 'pageSet' ] != '' ) {
    template.content.functions._app.endPageSet();
  }
}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context
comment="Source edit to check for missing graphics and use large red replacement if so"
priority="0" selector="graphic">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A55f46225-968c-408f-98a5-dc125337a459"><_gte:Target lang="en"
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7c13b64a-7621-47d8-9d05-40dbfc299b92"><_gte:Target lang="en"
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="Add change bar also if parent figure has change attribute set."
conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/>
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="add"/>
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Graphic_Highlight_Info">
</BaseProperties>
</Condition>
<Condition
comment='The page set name is set by the parent figure: if you specify one here it will cause the title to print on the next page, so use "No change".'>
<Tests>
<AttributeTest attributeName="reproductionWidth" testType="equals"
testValue="355.6 mm"/></Tests>
<BaseProperties>
<Breaks newPageSet="#noChange" startNew="oddPage"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae8572a75-6f51-4405-8272-f620d5653803"><_gte:Target lang="en"
><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin><_ufe:SaveFoldoutPage
></_ufe:SaveFoldoutPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8ef6634d-bb46-461a-b445-b14dc13b6844"><_gte:Target lang="en"
><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="number(ancestor::pmEntry[last()]/@startat) >= 1000"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="#noChange" startNew="oddPage"/></BaseProperties>
</Condition>
</Condition>
<Condition
comment="If it's a multi-sheet figure, make sure there's a page break before the last graphic (otherwise a small one might go on the same page as the preceding sheet)."
conditionType="elseIf">
<Tests>
<XPathTest expression="count(preceding-sibling::graphic)>0"/></Tests>
<BaseProperties>
<Breaks startNew="page"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: graphic

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "graphic_everywhere_else";
var useGraphic = false;
var graphic = {};
contextProp.isBlock = 0;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.preformatted = false;
contextProp.pdfTag = 'Figure';
contextProp.pdfAttrs = {};
fish[ 'gentextResolved' ] = 1; // Signal to property sets not to overwrite context gentext

// Base properties
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Standard_space' ].onEnter( block, contextProp );
contextProp.isBlock = 1;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addBefore');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addBefore', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A55f46225-968c-408f-98a5-dc125337a459\"><_gte:Target lang=\"en\"><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin></_gte:Target></_gte:Translate>" );
    stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}

if ( currentNode.getUserString( '_temp_hasAfter_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addAfter');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addAfter', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A7c13b64a-7621-47d8-9d05-40dbfc299b92\"><_gte:Target lang=\"en\"><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate>" );
    stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentAfter( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasAfter_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


fish[ 'gentextResolved' ] = 0; // Allows conditions to overwrite gentext

if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify' or ../@changeType = 'add' or ../@changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  // Base properties
  fish[ '_propset:Set_Graphic_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_Graphic_Highlight_Info' ].onEnter( block, contextProp );

}

if ( formatting.evaluateXPath( "@reproductionWidth = '355.6 mm'", 130, template.primaryStream ) != 0 )
{
  // If it's the only graphic in the figure, don't need to start a new page, since the figure starts a the new foldout page already
  if ( formatting.evaluateXPath( "count(parent::figure/graphic)>1", 130, template.primaryStream ) != 0 ) {
    contextProp.startNew = 2; // start new page
    contextProp.pageType = 2;
    contextProp.pageSet = '';
  }

  contextProp.markerType = '';
  if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addBefore_Test2');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addBefore_Test2', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Ae8572a75-6f51-4405-8272-f620d5653803\"><_gte:Target lang=\"en\"><_ufe:CheckChangeBarBegin></_ufe:CheckChangeBarBegin><_ufe:SaveFoldoutPage></_ufe:SaveFoldoutPage>" );
      stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentBefore( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:graphic:graphic_everywhere_else:addAfter_Test2');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:graphic:graphic_everywhere_else:addAfter_Test2', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A8ef6634d-bb46-461a-b445-b14dc13b6844\"><_gte:Target lang=\"en\"><_ufe:CheckChangeBarEnd></_ufe:CheckChangeBarEnd></_gte:Target></_gte:Translate>" );
      stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }


  if ( formatting.evaluateXPath( " boolean( number(ancestor::pmEntry[last()]/@startat) >= 1000 )", 130, template.primaryStream ) != 0 )
  {

    // Base properties
    contextProp.startNew = 2; // start new page
    contextProp.pageType = 2;
    contextProp.pageSet = '';

  }
}
else if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::graphic)>0 )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  contextProp.startNew = 2; // start new page
  contextProp.pageType = 0;

}
var attr = arguments[0].attributes;

// SOURCE EDIT: See if the graphic exists; if not use the filename of a large red "not found" graphic
var graphicFilename = attr['xlink:href'];
var graphicObj = template.content.functions._app.GetGraphic(graphicFilename);
if (!graphicObj) {
	graphicFilename = "graphic_not_found.png";
}


//graphic = {  filename : attr['xlink:href'], valign : 'baseline'};
graphic = {  filename : graphicFilename, valign : 'baseline'};

useGraphic = true;
if ( contextProp.preformatted ) {
  template.content.functions._app.setPreformatted( block );
}

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
template.content.functions._app.setWantColumnTopMargin( contextProp.wantColumnTopMargin, block );
fish[ 'isHidden' ] = 0;
if ( contextProp.isHidden == 1 ) {
  currentNode.augmentReference( '_app:hidden', 1 );
  useGraphic = false;
}

fish[ 'pageSet' ] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' ) {
  if ( contextProp.pageSet != '' ) {
    template.content.functions._app.startPageSet( block, contextProp, 0 );
  } else {
    template.content.functions._app.pageBreak( contextProp, 0 );
  }
} else if ( contextProp.startNew == '1' ) {
  template.content.functions._app.startNewColumn( block, contextProp );
}

if ( contextProp.isBlock == 1 ) {
  if ( block.numColumns > 1 ) {
    template.content.functions._app.configureColumns( block );
  }

  fish[ 'isBlock' ] = 1;
  template.content.functions._app.blockStart( block, false, false );
} else {
  fish[ 'isBlock' ] = 0;
  template.content.functions._app.inlineStart( style );
}

template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, contextProp.isBlock );
if ( useGraphic && currentNode.hasAugmentation ) {
  var tempNode = currentNode.augFirstChild;
  if ( tempNode != null && tempNode.nodeType == Node.ELEMENT_NODE && tempNode.getAttribute('type') == 'AddBefore' ) {
    var tmpname = 'graphics:xml:graphic' + application.calculateHash( tempNode.getNodePath( 1 )).toString( 16 );
    var tempStream = template.content.getStream(tmpname);
    if ( !tempStream ) {
       var primaryStream = template.content.getStream( template.primaryStream);
      tempStream = template.content.createStream(tmpname, primaryStream.type);
      tempStream.write('<?xml version="1.0"?><_app:Graphic xmlns:_app="http://www.arbortext.com/namespace/APP/APPFormattingElements" ');
      if (graphic.filename) tempStream.write('  filename="' + graphic.filename + '"' );
      if (graphic.width) tempStream.write('  width="' + graphic.width + '"' );
      if (graphic.height) tempStream.write('  height="' + graphic.height + '"' );
      if (graphic.entity) tempStream.write('  entity="' + graphic.entity + '"' );
      if (graphic.valign) tempStream.write('  valign="' + graphic.valign + '"' );
      if (graphic.vscale) tempStream.write('  vscale="' + graphic.vscale + '"' );
      if (graphic.hscale) tempStream.write('  hscale="' + graphic.hscale + '"' );
      if (graphic.scalefit) tempStream.write('  scalefit="' + graphic.scalefit + '"' );
      if (useGraphic) tempStream.write(' hidden="' + useGraphic + '"');
      tempStream.write('/>');
    }

    if ( tempStream.xmlDocument ) {
      tempNode.augmentAfter(tempStream.xmlDocument);
      useGraphic = false;
    }
  }
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: graphic

var fish = formatting.fish[ template.stylerFish ];
if ( formatting.fishGet( template.stylerFish, '_propset:Set_Graphic_Highlight_Info', 0) == 1 ) {
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_Graphic_Highlight_Info' ].onExit();
}
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Standard_space' ].onExit();
template.content.functions._app.endPdfTag();
if ( fish[ 'isBlock' ] == 1 ) {
  template.content.functions._app.blockEnd( "graphic_everywhere_else", false, false );
} else {
  template.content.functions._app.inlineEnd();
}

if ( fish[ 'pageSet' ] != '' ) {
  template.content.functions._app.endPageSet();
}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="hazardousClass" style="unstyled">
<Context priority="0" selector="hazardousClass">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="hotspot" style="unstyled">
<Context priority="0" selector="hotspot">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="hoursToClose" style="unstyled">
<Context priority="0" selector="hoursToClose">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="hoursToOpen" style="unstyled">
<Context priority="0" selector="hoursToOpen">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="identAndStatusSection" style="hidden">
<Context priority="0" selector="identAndStatusSection">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="identExtension" style="unstyled">
<Context priority="0" selector="identExtension">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="identNumber" style="inline">
<Context priority="0" selector="identNumber">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="dc:identifier" style="unstyled">
<Context priority="0" selector="dc:identifier">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="illustratedPartsCatalog" style="block">
<Context priority="0" selector="illustratedPartsCatalog">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="ilsNumber" style="unstyled">
<Context priority="0" selector="ilsNumber">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="indexFlag" style="unstyled">
<Context priority="0" selector="indexFlag">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="infoName" style="inline">
<Context priority="0" selector="infoName">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="preceding-sibling::techName"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A0376a2c9-95bb-4193-9bd5-f1fb9df33543"><_gte:Target lang="en"
> — </_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="initialProvisioningProject" style="block">
<Context priority="0" selector="initialProvisioningProject">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="initialProvisioningProjectRef" style="unstyled">
<Context priority="0" selector="initialProvisioningProjectRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="inlineSignificantData" style="inline">
<Context priority="0" selector="inlineSignificantData">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="installationLocation" style="unstyled">
<Context priority="0" selector="installationLocation">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="integerValue" style="unstyled">
<Context priority="0" selector="integerValue">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="interchangeability" style="unstyled">
<Context priority="0" selector="interchangeability">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="internalLink" style="link">
<LinkDetails idrefAttrname="idref" uriAttrname="idref"/>
<Context
comment="Special element added to make links with the stylesheet (not a regular S1000D element)"
priority="0" selector="internalLink">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="internalRef" style="crossReference">
<Context priority="11.03" selector="_ufe:TableOfHighlights//internalRef">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3045ac57-45b4-49f8-9ebd-cec9e00003f9"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Number"/></_sfe:CrossReference></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="name(id(@internalRefId))='figure' and id(@internalRefId)/ancestor::illustratedPartsCatalog"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A701a738d-0410-4e92-9bc0-42418e01b13e"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Label_Number"/></_sfe:CrossReference></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="name(id(@internalRefId))='figure'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A92098587-7291-4597-8c78-9594aa497e05"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Label_Number"/></_sfe:CrossReference></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="6.03" selector="internalRef[@authorityName]">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af33a7d6c-e783-4e79-b90e-7748610f2e77"><_gte:Target lang="en"
><xlink:locator xlink:href="s000A" xlink:label="TEXT"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: internalRef[@authorityName]

formatting.fishSave( template.stylerFish );
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

// Base properties
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {

   // SOURCE EDIT: Make a new stream for each link and use the authorityName attribute for its text
   var streamName = 'stylesheet0:Element:internalRef:internalRefauthorityNameCFAC' + template.internalRefCtr++ + ':addBefore';

   var stream = template.content.getStream(streamName);
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( streamName, primaryStream.type );

    var text = formatting.evaluateXPath("@authorityName");
    var href = formatting.evaluateXPath("@internalRefId");

    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Af33a7d6c-e783-4e79-b90e-7748610f2e77\"><_gte:Target lang=\"en\"><xlink:locator xlink:href=\"" + href + "\" xlink:label=\"" + text +"\"/></_gte:Target></_gte:Translate>" );
    stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: internalRef[@authorityName]

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context comment="Link to a sheet number (graphic) within a figure."
priority="6.025" selector="internalRef[@internalRefTargetType='irtt09']">
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1c600dfb-ea13-405f-966f-f13521ebf3d0"><_gte:Target lang="en"
><_dtd:internalRef internalRefId="placeholder"></_dtd:internalRef
>, Sheet <_sfe:CrossReference><_gte:CrossReference
refAttr="internalRefId" xrefStyle="Label_Number"/></_sfe:CrossReference
><_gte:XPathString
expr="count(id(@internalRefId)/preceding-sibling::graphic)+1"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M110" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: internalRef[@internalRefTargetType='irtt09']

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

if ( currentNode.getUserString( '_temp_hasAfter_' ) != '1' )
{
   template.sheetXrefCtr++;
   var streamName = 'stylesheet0:Element:internalRef:internalRefinternalRefTargetTypeirtt09202C' + template.sheetXrefCtr + ':addAfter';

   var stream = template.content.getStream(streamName);
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( streamName, primaryStream.type );



      var xrefId = formatting.evaluateXPath("id(ancestor-or-self::internalRef/@internalRefId)/ancestor::figure/@id", 130, template.primaryStream, null);

      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A1c600dfb-ea13-405f-966f-f13521ebf3d0\"><_gte:Target lang=\"en\"><_gte:CrossReference refAttr=\"internalRefId\" xrefStyle=\"Label_Number\"/><internalRef internalRefId=\"" + xrefId + "\"></internalRef>, <_sfe:CrossReference>" );
      stream.write( "Sheet <_gte:XPathString expr=\"count(id(@internalRefId)/preceding-sibling::graphic)+1\"/></_sfe:CrossReference></_gte:Target></_gte:Translate>" );
      stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentAfter( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasAfter_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: internalRef[@internalRefTargetType='irtt09']

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context
comment="Special reference type used in the Consumables tables to pull the full name rather than the short name"
priority="6.0225"
selector="internalRef[@internalRefTargetType='irtt51']">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A584c18ce-e3f1-4012-93c5-4893900d2878"><_gte:Target lang="en"
><_ufe:SupplyNameTextInternalRef></_ufe:SupplyNameTextInternalRef
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context
comment="Special reference type used in the Special Tools, Fixtures, and Equipment tables to pull the full name rather than the short name"
priority="6.02125"
selector="internalRef[@internalRefTargetType='irtt52']">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8dc9fb42-5339-415d-b652-37285f4f94e0"><_gte:Target lang="en"
><_ufe:ToolNameTextInternalRef></_ufe:ToolNameTextInternalRef></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="6.0209375"
selector="internalRef[name(id(@internalRefId))='supplyDescr']">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A25c5241c-7791-4b01-8294-88a2f716fdda"><_gte:Target lang="en"
><_dtd:internalLink idref="placeholder"><_ufe:SupplyShortNameText
></_ufe:SupplyShortNameText></_dtd:internalLink></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: internalRef[@internalRefTargetType='irtt04']

formatting.fishSave( template.stylerFish );
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

// Base properties
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {

   template.sheetToolCtr++;
   var streamName = 'stylesheet0:Element:internalRef:internalRefinternalRefTargetTypeirtt041A87' + template.sheetToolCtr + ':addBefore';

   var stream = template.content.getStream(streamName);
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( streamName, primaryStream.type );

      var linkId = formatting.evaluateXPath("ancestor::pmEntry[1]/@consumableTableId", 130, template.primaryStream, null); //"DMC-d1e23120-t001"; 

      if (!linkId) {
        linkId = formatting.evaluateXPath("(ancestor::pmEntry[1]/preceding-sibling::pmEntry/@consumableTableId)[1]", 130, template.primaryStream, null);
      }

      if (!linkId) {
        linkId = formatting.evaluateXPath("ancestor::pmEntry[2]/@consumableTableId", 130, template.primaryStream, null);
      }
      if (!linkId) {
        linkId = formatting.evaluateXPath("ancestor::pmEntry[2]/descendant::pmEntry[@consumableTableId]/@consumableTableId", 130, template.primaryStream, null);
      }
      if (!linkId) {
        linkId = formatting.evaluateXPath("ancestor::pmEntry[3]/@consumableTableId", 130, template.primaryStream, null);
      }
      if (!linkId) {
        linkId = formatting.evaluateXPath("ancestor::pmEntry[3]/descendant::pmEntry[@consumableTableId]/@consumableTableId", 130, template.primaryStream, null);
      }


    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A25c5241c-7791-4b01-8294-88a2f716fdda\"><_gte:Target lang=\"en\"><internalLink idref=\"" + linkId + "\"><_ufe:SupplyShortNameText></_ufe:SupplyShortNameText>" );
    stream.write( "</internalLink></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: internalRef[@internalRefTargetType='irtt04']

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="6.020625"
selector="internalRef[name(id(@internalRefId))='supportEquipDescr']">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5036e5a0-53fd-4d66-b656-83e52dc4b7ab"><_gte:Target lang="en"
><_dtd:internalLink idref="placeholder"><_ufe:ToolShortNameText></_ufe:ToolShortNameText
></_dtd:internalLink></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: internalRef[@internalRefTargetType='irtt05']

formatting.fishSave( template.stylerFish );
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var style = new fStyle();

// Base properties
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
   template.sheetToolCtr++;
   var streamName = 'stylesheet0:Element:internalRef:internalRefinternalRefTargetTypeirtt051BA8' + template.sheetToolCtr + ':addBefore';

   var stream = template.content.getStream(streamName);
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( streamName, primaryStream.type );

      var linkId = formatting.evaluateXPath("ancestor::pmEntry[1]/@toolTableId", 130, template.primaryStream, null); //"DMC-d1e23120-t001"; 

      if (!linkId) {
        linkId = formatting.evaluateXPath("(ancestor::pmEntry[1]/preceding-sibling::pmEntry/@toolTableId)[1]", 130, template.primaryStream, null);
      }

      if (!linkId) {
        linkId = formatting.evaluateXPath("ancestor::pmEntry[2]/@toolTableId", 130, template.primaryStream, null);
      }
      if (!linkId) {
        linkId = formatting.evaluateXPath("ancestor::pmEntry[2]/descendant::pmEntry[@toolTableId]/@toolTableId", 130, template.primaryStream, null);
      }
      if (!linkId) {
        linkId = formatting.evaluateXPath("ancestor::pmEntry[3]/@toolTableId", 130, template.primaryStream, null);
      }
      if (!linkId) {
        linkId = formatting.evaluateXPath("ancestor::pmEntry[3]/descendant::pmEntry[@toolTableId]/@toolTableId", 130, template.primaryStream, null);
      }

    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A5036e5a0-53fd-4d66-b656-83e52dc4b7ab\"><_gte:Target lang=\"en\"><internalLink idref=\"" + linkId + "\"><_ufe:ToolShortNameText></_ufe:ToolShortNameText>" );
    stream.write( "</internalLink></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
fish[ 'isHidden' ] = 0;
template.content.functions._app.inlineStart( style );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: internalRef[@internalRefTargetType='irtt05']

template.content.functions._app.inlineEnd();
formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="6.02"
selector="internalRef[ancestor::_ufe:LegendKey]">
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A873fb609-8159-4cde-ad93-b5b982edf683"><_gte:Target lang="en"
current="no"><_sfe:CrossReference><_gte:CrossReference
refAttr="internalRefId" xrefStyle="Label_Number"/></_sfe:CrossReference
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="6.015"
selector="internalRef[name(id(@internalRefId))='proceduralStep']">
<BaseProperties>
<Highlight textUnderlineStyle="none"/>
<Keep keepScope="withinLine" together="3"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A7a6ce27e-d1b3-49a9-9c08-b9ae79dcdc2a"><_gte:Target lang="en"
current="no">Step <_sfe:CrossReference><_gte:CrossReference
refAttr="internalRefId" xrefStyle="Label_Number"/></_sfe:CrossReference
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="6.01"
selector="internalRef[name(id(@internalRefId))='para' and name(id(@internalRefId)/parent::*)='proceduralStep']">
<BaseProperties>
<Highlight textUnderlineStyle="none"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4787a604-34a0-442d-93bf-a42b3b8561e1"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Name"/></_sfe:CrossReference>[p<_sfe:CrossReference><_gte:CrossReference
refAttr="internalRefId" xrefStyle="Label_Number_Text"/></_sfe:CrossReference
>ar<_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Label_Number_Text"/></_sfe:CrossReference>a]<_gte:XPathString
expr="id(@internalRefId)/name"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="6.0075"
selector="internalRef[name(id(@internalRefId))='spareDescr']">
<BaseProperties>
<Highlight textUnderlineStyle="none"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae049dd10-6066-4155-a1a8-cfc98afb0e3d"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Text"/></_sfe:CrossReference><_gte:XPathString
expr="id(@internalRefId)/name"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="6.005"
selector="internalRef[name(id(@internalRefId))='supplyDescr_BAK']">
<BaseProperties>
<Highlight textUnderlineStyle="none"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad104613a-b7ab-4ec9-baaf-a57bd953486b"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Text"/></_sfe:CrossReference><_gte:XPathString
expr="id(@internalRefId)/name"/><_ufe:SupplyShortNameText></_ufe:SupplyShortNameText
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<OutputProperties output="printpdf">
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af932e76e-4122-48d5-8d19-0e2a3422fe1d"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Text"/></_sfe:CrossReference><_ufe:SupplyShortNameText
></_ufe:SupplyShortNameText></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</OutputProperties>
</Context>
<Context priority="6"
selector="internalRef[name(id(@internalRefId))='supportEquipDescr_BAK']">
<BaseProperties>
<Highlight textUnderlineStyle="none"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afc04fcd8-fedb-43f2-9297-c243247b5226"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Text"/></_sfe:CrossReference><_gte:XPathString
expr="id(@internalRefId)/name"/><_ufe:ToolShortNameText></_ufe:ToolShortNameText
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<OutputProperties output="printpdf">
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aaa4d7c73-3922-417f-a891-2b644be968c1"><_gte:Target lang="en"
><_sfe:CrossReference><_gte:CrossReference refAttr="internalRefId"
xrefStyle="Text"/></_sfe:CrossReference><_ufe:ToolShortNameText></_ufe:ToolShortNameText
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</OutputProperties>
</Context>
<Context priority="0" selector="internalRef">
<BaseProperties>
<Highlight textUnderlineStyle="none"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A99de1c25-71e8-42f3-a170-483740fd11e5"><_gte:Target lang="en"
current="no"><_sfe:CrossReference><_gte:CrossReference
refAttr="internalRefId" xrefStyle="Label_Number"/></_sfe:CrossReference
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="internet" style="unstyled">
<Context priority="0" selector="internet">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolateDetectedFault" style="block">
<Context priority="0" selector="isolateDetectedFault">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="isolatedFault" style="block">
<Context priority="0" selector="isolatedFault">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="isolatedFaultAlts" style="unstyled">
<Context priority="0" selector="isolatedFaultAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolationInfo" style="unstyled">
<Context priority="0" selector="isolationInfo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolationMainProcedure" style="unstyled">
<Context priority="0" selector="isolationMainProcedure">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolationProcedure" style="unstyled">
<Context priority="0" selector="isolationProcedure">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolationProcedureEnd" style="unstyled">
<Context priority="0" selector="isolationProcedureEnd">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolationProcedureEndAlts" style="unstyled">
<Context priority="0" selector="isolationProcedureEndAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolationStep" style="unstyled">
<Context priority="0" selector="isolationStep">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolationStepAlts" style="unstyled">
<Context priority="0" selector="isolationStepAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolationStepAnswer" style="unstyled">
<Context priority="0" selector="isolationStepAnswer">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="isolationStepQuestion" style="unstyled">
<Context priority="0" selector="isolationStepQuestion">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="issueDate" style="unstyled">
<Context priority="0" selector="issueDate">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="issueInfo" style="nostyle">
<Context priority="0" selector="issueInfo">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="itemDescr" style="unstyled">
<Context priority="0" selector="itemDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="itemIdentData" style="block">
<Context priority="0" selector="itemIdentData">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="itemSeqNumber" style="block">
<Context priority="6.01" selector="itemSeqNumber[@bak]">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9c9f567b-d91f-4f01-b4af-c558ffac9ee6"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup cols="6"
><?PubTbl tgroup cbmarg="7.00pt"?><_dtd:colspec colname="col1"
colwidth="0.6in"/><_dtd:colspec colname="col3" colwidth="1.30in"/><_dtd:colspec
colname="col4" colwidth="0.62in"/><_dtd:colspec colname="col5"
colwidth="3.09in"/><_dtd:colspec colname="col6" colwidth="0.60in"
/><_dtd:colspec colname="col7" colwidth="0.69in"/><_dtd:tbody><_dtd:row
><_dtd:entry colsep="0" align="right"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker
><_gte:AttributeContent attr="item" occur="ancestor"
elem="catalogSeqNumber"/><_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue
></_dtd:entry><_dtd:entry colsep="0"><_gte:AttributeContent
attr="partNumberValue" xpath="partRef"/></_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry colsep="0"><_ufe:IPD_DescriptionBlock
><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description
><_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText="." vshift="0.00pt"/></_ufe:IPD_DescriptionBlock><_ufe:IPD_MfrCodeText
></_ufe:IPD_MfrCodeText><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData
><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_SelectOrManufacture
></_ufe:IPD_SelectOrManufacture><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData
><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></_dtd:entry
><_dtd:entry align="center"><_gte:ElementContent include="contentOnly"
xpath="quantityPerNextHigherAssy"/></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_itemSeqNumber_Highlight_Info">
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment="When there is no Parts Repository, and there is an Attaching Parts heading"
priority="6.005"
selector="itemSeqNumber[count(attachingPartsStart)=1 and count(/pm/commonRepository/partRepository/partSpec)=0]">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9e0767f1-3676-40d0-980c-17ba064a33f4"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup cols="6"
><?PubTbl tgroup
cbmarg="7.00pt"?><_dtd:colspec colname="col1" colwidth="0.7in"/><_dtd:colspec
colname="col3" colwidth="1.20in"/><_dtd:colspec colname="col4"
colwidth="0.62in"/><_dtd:colspec colname="col5" colwidth="2.69in"
/><_dtd:colspec colname="col6" colwidth="0.56in"/><_dtd:colspec
colname="col7" colwidth="0.69in"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0" align="right"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker
><_gte:AttributeContent attr="item" occur="ancestor"
elem="catalogSeqNumber"/><_gte:XPathString
expr="substring(@itemSeqNumberValue, string-length(@itemSeqNumberValue))"
/></_dtd:entry><_dtd:entry colsep="0"><_gte:AttributeContent
attr="partNumberValue" xpath="partRef"/></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_MfrCodeText></_ufe:IPD_MfrCodeText></_dtd:entry
><_dtd:entry colsep="0"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture
></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description
><_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText="." vshift="0.00pt"/></_ufe:IPD_DescriptionBlock><_ufe:IPD_MfrCodeText
></_ufe:IPD_MfrCodeText><_ufe:IPD_OrderPN></_ufe:IPD_OrderPN><_ufe:IPD_OptionalPart
></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData
><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></_dtd:entry
><_dtd:entry><_gte:ElementContent include="contentOnly"
xpath="quantityPerNextHigherAssy"/></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: itemSeqNumber[1]

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.
if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  fish[ '_propset:Set_itemSeqNumber_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_itemSeqNumber_Highlight_Info' ].onEnter( block, contextProp );
}


contextProp.isBlock =  isBlock = 1;

// Some variables for conditionals below

var mfrCode = formatting.evaluateXPath("partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("partRef/@partNumberValue");

var descrForPart = formatting.evaluateXPath("partSegment/itemIdentData/descrForPart");

var isDeleted = formatting.evaluateXPath("@changeType='delete'");

var colspecs = "<colspec colname=\"col1\" colwidth=\"0.62in\"/><colspec colname=\"col3\" colwidth=\"1.46in\"/><colspec colname=\"col4\" colwidth=\"0.57in\"/><colspec colname=\"col5\" colwidth=\"2.89in\"/><colspec colname=\"col6\" colwidth=\"0.73in\"/><colspec colname=\"col7\" colwidth=\"0.69in\"/>";

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:itemSeqNumbercountattachingPartsStart1_a85A2:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:itemSeqNumbercountattachingPartsStart1_a85A2:addBefore', primaryStream.type );

      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );

      // Add newlines to the other cells to push the content down one line and allow the "Attaching Parts" heading to be above
      stream.write( "<tbody><row><entry colsep=\"0\"><_newline/><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>");
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_newline/><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_AttachingPartsStart></_ufe:IPD_AttachingPartsStart><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description></_ufe:IPD_DescriptionBlock><_ufe:IPD_ShortName/><_ufe:IPD_GenericPartDataDD/><_ufe:IPD_MfrCode/>" );
      stream.write( "<_ufe:IPD_OrderPN></_ufe:IPD_OrderPN><_ufe:IPD_OptionalPart></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData><_ufe:IPD_SelectOrManufacture></_ufe:IPD_SelectOrManufacture><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart>");
      stream.write("<_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_GenericPartDataRDBlock/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/></entry><entry colsep=\"0\"><_newline/><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_newline/><_gte:ElementContent include=\"contentOnly\" xpath=\"quantityPerNextHigherAssy\"/>" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}

fish['gentextResolved'] = 0;


// ********** Condition: when the description for part is "DELETED"

if (isDeleted == "1" || descrForPart == "DELETED")
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:itemSeqNumbercountattachingPartsStart1_a85A2:addBefore_Test2');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:itemSeqNumbercountattachingPartsStart1_a85A2:addBefore_Test2', primaryStream.type );


      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );

      // Add newlines to the other cells to push the content down one line and allow the "Attaching Parts" heading to be above
      stream.write( "<tbody><row><entry colsep=\"0\" align=\"right\"><_newline/><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>");
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_newline/><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_AttachingPartsStart></_ufe:IPD_AttachingPartsStart><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture>DELETED</_ufe:IPD_DescriptionBlock><_ufe:IPD_GenericPartDataForDelete/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/>" );
      stream.write( "</entry><entry colsep=\"0\"><_newline/><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_newline/>0" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }

      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
   }
}


// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: itemSeqNumber[1]

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context comment="When there is no Parts Repository" priority="6"
selector="itemSeqNumber[count(/pm/commonRepository/partRepository/partSpec)=0]">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ada1b2edb-a9e1-40fa-9ef6-30ef0771ccda"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup cols="6"
><?PubTbl tgroup
cbmarg="7.00pt"?><_dtd:colspec colname="col1" colwidth="0.7in"/><_dtd:colspec
colname="col3" colwidth="1.20in"/><_dtd:colspec colname="col4"
colwidth="0.62in"/><_dtd:colspec colname="col5" colwidth="2.69in"
/><_dtd:colspec colname="col6" colwidth="0.56in"/><_dtd:colspec
colname="col7" colwidth="0.69in"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0" align="right"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker
><_gte:AttributeContent attr="item" occur="ancestor"
elem="catalogSeqNumber"/><_gte:XPathString
expr="substring(@itemSeqNumberValue, string-length(@itemSeqNumberValue))"
/></_dtd:entry><_dtd:entry colsep="0"><_gte:AttributeContent
attr="partNumberValue" xpath="partRef"/></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_MfrCodeText></_ufe:IPD_MfrCodeText></_dtd:entry
><_dtd:entry colsep="0"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture
></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description
><_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText="." vshift="0.00pt"/></_ufe:IPD_DescriptionBlock><_ufe:IPD_MfrCodeText
></_ufe:IPD_MfrCodeText><_ufe:IPD_OrderPN></_ufe:IPD_OrderPN><_ufe:IPD_OptionalPart
></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData
><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></_dtd:entry
><_dtd:entry><_gte:ElementContent include="contentOnly"
xpath="quantityPerNextHigherAssy"/></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: itemSeqNumber[1]

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.
if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  fish[ '_propset:Set_itemSeqNumber_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_itemSeqNumber_Highlight_Info' ].onEnter( block, contextProp );
}


contextProp.isBlock =  isBlock = 1;

// Some variables for conditionals below

var mfrCode = formatting.evaluateXPath("partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("partRef/@partNumberValue");

var descrForPart = formatting.evaluateXPath("partSegment/itemIdentData/descrForPart");


var manufacturerCodeValue = mfrCode;

var pmIssuer = formatting.evaluateXPath("/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer");

var isDeleted = formatting.evaluateXPath("@changeType='delete'");

var colspecs = "<colspec colname=\"col1\" colwidth=\"0.62in\"/><colspec colname=\"col3\" colwidth=\"1.46in\"/><colspec colname=\"col4\" colwidth=\"0.57in\"/><colspec colname=\"col5\" colwidth=\"2.89in\"/><colspec colname=\"col6\" colwidth=\"0.73in\"/><colspec colname=\"col7\" colwidth=\"0.69in\"/>";

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore', primaryStream.type );

      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );
      stream.write( "<tbody><row><entry colsep=\"0\"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>");
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description></_ufe:IPD_DescriptionBlock><_ufe:IPD_ShortName/><_ufe:IPD_GenericPartDataDD/><_ufe:IPD_MfrCode></_ufe:IPD_MfrCode>" );
      stream.write( "<_ufe:IPD_OrderPN></_ufe:IPD_OrderPN><_ufe:IPD_OptionalPart></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData><_ufe:IPD_SelectOrManufacture></_ufe:IPD_SelectOrManufacture><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart>");
		 stream.write("<_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_GenericPartDataRDBlock/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/></entry><entry colsep=\"0\"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_gte:ElementContent include=\"contentOnly\" xpath=\"quantityPerNextHigherAssy\"/>" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}

fish['gentextResolved'] = 0;


// ********** Condition: when the description for part is "DELETED"

if (isDeleted == "1" || descrForPart == "DELETED")
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore_Test2');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore_Test2', primaryStream.type );

      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );

      stream.write( "<tbody><row><entry colsep=\"0\" align=\"right\"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>");
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture>DELETED</_ufe:IPD_DescriptionBlock><_ufe:IPD_GenericPartDataForDelete/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/>" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\">0" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }

      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
   }
}

// ********* Third condition: when cage code is the same as the pmIssuer

else if (manufacturerCodeValue == pmIssuer)
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test3' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore_Test3');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore_Test3', primaryStream.type );


      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );
      stream.write( "<tbody><row><entry colsep=\"0\" align=\"right\"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>");
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_AttachingPartsStart></_ufe:IPD_AttachingPartsStart><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description></_ufe:IPD_DescriptionBlock>" );
      stream.write( "<_ufe:IPD_ShortName/><_ufe:IPD_GenericPartDataDD/><_ufe:IPD_OrderPN></_ufe:IPD_OrderPN><_ufe:IPD_OptionalPart></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData><_ufe:IPD_SelectOrManufacture></_ufe:IPD_SelectOrManufacture><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart>");
      stream.write("<_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_GenericPartDataRDBlock/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/></entry><entry colsep=\"0\"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_gte:ElementContent include=\"contentOnly\" xpath=\"quantityPerNextHigherAssy\"/>" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }

      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test3', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test3' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test3', '1' );
   }
}


// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: itemSeqNumber[1]

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context
comment="Special case of the first itemSeqNumber when we need the Attaching Parts heading (signalled by attachingPartsStart added by the pre-processing scripts)"
priority="5"
selector="itemSeqNumber[count(attachingPartsStart)=1 and count(preceding-sibling::itemSeqNumber)=0]">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A20c781e6-b7ec-4b60-b93a-db5a58b548e4"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup cols="6"
><?PubTbl tgroup
cbmarg="7.00pt"?><_dtd:colspec colname="col1" colwidth="0.7in"/><_dtd:colspec
colname="col3" colwidth="1.20in"/><_dtd:colspec colname="col4"
colwidth="0.62in"/><_dtd:colspec colname="col5" colwidth="2.69in"
/><_dtd:colspec colname="col6" colwidth="0.56in"/><_dtd:colspec
colname="col7" colwidth="0.69in"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0" align="right"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker
><_gte:AttributeContent attr="item" occur="ancestor"
elem="catalogSeqNumber"/><_gte:XPathString
expr="substring(@itemSeqNumberValue, string-length(@itemSeqNumberValue))"
/></_dtd:entry><_dtd:entry colsep="0"><_gte:AttributeContent
attr="partNumberValue" xpath="partRef"/></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_MfrCodeText></_ufe:IPD_MfrCodeText></_dtd:entry
><_dtd:entry colsep="0"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture
></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description
><_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText="." vshift="0.00pt"/></_ufe:IPD_DescriptionBlock><_ufe:IPD_MfrCodeText
></_ufe:IPD_MfrCodeText><_ufe:IPD_OrderPN></_ufe:IPD_OrderPN><_ufe:IPD_OptionalPart
></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData
><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></_dtd:entry
><_dtd:entry><_gte:ElementContent include="contentOnly"
xpath="quantityPerNextHigherAssy"/></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/commonRepository/partRepository/partSpec/itemIdentData/customerStockNumber[@placeholder]"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae6eb7491-09ad-4e05-9d8c-6053a14813c6"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup cols="6"
><?PubTbl tgroup cbmarg="7.00pt"?><_dtd:colspec colname="col1"
colwidth="1.66in"/><_dtd:colspec colname="col3" colwidth="1.20in"
/><_dtd:colspec colname="col4" colwidth="0.62in"/><_dtd:colspec
colname="col5" colwidth="2.69in"/><_dtd:colspec colname="col6"
colwidth="0.56in"/><_dtd:colspec colname="col7" colwidth="0.69in"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0" align="right"><_ufe:NotIllustratedMarker
></_ufe:NotIllustratedMarker><_gte:AttributeContent attr="item"
occur="ancestor" elem="catalogSeqNumber"/><_ufe:IPD_ItemSeqNumberValue
></_ufe:IPD_ItemSeqNumberValue></_dtd:entry><_dtd:entry colsep="0"
><_ufe:IPD_StockNumText></_ufe:IPD_StockNumText></_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry colsep="0"><_ufe:IPD_Indenture
></_ufe:IPD_Indenture><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_gte:AttributeContent
attr="manufacturerCodeValue"
xpath="/pm/commonRepository/partRepository/partSpec/procurementData/enterpriseRef[1]"
/><_ufe:IPD_SCDNumber></_ufe:IPD_SCDNumber></_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry><_gte:ElementContent
include="contentOnly" xpath="quantityPerNextHigherAssy"/></_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: itemSeqNumber[1]

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.
if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  fish[ '_propset:Set_itemSeqNumber_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_itemSeqNumber_Highlight_Info' ].onEnter( block, contextProp );
}


contextProp.isBlock =  isBlock = 1;

// Some variables for conditionals below

var mfrCode = formatting.evaluateXPath("partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("partRef/@partNumberValue");

var descrForPart = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/descrForPart");


var manufacturerCodeValue = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/procurementData/enterpriseRef/@manufacturerCodeValue");

var pmIssuer = formatting.evaluateXPath("/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer");

var isDeleted = formatting.evaluateXPath("@changeType='delete'");

var colspecs = "<colspec colname=\"col1\" colwidth=\"0.62in\"/><colspec colname=\"col3\" colwidth=\"1.46in\"/><colspec colname=\"col4\" colwidth=\"0.57in\"/><colspec colname=\"col5\" colwidth=\"2.89in\"/><colspec colname=\"col6\" colwidth=\"0.73in\"/><colspec colname=\"col7\" colwidth=\"0.69in\"/>";

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:itemSeqNumberattachingPartsStart_and_couA889:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:itemSeqNumberattachingPartsStart_and_couA889:addBefore', primaryStream.type );

      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );

      // Add newlines to the other cells to push the content down one line and allow the "Attaching Parts" heading to be above
      stream.write( "<tbody><row><entry colsep=\"0\"><_newline/><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>");
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_newline/><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_AttachingPartsStart></_ufe:IPD_AttachingPartsStart><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description></_ufe:IPD_DescriptionBlock><_ufe:IPD_ShortName/><_ufe:IPD_GenericPartDataDD/><_ufe:IPD_MfrCode/>" );
      stream.write( "<_ufe:IPD_OrderPN></_ufe:IPD_OrderPN><_ufe:IPD_OptionalPart></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData><_ufe:IPD_SelectOrManufacture></_ufe:IPD_SelectOrManufacture><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart>");
      stream.write("<_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_GenericPartDataRDBlock/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/></entry><entry colsep=\"0\"><_newline/><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_newline/><_gte:ElementContent include=\"contentOnly\" xpath=\"quantityPerNextHigherAssy\"/>" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}

fish['gentextResolved'] = 0;


// ******** First exception: when there is a Customer Stock Number:

//if ( formatting.evaluateXPath( " boolean( /pm/commonRepository/partRepository/partSpec/itemIdentData/customerStockNumber[@placeholder] )", 130, template.primaryStream, null ) != 0 )
if ( formatting.evaluateXPath( " boolean( /pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/customerStockNumber )", 130, template.primaryStream, null ) != 0 )
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:itemSeqNumbercountattachingPartsStart1_a8822:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:itemSeqNumbercountattachingPartsStart1_a8822:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A13d10ff4-f76b-4a03-a06e-ec4f038fd930\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
         stream.write( colspecs );

         // Add newlines to the other cells to push the content down one line and allow the "Attaching Parts" heading to be above
         stream.write( "<tbody><row><entry colsep=\"0\" align=\"right\"><_newline/><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>" );
         stream.write( "<_gte:XPathString expr=\"substring(@itemSeqNumberValue, string-length(@itemSeqNumberValue))\"/><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_newline/><_ufe:IPD_StockNumText></_ufe:IPD_StockNumText></entry><entry colsep=\"0\">" );
         stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_AttachingPartsStart/><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description></_ufe:IPD_DescriptionBlock><_ufe:IPD_ShortName/><_ufe:IPD_GenericPartDataDD/><_ufe:IPD_MfrCode/><_ufe:IPD_OptionalPart></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData><_ufe:IPD_SelectOrManufacture></_ufe:IPD_SelectOrManufacture><_ufe:IPD_SCDNumber></_ufe:IPD_SCDNumber><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_GenericPartDataRDBlock/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/></entry><entry colsep=\"0\"><_newline/><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_newline/><_gte:ElementContent include=\"contentOnly\" xpath=\"quantityPerNextHigherAssy\"/></entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target>" );
         stream.write( "</_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
   }
}

// ********** Second condition: when the description for part is "DELETED"

if (isDeleted == "1" || descrForPart == "DELETED")
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:itemSeqNumbercountattachingPartsStart1_a8822:addBefore_Test2');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:itemSeqNumbercountattachingPartsStart1_a8822:addBefore_Test2', primaryStream.type );


      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );

      // Add newlines to the other cells to push the content down one line and allow the "Attaching Parts" heading to be above
      stream.write( "<tbody><row><entry colsep=\"0\" align=\"right\"><_newline/><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>");
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_newline/><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_AttachingPartsStart/><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture>DELETED</_ufe:IPD_DescriptionBlock><_ufe:IPD_GenericPartDataForDelete/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/>" );
      stream.write( "</entry><entry colsep=\"0\"><_newline/><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_newline/>0" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }

      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
   }
}


// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: itemSeqNumber[1]

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="4" selector="itemSeqNumber[1]">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup cols="6"
><?PubTbl tgroup
cbmarg="7.00pt"?><_dtd:colspec colname="col1" colwidth="0.7in"/><_dtd:colspec
colname="col3" colwidth="1.20in"/><_dtd:colspec colname="col4"
colwidth="0.62in"/><_dtd:colspec colname="col5" colwidth="2.69in"
/><_dtd:colspec colname="col6" colwidth="0.56in"/><_dtd:colspec
colname="col7" colwidth="0.69in"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0" align="right"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker
><_gte:AttributeContent attr="item" occur="ancestor"
elem="catalogSeqNumber"/><_gte:XPathString
expr="substring(@itemSeqNumberValue, string-length(@itemSeqNumberValue))"
/></_dtd:entry><_dtd:entry colsep="0"><_gte:AttributeContent
attr="partNumberValue" xpath="partRef"/></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_MfrCodeText></_ufe:IPD_MfrCodeText></_dtd:entry
><_dtd:entry colsep="0"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture
></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description
><_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText="." vshift="0.00pt"/></_ufe:IPD_DescriptionBlock><_ufe:IPD_MfrCodeText
></_ufe:IPD_MfrCodeText><_ufe:IPD_OrderPN></_ufe:IPD_OrderPN><_ufe:IPD_OptionalPart
></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData
><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></_dtd:entry
><_dtd:entry><_gte:ElementContent include="contentOnly"
xpath="quantityPerNextHigherAssy"/></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="/pm/commonRepository/partRepository/partSpec/itemIdentData/customerStockNumber[@placeholder]"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A13d10ff4-f76b-4a03-a06e-ec4f038fd930"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup cols="6"
><?PubTbl tgroup cbmarg="7.00pt"?><_dtd:colspec colname="col1"
colwidth="1.66in"/><_dtd:colspec colname="col3" colwidth="1.20in"
/><_dtd:colspec colname="col4" colwidth="0.62in"/><_dtd:colspec
colname="col5" colwidth="2.69in"/><_dtd:colspec colname="col6"
colwidth="0.56in"/><_dtd:colspec colname="col7" colwidth="0.69in"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0" align="right"><_ufe:NotIllustratedMarker
></_ufe:NotIllustratedMarker><_gte:AttributeContent attr="item"
occur="ancestor" elem="catalogSeqNumber"/><_ufe:IPD_ItemSeqNumberValue
></_ufe:IPD_ItemSeqNumberValue></_dtd:entry><_dtd:entry colsep="0"
><_ufe:IPD_StockNumText></_ufe:IPD_StockNumText></_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry colsep="0"><_ufe:IPD_Indenture
></_ufe:IPD_Indenture><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_gte:AttributeContent
attr="manufacturerCodeValue"
xpath="/pm/commonRepository/partRepository/partSpec/procurementData/enterpriseRef[1]"
/><_ufe:IPD_SCDNumber></_ufe:IPD_SCDNumber></_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry><_gte:ElementContent
include="contentOnly" xpath="quantityPerNextHigherAssy"/></_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: itemSeqNumber[1]

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;

// Some variables for conditionals below

var mfrCode = formatting.evaluateXPath("partRef/@manufacturerCodeValue");
var partNo = formatting.evaluateXPath("partRef/@partNumberValue");

var descrForPart = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/descrForPart");

var isDeleted = formatting.evaluateXPath("@changeType='delete'");

var manufacturerCodeValue = formatting.evaluateXPath("/pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/procurementData/enterpriseRef/@manufacturerCodeValue");

var pmIssuer = formatting.evaluateXPath("/pm/identAndStatusSection/pmAddress/pmIdent/pmCode/@pmIssuer");


if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  fish[ '_propset:Set_itemSeqNumber_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_itemSeqNumber_Highlight_Info' ].onEnter( block, contextProp );
}

var colspecs = "<colspec colname=\"col1\" colwidth=\"0.62in\"/><colspec colname=\"col3\" colwidth=\"1.46in\"/><colspec colname=\"col4\" colwidth=\"0.57in\"/><colspec colname=\"col5\" colwidth=\"2.89in\"/><colspec colname=\"col6\" colwidth=\"0.73in\"/><colspec colname=\"col7\" colwidth=\"0.69in\"/>";

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore', primaryStream.type );

      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );
      stream.write( "<tbody><row><entry colsep=\"0\"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>");
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description></_ufe:IPD_DescriptionBlock><_ufe:IPD_ShortName/><_ufe:IPD_GenericPartDataDD/><_ufe:IPD_MfrCode/>" );
      stream.write( "<_ufe:IPD_OrderPN></_ufe:IPD_OrderPN><_ufe:IPD_OptionalPart></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData><_ufe:IPD_SelectOrManufacture/><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart>");
      stream.write("<_ufe:IPD_ReferTo/><_ufe:IPD_GenericPartDataRDBlock/><_ufe:IPD_AttachingPartsEnd/><_ufe:CheckIPDChangeBarEnd/></entry><entry colsep=\"0\"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_gte:ElementContent include=\"contentOnly\" xpath=\"quantityPerNextHigherAssy\"/>" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}

fish['gentextResolved'] = 0;


// ******** First exception: when there is a Customer Stock Number:

//if ( formatting.evaluateXPath( " boolean( /pm/commonRepository/partRepository/partSpec/itemIdentData/customerStockNumber[@placeholder] )", 130, template.primaryStream, null ) != 0 )
if ( formatting.evaluateXPath( " boolean( /pm/commonRepository/partRepository/partSpec[partIdent/@manufacturerCodeValue='" + mfrCode + "'][partIdent/@partNumberValue= '" + partNo + "' ]/itemIdentData/customerStockNumber )", 130, template.primaryStream, null ) != 0 )
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A13d10ff4-f76b-4a03-a06e-ec4f038fd930\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
         stream.write( colspecs );

         stream.write( "<tbody><row><entry colsep=\"0\" align=\"right\"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>" );
         stream.write( "<_gte:XPathString expr=\"substring(@itemSeqNumberValue, string-length(@itemSeqNumberValue))\"/><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_ufe:IPD_StockNumText></_ufe:IPD_StockNumText></entry><entry colsep=\"0\">" );
         stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description></_ufe:IPD_DescriptionBlock><_ufe:IPD_ShortName/><_ufe:IPD_GenericPartDataDD/><_ufe:IPD_MfrCode/><_ufe:IPD_OptionalPart></_ufe:IPD_OptionalPart><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData><_ufe:IPD_SelectOrManufacture></_ufe:IPD_SelectOrManufacture><_ufe:IPD_SCDNumber></_ufe:IPD_SCDNumber><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_GenericPartDataRDBlock/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/></entry><entry colsep=\"0\"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_gte:ElementContent include=\"contentOnly\" xpath=\"quantityPerNextHigherAssy\"/></entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target>" );
         stream.write( "</_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
   }
}

// ********** Second condition: when the description for part is "DELETED"

if (isDeleted == "1" || descrForPart == "DELETED")
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore_Test2');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:first_itemSeqNumber:addBefore_Test2', primaryStream.type );


      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A2a2ebb73-a4a1-4fa9-9eed-7f15db9d7fab\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );
      stream.write( "<tbody><row><entry colsep=\"0\" align=\"right\"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>");
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture>DELETED</_ufe:IPD_DescriptionBlock><_ufe:IPD_GenericPartDataForDelete/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/>" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\">0" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }

      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
   }
}


// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: itemSeqNumber[1]

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context
comment="Special case when we need the Attaching Parts heading (signalled by attachingPartsStart added by the pre-processing scripts)"
priority="2" selector="itemSeqNumber[count(attachingPartsStart)>0]">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A88e16fe4-cf25-42d5-bb6a-7fa08bd5daca"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup cols="6"
><?PubTbl tgroup cbmarg="7.00pt"?><_dtd:colspec colname="col1"
colwidth="0.6in"/><_dtd:colspec colname="col3" colwidth="1.30in"/><_dtd:colspec
colname="col4" colwidth="0.62in"/><_dtd:colspec colname="col5"
colwidth="3.09in"/><_dtd:colspec colname="col6" colwidth="0.60in"
/><_dtd:colspec colname="col7" colwidth="0.69in"/><_dtd:tbody><_dtd:row
><_dtd:entry colsep="0" align="right"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker
><_gte:AttributeContent attr="item" occur="ancestor"
elem="catalogSeqNumber"/><_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue
></_dtd:entry><_dtd:entry colsep="0"><_gte:AttributeContent
attr="partNumberValue" xpath="partRef"/></_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry colsep="0"><_ufe:IPD_DescriptionBlock
><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description
><_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText="." vshift="0.00pt"/></_ufe:IPD_DescriptionBlock><_ufe:IPD_MfrCodeText
></_ufe:IPD_MfrCodeText><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData
><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_SelectOrManufacture
></_ufe:IPD_SelectOrManufacture><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData
><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></_dtd:entry
><_dtd:entry align="center"><_gte:ElementContent include="contentOnly"
xpath="quantityPerNextHigherAssy"/></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: itemSeqNumber

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  fish[ '_propset:Set_itemSeqNumber_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_itemSeqNumber_Highlight_Info' ].onEnter( block, contextProp );
}

var colspecs = "<colspec colname=\"col1\" colwidth=\"0.62in\"/><colspec colname=\"col3\" colwidth=\"1.46in\"/><colspec colname=\"col4\" colwidth=\"0.57in\"/><colspec colname=\"col5\" colwidth=\"2.89in\"/><colspec colname=\"col6\" colwidth=\"0.73in\"/><colspec colname=\"col7\" colwidth=\"0.69in\"/>";

contextProp.isBlock =  isBlock = 1;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:itemSeqNumber_attachingPartsStart:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:itemSeqNumber_attachingPartsStart:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A4a521dc1-d9d1-444d-bf53-4b5e389bb195\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );

      stream.write( colspecs );
     
      // Add newlines to the other cells to push the content down one line and allow the "Attaching Parts" heading to be above
      stream.write("<tbody><row><entry colsep=\"0\"><_newline/><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>" );
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_newline/><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_AttachingPartsStart/><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture>" );
      stream.write( "<_ufe:IPD_Description></_ufe:IPD_Description></_ufe:IPD_DescriptionBlock><_ufe:IPD_ShortName/><_ufe:IPD_GenericPartDataDD/><_ufe:IPD_MfrCode/><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData><_ufe:IPD_SelectOrManufacture></_ufe:IPD_SelectOrManufacture><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData><_ufe:IPD_AlternatePart><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo></_ufe:IPD_AlternatePart><_ufe:IPD_GenericPartDataRDBlock/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/></entry><entry colsep=\"0\"><_newline/><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_newline/><_gte:ElementContent include=\"contentOnly\" xpath=\"quantityPerNextHigherAssy\"/>" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: itemSeqNumber

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="0" selector="itemSeqNumber">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4a521dc1-d9d1-444d-bf53-4b5e389bb195"><_gte:Target lang="en"
><_ufe:IPD_TableRow><_dtd:table frame="none"><_dtd:tgroup cols="6"
><?PubTbl tgroup cbmarg="7.00pt"?><_dtd:colspec colname="col1"
colwidth="0.6in"/><_dtd:colspec colname="col3" colwidth="1.30in"/><_dtd:colspec
colname="col4" colwidth="0.62in"/><_dtd:colspec colname="col5"
colwidth="3.09in"/><_dtd:colspec colname="col6" colwidth="0.60in"
/><_dtd:colspec colname="col7" colwidth="0.69in"/><_dtd:tbody><_dtd:row
><_dtd:entry colsep="0" align="right"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker
><_gte:AttributeContent attr="item" occur="ancestor"
elem="catalogSeqNumber"/><_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue
></_dtd:entry><_dtd:entry colsep="0"><_gte:AttributeContent
attr="partNumberValue" xpath="partRef"/></_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry colsep="0"><_ufe:IPD_DescriptionBlock
><_ufe:IPD_Indenture></_ufe:IPD_Indenture><_ufe:IPD_Description></_ufe:IPD_Description
><_gte:Leaders leaderType="text" lenType="fit" minLen="0.00pt"
leaderText="." vshift="0.00pt"/></_ufe:IPD_DescriptionBlock><_ufe:IPD_MfrCodeText
></_ufe:IPD_MfrCodeText><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData
><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_SelectOrManufacture
></_ufe:IPD_SelectOrManufacture><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData
><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart></_dtd:entry><_dtd:entry
colsep="0"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></_dtd:entry
><_dtd:entry align="center"><_gte:ElementContent include="contentOnly"
xpath="quantityPerNextHigherAssy"/></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: itemSeqNumber

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  fish[ '_propset:Set_itemSeqNumber_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_itemSeqNumber_Highlight_Info' ].onEnter( block, contextProp );
}

var colspecs = "<colspec colname=\"col1\" colwidth=\"0.62in\"/><colspec colname=\"col3\" colwidth=\"1.46in\"/><colspec colname=\"col4\" colwidth=\"0.57in\"/><colspec colname=\"col5\" colwidth=\"2.89in\"/><colspec colname=\"col6\" colwidth=\"0.73in\"/><colspec colname=\"col7\" colwidth=\"0.69in\"/>";

contextProp.isBlock =  isBlock = 1;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:itemSeqNumber:itemSeqNumber_everywhere_else:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:itemSeqNumber:itemSeqNumber_everywhere_else:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A4a521dc1-d9d1-444d-bf53-4b5e389bb195\"><_gte:Target lang=\"en\"><_ufe:IPD_TableRow><table frame=\"none\"><tgroup cols=\"6\"><?PubTbl tgroup cbmarg=\"7.00pt\" clmarg=\"3.00pt\" crmarg=\"2.00pt\"?>" );
      stream.write( colspecs );
     
      stream.write("<tbody><row><entry colsep=\"0\"><_ufe:NotIllustratedMarker></_ufe:NotIllustratedMarker><_gte:AttributeContent attr=\"trimmedItem\" xpath=\"ancestor::catalogSeqNumber[1]\"/>" );
      stream.write( "<_ufe:IPD_ItemSeqNumberValue></_ufe:IPD_ItemSeqNumberValue><_gte:Leaders specLen=\"5.00pt\" lenType=\"specified\" leaderType=\"space\"/></entry><entry colsep=\"0\"><_gte:AttributeContent attr=\"partNumberValue\" xpath=\"partRef\"/></entry><entry colsep=\"0\">" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:IPD_DescriptionBlock><_ufe:IPD_Indenture></_ufe:IPD_Indenture>" );
      stream.write( "<_ufe:IPD_Description></_ufe:IPD_Description></_ufe:IPD_DescriptionBlock><_ufe:IPD_ShortName/><_ufe:IPD_GenericPartDataDD/><_ufe:IPD_MfrCode/><_ufe:IPD_ChangeAuthorityData></_ufe:IPD_ChangeAuthorityData><_ufe:IPD_SelectOrManufacture></_ufe:IPD_SelectOrManufacture><_ufe:IPD_GenericPartData></_ufe:IPD_GenericPartData><_ufe:IPD_AlternatePart></_ufe:IPD_AlternatePart><_ufe:IPD_ReferTo></_ufe:IPD_ReferTo><_ufe:IPD_GenericPartDataRDBlock/><_ufe:IPD_AttachingPartsEnd></_ufe:IPD_AttachingPartsEnd><_ufe:CheckIPDChangeBarEnd/></entry><entry colsep=\"0\"><_ufe:IPD_Effectivity></_ufe:IPD_Effectivity></entry><entry align=\"center\"><_gte:ElementContent include=\"contentOnly\" xpath=\"quantityPerNextHigherAssy\"/>" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:IPD_TableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: itemSeqNumber

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="jobTitle" style="unstyled">
<Context priority="0" selector="jobTitle">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="language" style="nostyle">
<Context priority="0" selector="language">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="dc:language" style="unstyled">
<Context priority="0" selector="dc:language">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="lastName" style="unstyled">
<Context priority="0" selector="lastName">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="legend" style="hidden">
<Context
comment="Source edit to output a special legend table in two logical (not table) columns
UPDATE: Since figures are supposed to appear on their own page, add a page break before."
priority="0" selector="legend">
<BaseProperties>
<Hidden hidden="yes"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4231f314-9bbb-4224-b2f2-564977e4592c"><_gte:Target lang="en"
><_ufe:LegendWrapper><_ufe:LegendKey>Key to <_dtd:internalRef
internalRefId="DMC-d1e584-f0001"></_dtd:internalRef></_ufe:LegendKey
><_dtd:table frame="bottom"><_dtd:tgroup cols="6"><_dtd:colspec
colname="col1" colwidth="0.60in" colsep="0"/><_dtd:colspec
colname="COLSPEC2" colwidth="0.10in"/><_dtd:colspec colname="COLSPEC1"
colwidth="2.65*"/><_dtd:colspec colname="COLSPEC0" colwidth="0.60in"
/><_dtd:colspec colname="COLSPEC3" colwidth="0.10in"/><_dtd:colspec
colname="col2" colwidth="2.65*"/><_dtd:tbody><_dtd:row rowsep="0"
><_dtd:entry align="right">10.</_dtd:entry><_dtd:entry colsep="0"
align="right"></_dtd:entry><_dtd:entry colsep="0">BOLT</_dtd:entry
><_dtd:entry colsep="0" align="right">175.</_dtd:entry><_dtd:entry
colsep="0"></_dtd:entry><_dtd:entry>RIGHT AGB SUMP DEBRIS MONITOR
PLUG</_dtd:entry></_dtd:row><_dtd:row><_dtd:entry align="right">20.</_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry colsep="0">N2 SPEED
SENSOR</_dtd:entry><_dtd:entry colsep="0" align="right">180.</_dtd:entry
><_dtd:entry colsep="0"></_dtd:entry><_dtd:entry>PACKING</_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:LegendWrapper
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M110" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: legend

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 1;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isHidden = 1;

if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   // SOURCE EDIT: Make a new stream name for each legend (each one is different of course):
   template.legendCtr++;

   var streamName = 'stylesheet0:Element:legend:legend_everywhere' + template.legendCtr + ':addBefore';
   var stream = template.content.getStream(streamName); //'stylesheet0:Element:legend:legend_everywhere:addBefore');
   // Also get the figure ID to xref to:
   var figureId = formatting.evaluateXPath("parent::figure/@id");

   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( streamName, primaryStream.type );

      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A8b2b82e5-655e-4525-afb1-2ccbf73d3e8a\"><_gte:Target lang=\"en\"><_ufe:LegendWrapper><_ufe:LegendKey>Key to <internalRef internalRefId=\"" + figureId + "\"></internalRef></_ufe:LegendKey>" ); // hard-coded ID: DMC-d1e584-f0001
      stream.write( "<table frame=\"bottom\"><tgroup cols=\"6\"><?PubTbl tgroup rth=\"0.5pt\"?><colspec colname=\"col1\" colwidth=\"0.60in\" colsep=\"0\"/><colspec colname=\"COLSPEC2\" colwidth=\"0.10in\"/><colspec colname=\"COLSPEC1\" colwidth=\"2.65*\"/><colspec colname=\"COLSPEC0\" colwidth=\"0.60in\"/>" );
      stream.write( "<colspec colname=\"COLSPEC3\" colwidth=\"0.10in\"/><colspec colname=\"col2\" colwidth=\"2.65*\"/><tbody>");

      // SOURCE EDIT: Generate the legend table. Each row will look like this (#, space, name, #, space, name):
      //<row rowsep=\"0\"><entry align=\"right\">10.</entry><entry colsep=\"0\" align=\"right\"></entry><entry colsep=\"0\">BOLT</entry><entry colsep=\"0\" align=\"right\">175.</entry><entry colsep=\"0\"></entry><entry>RIGHT AGB SUMP DEBRIS MONITOR PLUG</entry></row>");

      // We need to divide the number of definitionListItems by two to see how many rows we need (round up).
      var numDefs = formatting.evaluateXPath("count(definitionList/definitionListItem)");
      var numRows = Math.ceil(numDefs / 2);

      // Debugging info row:
      //stream.write("<row rowsep=\"0\"><entry align=\"right\">" + numDefs + "</entry><entry colsep=\"0\" align=\"right\"></entry><entry colsep=\"0\">" + figureId + "</entry><entry colsep=\"0\" align=\"right\">" + numRows + "</entry><entry colsep=\"0\"></entry><entry>" + template.legendCtr + "</entry></row>");

      for (var i = 0; i < numRows; i++) {
        var itemNum1 = i + 1;
        var itemNum2 = numRows + i + 1;
        var term1 = formatting.evaluateXPath("definitionList/definitionListItem[" + itemNum1 + "]/listItemTerm");
        var term2 = formatting.evaluateXPath("definitionList/definitionListItem[" + itemNum2 + "]/listItemTerm");

        // The definition can have para, and other embedded markup, so need to add its content too.
        //var def1 = formatting.evaluateXPath("definitionList/definitionListItem[" + itemNum1 + "]/listItemDefinition");
        //var def2 = formatting.evaluateXPath("definitionList/definitionListItem[" + itemNum2 + "]/listItemDefinition");
        var xpathDef1 = "definitionList/definitionListItem[" + itemNum1 + "]/listItemDefinition";
        var xpathDef2 = "definitionList/definitionListItem[" + itemNum2 + "]/listItemDefinition";

        // Same with terms: particularly subscript and superscript
        var xpathTerm1 = "definitionList/definitionListItem[" + itemNum1 + "]/listItemTerm";
        var xpathTerm2 = "definitionList/definitionListItem[" + itemNum2 + "]/listItemTerm";

        stream.write("<row rowsep=\"0\"><entry align=\"right\"><_gte:ElementContent include=\"contentOnly\" xpath=\""
          + xpathTerm1 + "\"/>.</entry><entry colsep=\"0\" align=\"right\"></entry>"
          + "<entry colsep=\"0\"><_gte:ElementContent include=\"contentOnly\" xpath=\"" + xpathDef1 + "\"/></entry>");

        if (term2 != "") {
          stream.write("<entry colsep=\"0\" align=\"right\"><_gte:ElementContent include=\"contentOnly\" xpath=\""
            + xpathTerm2 + "\"/>.</entry><entry colsep=\"0\"></entry>"
            + "<entry><_gte:ElementContent include=\"contentOnly\" xpath=\"" + xpathDef2 + "\"/></entry></row>");
        }
        else {
          stream.write("<entry colsep=\"0\" align=\"right\"></entry><entry colsep=\"0\"></entry><entry></entry></row>");
        }
      }
      stream.write("</tbody></tgroup></table></_ufe:LegendWrapper></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText>" );
      stream.write( "</_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}

fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: legend

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="levelledPara" style="block">
<Context
comment='Originally, the 5th level levelledPara had numbering like "16.1" (using its parent number), and aligned at a specific indent from the left margin.
I don&#x27;t know exactly why this was implemented like this, so leave it here in case it applies in some cases later.'
priority="86"
selector="levelledPara/levelledPara/levelledPara/levelledPara/levelledPara[@bak]">
<BaseProperties>
<Indent firstLineIndent="*-20mm" leftIndent="@20mm"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afc62400f-99c4-43e8-ac60-de62688a7af6"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="1.1"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="tab"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1"
tabtoAfter="20mm">
<LabelAndNumber><_gte:Translate translate="off"
id="A435b0530-5be2-49ae-81d5-b82cb1068589"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M110" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: levelledPara/levelledPara/levelledPara/levelledPara/levelledPara

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

block.indent = '-20mm';
block.indentAbsolute = 2; // RS: SOURCE EDIT: Changed to 2 (absolute to left margin or table cell)
block.indentStart = '20mm';
block.absoluteStart = 2; // RS: SOURCE EDIT: Changed to 2 (absolute to left margin or table cell)

block.marginTop = '4pt';
contextProp.isBlock =  isBlock = 1;
if ( !arguments[0].source.namespace.children[ 'labelFormat' ] )
{
   var primaryStream = template.content.getStream( template.primaryStream );
   var stream = template.content.createStream( 'labelFormat', primaryStream.type, arguments[0].source.namespace );
   stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"A829f9af6-6bf8-4d18-b745-a2cb1b62915f\">" );
      stream.write( "<_gte:Target lang=\"en\"><_gte:ElementNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );
   currentNode.setUserString('app_hasnumbering','true');
}
var parent = currentNode.augParentNode;
if ( parent.getUserString( '_temp_reset_levelledPara662A63AB' ) != '1'  )
{
   parent.augmentReference( '_app:RestartNumbering levelledPara662A63AB', 0 );
   formatting.fish[ template.numberingFish ][ 'levelledPara662A63AB' ] = '';
   parent.setUserString( '_temp_reset_levelledPara662A63AB', '1' );
}
block.indentTab2 = new fBlockTab ( '20mm' );
contextProp.markerArgs = { format : "(PREVIOUS) '.' (CURRENT)", labelPlacement : "beforeNumber", numberStyle : "1", labelFormat : arguments[0].source.namespace.children[ 'labelFormat' ], followWith : "&#x9;", countAs : "levelledPara662A63AB" };
contextProp.markerType = 'Numbering';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:levelledPara:levelledPara_in_levelledPara_in_levelledE181:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:levelledPara:levelledPara_in_levelledPara_in_levelledE181:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A82b6edc1-a781-4f02-ae7d-a7badcd15c67\"><_gte:Target lang=\"en\"><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber display=\"1.1\"/>" );
      stream.write( "</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: levelledPara/levelledPara/levelledPara/levelledPara/levelledPara

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="84.5"
selector="levelledPara/levelledPara/levelledPara/levelledPara/levelledPara/levelledPara/levelledPara">
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1d842c7f-ff1a-4ad1-b5e1-e084ce531436"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(a)"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0pt" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A7790bba8-5a2f-448d-9bd4-53c9b2cf5606"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A62c52b3a-8a67-47dd-89c4-6a996cfea642"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(a)"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A280e088f-1883-4b85-8ed2-cd518ab405f7"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A8000ed68-d729-4e2a-b1e4-28284c9fe0c5"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="83"
selector="levelledPara/levelledPara/levelledPara/levelledPara/levelledPara/levelledPara">
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A10a65236-7f3b-4570-88ba-77c912ef2c59"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(1)"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0pt" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A7acc1dfe-7f2a-4f01-91e0-b1a1e5eae88c"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A42a1d158-307d-4c84-982c-ed85f45ae5f2"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(1)"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac5f2bbf4-9409-4bb9-9a00-5f44c43343c1"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A0817dc6c-e3ed-4f32-81b0-f29ca971fa27"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="80"
selector="levelledPara/levelledPara/levelledPara/levelledPara/levelledPara">
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A82b6edc1-a781-4f02-ae7d-a7badcd15c67"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="a"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0pt" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A829f9af6-6bf8-4d18-b745-a2cb1b62915f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa52bdb9c-844d-441c-8307-fd6e0f8a411c"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="a"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Abc38de2b-5c08-4936-86f0-2ecdf23fa860"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A86081576-13b2-418c-b193-1df46e76b196"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="60"
selector="levelledPara/levelledPara/levelledPara/levelledPara">
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A42de1c66-0438-40b9-ae83-a6da835863ec"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A88e17c2b-c44e-49ee-9d69-c5314e290717"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A53d6e971-a55d-4357-861f-f0e95eb2bdb1"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A482655d7-f360-4b34-8272-a68a3bf497f2"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A2e0055cd-74db-4a73-9d3f-7bce4cb4722d"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="40" selector="levelledPara/levelledPara/levelledPara">
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8b6c76a8-3cae-481d-8762-5e59ac73b9bf"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A3a358021-a454-4b48-8630-3abaefa21187"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae1088a04-94ba-43a4-a449-7528fe980c74"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin
class="default" offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afc2e5655-f8ae-46a3-936c-269e19447f91"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A646625fb-0136-4f0b-a2dc-7b89b5c93f19"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment='In Proprietary Information section, the 2nd level levelledParas do not indent, and use "1." instead if "(1)".'
priority="33"
selector="pmEntry[@pmEntryType='pmt77']//levelledPara/levelledPara">
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0in"/>
<SpaceBefore optimum="10pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2afee6c5-07bd-4d66-945c-42db9e06d4e6"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="1"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0in" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1" numberSuffix="."
tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Aeb28a354-0ccd-4467-b2ba-fffa961f0b08"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*0pt" leftIndent="@0in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1411ad77-a44b-44ae-9eca-2877abff8fbd"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="1"/>.</_gte:Font></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin
class="default" offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa68a292c-a373-439d-b5c3-0859249943ac"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1" numberSuffix="."
tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Abc5d965c-05c3-4378-8e3a-ce2e3d883c6d"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="20" selector="levelledPara/levelledPara">
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="10pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5a50ae69-d23d-4ad6-99d9-2f82d9b7e88f"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A9813eb3f-6b23-4313-bf17-6a9d1a11e58b"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A239500db-fc52-4ff2-98a6-3c62d0e9b416"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin
class="default" offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A905d8c98-5ce3-4673-8d3e-720dae50f3e5"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Aaaa55a3a-18d3-4c92-85c6-cf8c22dfceca"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="0" selector="levelledPara">
<BaseProperties>
<Font weight="normal"/>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<SpaceBefore optimum="Honeywell_Standard_Space"/>
<SpaceAfter minimum="0em" optimum="0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9984676f-7f7e-46d8-9a50-26187fc671eb"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0ae39ab4-15b8-43fc-870f-b75d55bf0fd8"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4256e6a1-838f-4766-bc9c-e4aeef5c52d3"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest expression="count(ancestor::pmEntry) = 2"/></Tests>
<BaseProperties>
<Indent firstLineIndent="*-1in" leftIndent="@1in"/>
<SpaceAfter optimum="6pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab37222db-5057-4717-a656-a4a04782b982"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Weight="bold"><_gte:ElementLabelAndNumber
display="A"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0.5in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="A"
numberSuffix="."
numberXPath="count(preceding-sibling::levelledPara)+count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/description/levelledPara)+1"
tabtoAfter="1in">
<LabelAndNumber><_gte:Translate translate="off"
id="Ac8be5330-ab49-4ff4-acf8-c935be1b037f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-1in" leftIndent="@1in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae39cb3ab-3bbf-4703-98d4-2b7a198c7db8"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Weight="bold"><_gte:ElementLabelAndNumber
display="A"/>.</_gte:Font></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin
class="default" offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa83884a9-fbc9-4c2e-8b04-0ee3fb1b0b49"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0.5in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="A"
numberSuffix="."
numberXPath="count(preceding-sibling::levelledPara)+count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/description/levelledPara)+1"
tabtoAfter="1in">
<LabelAndNumber><_gte:Translate translate="off"
id="A5fdfa33b-1a0f-4e4d-8aee-1b47048b4a29"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="levelledParaAlts" style="unstyled">
<Context priority="0" selector="levelledParaAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="limitedPartNumber" style="unstyled">
<Context priority="0" selector="limitedPartNumber">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="link" style="link">
<LinkDetails idrefAttrname="idref"/>
<Context
comment="Added this non-S1000D element to use to construct  links in UFEs (particularly for the Table of Highlights)"
priority="0" selector="link">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="listItem" style="listItem">
<Context priority="50"
selector="sequentialList//sequentialList//sequentialList//sequentialList/listItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A66d40ef6-991f-4c7e-a92a-fbcf79aa968f"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) ')'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Aba98ed56-3ab7-407c-a235-4c41b568f610"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="40.005"
selector="sequentialList//sequentialList//sequentialList/listItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-3em" leftIndent="@3em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afe0edb93-bcaf-4b71-abf8-98c5fb5f149f"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="2em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="i" tabtoAfter="3em">
<LabelAndNumber><_gte:Translate translate="off"
id="Ac88763e5-4b35-453a-8655-68a1da05da7c"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="40"
selector="randomList//randomList//randomList/listItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa32b1b34-a075-41fc-a9b8-7203b74a6b55"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>♦</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="30.005"
selector="sequentialList//sequentialList/listItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2em" leftIndent="@2em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9b98135d-ce72-41c2-9b31-e900d23aef19"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="a" tabtoAfter="2em">
<LabelAndNumber><_gte:Translate translate="off"
id="A8ef4ed83-6cf0-4974-9463-25a15d59e21d"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="30" selector="randomList//randomList/listItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afe45d960-adae-4a9b-ad8d-03e9e2d75ddc"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>–</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="25" selector="entry//randomList/listItem[1]">
<BaseProperties>
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<SpaceBefore optimum="0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae3da22c6-8b72-40a6-a86a-8be4f4e1c1b9"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>–</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="ancestor::para[1]/text()"/></Tests>
<BaseProperties>
<SpaceBefore optimum="4pt"/></BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="20.005" selector="sequentialList/listItem">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-20mm" leftIndent="@20mm"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2aae8a6a-401c-42ff-8a08-ccf086f9a24f"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="1"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0em" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" tabtoAfter="20mm">
<LabelAndNumber><_gte:Translate translate="off"
id="A5459df36-1bce-4205-a039-4f12171d72ed"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20" selector="randomList/listItem">
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab653408e-0640-4c5a-8ad9-c2a75ef5051e"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>–</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="listItem">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="listItemDefinition" style="block">
<Context priority="0" selector="listItemDefinition">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="listItemTerm" style="block">
<Context priority="0" selector="listItemTerm">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="listOfChoices" style="unstyled">
<Context priority="0" selector="listOfChoices">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="localFabricationMaterial" style="unstyled">
<Context priority="0" selector="localFabricationMaterial">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="locateAndRepair" style="block">
<Context priority="0" selector="locateAndRepair">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ab3e3c53e-ae18-4371-92bc-84a22b6ecb69"><_gte:Target lang="en"
><_gte:Font Weight="bold">Repair Item: </_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="locateAndRepairLruItem" style="block">
<Context priority="0" selector="locateAndRepairLruItem">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="locateAndRepairSruItem" style="unstyled">
<Context priority="0" selector="locateAndRepairSruItem">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="location" style="unstyled">
<Context priority="0" selector="location">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="locationRcmd" style="unstyled">
<Context priority="0" selector="locationRcmd">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="locationRcmdSegment" style="hidden">
<Context priority="0" selector="locationRcmdSegment">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element
comment="Added this to use for gentext in internalRefs in the stylesheet (not normally part of the document)"
name="xlink:locator" style="link">
<LinkDetails idrefAttrname="xlink:href"/>
<Context priority="0" selector="xlink:locator">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aadd93ead-91d7-4f1f-a2eb-c9063be49b90"><_gte:Target lang="en"
><_gte:AttributeContent attr="xlink:label" occur="ancestor"
elem="xlink:locator"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="logo" style="unstyled">
<Context priority="0" selector="logo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="lowestAuthorizedLevel" style="unstyled">
<Context priority="0" selector="lowestAuthorizedLevel">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="lowestAuthorizedLevelGroup" style="unstyled">
<Context priority="0" selector="lowestAuthorizedLevelGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="lru" style="block">
<Context priority="0" selector="lru">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="lruItem" style="block">
<Context priority="0" selector="lruItem">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="mainProcedure" style="block">
<Context priority="0" selector="mainProcedure">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2f503a84-f0b0-4746-bf0d-073a3d683a0f"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="manufacturerCode" style="inline">
<Context priority="0" selector="manufacturerCode">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="materialSetRef" style="unstyled">
<Context priority="0" selector="materialSetRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="middleName" style="unstyled">
<Context priority="0" selector="middleName">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="modelVersion" style="unstyled">
<Context priority="0" selector="modelVersion">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="modification" style="unstyled">
<Context priority="0" selector="modification">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="modificationTitle" style="unstyled">
<Context priority="0" selector="modificationTitle">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="multimedia" style="unstyled">
<Context priority="0" selector="multimedia">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="multimediaAlts" style="unstyled">
<Context priority="0" selector="multimediaAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="multimediaObject" style="unstyled">
<Context priority="0" selector="multimediaObject">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="name" style="inline">
<Context priority="20" selector="functionalItemSpec/name">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="10" selector="preliminaryRqmts//name">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="0" selector="name">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="natoStockNumber" style="unstyled">
<Context priority="0" selector="natoStockNumber">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="noAnswer" style="unstyled">
<Context priority="0" selector="noAnswer">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="noConds" style="block">
<Context priority="40" selector="closeRqmts/reqCondGroup/noConds">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="noConds">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7b40ceab-10f0-45e8-ae75-2f1936a0ab0c"><_gte:Target lang="en"
><_ufe:NoRequirementsRow></_ufe:NoRequirementsRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="noSafety" style="block">
<Context priority="0" selector="noSafety">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa2dff2f5-c830-4555-b9ac-76212d8d29e8"><_gte:Target lang="en"
><_dtd:table frame="none"><_dtd:tgroup cols="1"><_dtd:colspec
colname="col1"/><_dtd:tbody><_dtd:row><_dtd:entry>None</_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="noSpares" style="block">
<Context priority="0" selector="noSpares">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac7d923c5-1c1d-48d8-9f07-49b0a619a073"><_gte:Target lang="en"
><_ufe:NoRequirementsRow></_ufe:NoRequirementsRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="noSupplies" style="block">
<Context priority="0" selector="noSupplies">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A750a44b8-51e4-4363-9b5f-a457c16ef5b6"><_gte:Target lang="en"
><_ufe:NoRequirementsRow></_ufe:NoRequirementsRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="noSupportEquips" style="block">
<Context priority="0" selector="noSupportEquips">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab546181c-7835-4264-a4ca-a003d304b5d9"><_gte:Target lang="en"
><_ufe:NoRequirementsRow></_ufe:NoRequirementsRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="noValue" style="unstyled">
<Context priority="0" selector="noValue">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="notIllustrated" style="unstyled">
<Context priority="0" selector="notIllustrated">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="note" style="block">
<Context comment="First level levelled para" priority="23.005"
selector="levelledPara[not(ancestor::levelledPara)]/note">
<BaseProperties>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<Keep withPrevious="4"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A0fbea784-89ab-415d-89a2-5e7a5efd8b32"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarBegin></_ufe:CheckNoteChangeBarBegin><_gte:Font
Weight="bold">NOTE:<_gte:Leaders leaderType="space" lenType="specified"
specLen="0.25in"/></_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afab60a25-c981-4432-b4cb-ba0af581c00a"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="(attentionSequentialList and count(attentionSequentialList/attentionSequentialListItem) > 1) or (attentionRandomList and count(attentionRandomList/attentionRandomListItem) > 1) "/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af73a0b64-513b-4d04-bde5-ed5cd0560935"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarBegin></_ufe:CheckNoteChangeBarBegin><_gte:Font
Weight="bold">NOTES:<_gte:Leaders leaderType="space" lenType="specified"
specLen="0.25in"/></_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A00bda582-6af3-4bea-8a8c-756d18b91c22"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context comment="First level procedural step" priority="23"
selector="proceduralStep[not(ancestor::proceduralStep)]/note">
<BaseProperties>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<Keep withPrevious="4"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3b57b329-79d8-4422-90db-fba3879dcb5f"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarBegin></_ufe:CheckNoteChangeBarBegin><_gte:Font
Weight="bold">NOTE:<_gte:Leaders leaderType="space" lenType="specified"
specLen="0.25in"/></_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3c88944f-f119-4cd7-b443-f1e7fc6f5cd7"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest
expression="(attentionSequentialList and count(attentionSequentialList/attentionSequentialListItem) > 1) or (attentionRandomList and count(attentionRandomList/attentionRandomListItem) > 1)"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af8c30e44-1c8b-4d76-abd8-ccdcc9f15abd"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarBegin></_ufe:CheckNoteChangeBarBegin><_gte:Font
Weight="bold">NOTES:<_gte:Leaders leaderType="space" lenType="specified"
specLen="0.25in"/></_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A29cbfecd-515c-41ff-9367-13251b48ff8b"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="0" selector="note">
<BaseProperties>
<Indent leftIndent="@0pt"/>
<SpaceBefore optimum="4pt"/>
<Breaks blockOrInline="block"/>
<Keep withPrevious="4"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad47893ad-05ee-4c3d-848b-8705bf7f6cfa"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarBegin></_ufe:CheckNoteChangeBarBegin><_gte:Font
Weight="bold">NOTE:<_gte:Leaders leaderType="space" lenType="specified"
specLen="0.25in"/></_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab092b08a-2b3b-44d2-8327-b617a3e19587"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="Special case for a note in the introduction following a table: make it fully left-aligned.">
<Tests>
<XPathTest expression="ancestor::pmEntry[@pmEntryType='pmt58']"/>
<XPathTest expression="name(preceding-sibling::*[1])='table'"/></Tests>
<BaseProperties>
<Indent leftIndent="0pt"/></BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="(attentionSequentialList and count(attentionSequentialList/attentionSequentialListItem) > 1) or (attentionRandomList and count(attentionRandomList/attentionRandomListItem) > 1)"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa0d3fdaf-307d-46fa-affb-aeebbb2b24ca"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarBegin></_ufe:CheckNoteChangeBarBegin><_gte:Font
Weight="bold">NOTES:<_gte:Leaders leaderType="space" lenType="specified"
specLen="0.25in"/></_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3115f017-66f6-41cc-bc2e-74d117d180b4"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="(attentionSequentialList and count(attentionSequentialList/attentionSequentialListItem) > 1) or (attentionRandomList and count(attentionRandomList/attentionRandomListItem) > 1)"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa0139a0a-7d37-449a-84d2-dd66892d6ba7"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarBegin></_ufe:CheckNoteChangeBarBegin><_gte:Font
Weight="bold">NOTES:<_gte:Leaders leaderType="space" lenType="specified"
specLen="0.25in"/></_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2616cecc-2b82-4bb3-99dc-d308707571f6"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="notePara" style="block">
<Context priority="24" selector="note/notePara[1]">
<BaseProperties>
<Font weight="normal"/>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac7bbf1ed-e22a-4ea8-9f98-853793cac505"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarBegin></_ufe:CheckNoteChangeBarBegin>:</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A738bc4a6-0f69-42cd-b95f-55049b08fc24"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M110" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: note/notePara[1]

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

style.weight = fStyle.WEIGHT_NORMAL;
contextProp.isBlock =  isBlock = 0;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:notePara:first_notePara_in_note:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:notePara:first_notePara_in_note:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );

      // SOURCE EDIT: Add relative indent PI to indent following lines
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Ac7bbf1ed-e22a-4ea8-9f98-853793cac505\"><_gte:Target lang=\"en\"><_ufe:CheckNoteChangeBarBegin/><?A3B2 ri?></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

if ( currentNode.getUserString( '_temp_hasAfter_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:notePara:notePara_in_note878D:addAfter');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:notePara:notePara_in_note878D:addAfter', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A7cdb052b-8989-41e6-a5b0-3cabc25d096c\"><_gte:Target lang=\"en\"><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target></_gte:Translate>" );
    stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentAfter( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasAfter_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: note/notePara[1]

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="0" selector="notePara">
<BaseProperties>
<Font weight="normal"/>
<Indent leftIndent="@0.68in"/>
<SpaceBefore optimum="Honeywell_Standard_Space"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8e863373-0fc2-45cb-87af-e9f7acfd4327"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarBegin></_ufe:CheckNoteChangeBarBegin></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2291aa08-3c3b-4612-ad12-847485bf2933"><_gte:Target lang="en"
><_ufe:CheckNoteChangeBarEnd></_ufe:CheckNoteChangeBarEnd></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="numberFunction" style="unstyled">
<Context priority="0" selector="numberFunction">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="numberOperator" style="unstyled">
<Context priority="0" selector="numberOperator">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="observedFault" style="unstyled">
<Context priority="0" selector="observedFault">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="observedFaultAlts" style="unstyled">
<Context priority="0" selector="observedFaultAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="optionalPart" style="unstyled">
<Context priority="0" selector="optionalPart">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="originator" style="unstyled">
<Context priority="0" selector="originator">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="otherItems" style="unstyled">
<Context priority="0" selector="otherItems">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="otherPossibleCause" style="unstyled">
<Context priority="0" selector="otherPossibleCause">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="overLengthPartNumber" style="unstyled">
<Context priority="0" selector="overLengthPartNumber">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="packaging" style="unstyled">
<Context priority="0" selector="packaging">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="para" style="block">
<Context priority="33"
selector="pmEntry[@pmEntryType='pmt77']//levelledPara/para">
<BaseProperties>
<LineSpacing lineHeight="1.2em"/>
<SpaceBefore optimum="10pt"/>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A47f5c056-2c5c-4719-8018-e4424d9e407b"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A03364980-1a1b-4ced-acf0-423d814bde7a"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest expression="preceding-sibling::*"/></Tests>
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Breaks blockOrInline="block"/></BaseProperties>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Change_bar">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2ae16ed0-2827-4e67-89d7-16cd3f56dcf3"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afad37786-2a46-47ec-bcc3-d9e39fde4f1a"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition>
<Tests>
<XPathTest
expression="normalize-space(ancestor::levelledPara/title)='Copyright - notice' or normalize-space(ancestor::levelledPara/title)='Copyright - Notice'"/>
</Tests>
<BaseProperties>
<Alignment align="center"/></BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="24.01" selector="footnote/para[1]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context comment="Treat first para in entry as inline" priority="24.005"
selector="entry/para[1]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ace5c8d58-4cb7-4667-b807-fea7273a56d4"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aeec51157-9f82-4ec3-9c43-c72ef8fc73db"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="24.00375" selector="thead//entry/para">
<BaseProperties>
<SpaceBefore optimum="0pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A03c9e6c7-9198-4b45-9dd9-e596f81aa3d4"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Affa053e6-2f35-450b-82d4-4ffac59971f4"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="24.0025" selector="entry/para">
<BaseProperties>
<SpaceBefore optimum="3pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3c76958e-0e58-4399-8eb1-8fa2167dc086"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3a8af07f-638b-43c9-9723-be7edc3dc421"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A82f42908-ae11-4251-b2d1-5e295f1a99f3"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="24" selector="listItem/para[1]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Abbebbe75-b471-4be7-97a3-c00171526c84"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A60b96684-056f-4ef5-8f37-415fc91c8b0b"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="20.005" selector="listItemDefinition/para">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A62649081-1841-44ac-ac67-fd745f11f8d1"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1dc31b8a-99f9-44fa-9584-b94c9e04305f"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="20.0025" selector="levelledPara/para">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5070a910-3847-4349-ac7c-8d1911ba1c67"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aeea737f3-aeb2-4407-86c5-e2c42a31272e"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest expression="preceding-sibling::*"/></Tests>
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Breaks blockOrInline="block"/></BaseProperties>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Abcd45d70-7697-4052-806b-a518cddf6cfa"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aee9251bc-b310-4a6e-9c94-7ae1ba94d2b4"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="20" selector="proceduralStep/para">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6536dd3f-2729-4de4-967c-a83a314eebea"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A79592467-8c7f-4e5e-9319-bbdb696417bf"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest expression="preceding-sibling::*"/></Tests>
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Breaks blockOrInline="block"/></BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment="In Transmittal Information (pmEntryType='pmt52'), Record of Revisions (pmEntryType='pmt53'), Record of Temporary Revisions (pmEntryType='pmt54'), or Proprietary Information (pmEntryType='pmt77'), left align paras and add space above."
priority="13"
selector="pmEntry[@pmEntryType='pmt52' or @pmEntryType='pmt53' or @pmEntryType='pmt54' or @pmEntryType='pmt77']//para">
<BaseProperties>
<SpaceBefore optimum="10pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="6.5" selector="description/para">
<BaseProperties propertySetReferences="Honeywell_Standard_Space">
<Indent leftIndent="Standard_Indent"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Acdc6ddb4-9a03-48a7-978a-bb0163940529"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A47081db7-f802-4f51-9a0c-bd554c97e494"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="0" selector="para">
<BaseProperties>
<Indent leftIndent="Standard_Indent"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Afcdf6f5f-dd40-4f01-8403-9e8919f39460"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae8b811d1-cb1a-41e4-8e4c-2f332d424789"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="parameter" style="unstyled">
<Context priority="0" selector="parameter">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="partAndSerialNumber" style="inline">
<Context priority="0" selector="partAndSerialNumber">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="partIdent" style="hidden">
<Context priority="0" selector="partIdent">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="partKeyword" style="unstyled">
<Context priority="0" selector="partKeyword">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="partLocationSegment" style="hidden">
<Context priority="0" selector="partLocationSegment">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="partNumber" style="inline">
<Context priority="0" selector="partNumber">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="partRef" style="block">
<Context
comment="The partRef is hidden in the main flow of the IPD (within itemSeqNumber)."
priority="20.005" selector="itemSeqNumber/partRef">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context
comment='The partRef is hidden in the regular text flow (in spareDescr), but not when output from gentext elsewhere
(to create the "Spares" table).' priority="20"
selector="spareDescr/partRef">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="partRef">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A168c9f89-a140-4f91-9fae-6aad0c0ce3f9"><_gte:Target lang="en"
><_gte:AttributeContent attr="partNumberValue" occur="1" scope="partRef"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="partRefGroup" style="unstyled">
<Context priority="0" selector="partRefGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="partRepository" style="block">
<Context priority="0" selector="partRepository">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A0e0d2080-42fe-46ee-8360-f4e8c7eab446"><_gte:Target lang="en"
><_gte:Font Underline="single" ScoreSpace="yes" Weight="bold"
TypeSize="12pt">Part Repository:</_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="partSegment" style="hidden">
<Context priority="0" selector="partSegment">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="partSpec" style="block">
<Context priority="0" selector="partSpec">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0b66268f-1f00-4fd3-8c8d-ef7180273ef8"><_gte:Target lang="en"
><_dtd:table><_dtd:tgroup cols="2"><_dtd:colspec colname="col1"/><_dtd:colspec
colname="col2"/><_dtd:tbody><_dtd:row><_dtd:entry><_gte:AttributeContent
attr="partNumberValue" xpath="partIdent"/></_dtd:entry><_dtd:entry
><_gte:ElementContent include="contentOnly"
xpath="itemIdentData/descrForPart"/></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="partUsage" style="unstyled">
<Context priority="0" selector="partUsage">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="person" style="unstyled">
<Context priority="0" selector="person">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="personCategory" style="unstyled">
<Context priority="0" selector="personCategory">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="personSkill" style="unstyled">
<Context priority="0" selector="personSkill">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="personnel" style="block">
<Context priority="0" selector="personnel">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="phoneNumber" style="unstyled">
<Context priority="0" selector="phoneNumber">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="physicalChemicalDescr" style="unstyled">
<Context priority="0" selector="physicalChemicalDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="physicalSecurityPilferageCode" style="unstyled">
<Context priority="0" selector="physicalSecurityPilferageCode">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="placardText" style="unstyled">
<Context priority="0" selector="placardText">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="pm" style="document">
<Context priority="0" selector="pm">
<BaseProperties
propertySetReferences="Set_APP_Variables Default_Font_Size Sans-Serif_Font">
<Breaks blockOrInline="block" newPageSet="Default_Page_Set"
pageNumber="initial" startNew="page"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A51249950-bbf7-419b-895e-d61b570ad001"><_gte:Target lang="en"
><_ufe:FrontCoverPage></_ufe:FrontCoverPage></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0b39e8b2-8a48-4d77-993d-46671a56b76c"><_gte:Target lang="en"
><_ufe:CheckLastPageBlank2></_ufe:CheckLastPageBlank2><_ufe:SaveLastPageNo
></_ufe:SaveLastPageNo></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties>
<Breaks newPageSet="ACMM_Page_Set" startNew="page"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="pmAddress" style="hidden">
<Context priority="0" selector="pmAddress">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="pmAddressItems" style="unstyled">
<Context priority="0" selector="pmAddressItems">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="pmCode" style="unstyled">
<Context priority="0" selector="pmCode">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element divisionLevel="1" name="pmEntry" style="division">
<Context priority="40" selector="pmEntry/pmEntry/pmEntry">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="If it's the first pmEntry with an illustratedPartsCatalog, then output the EDI.
UPDATE: If there are no functionalItemRefs in the document, don't output it.
UPDATE 2: Now using genericPartData (genericPartDataName=&#x22;rd&#x22;) to generate the EDI. Use a new UFE and keep the original (IPD_FunctionalItemRefs) for future reference. Remove the condition for functionalItemRefs (count(//functionalItemRef)>0) and make a new one for genericPartDataName=&#x22;rd&#x22;.
Also add a page break after, so the Numerical Index will start on a new page.
UPDATE 3: Revert not outputting when there are no genericPartDataName=&#x22;rd&#x22;; output a &#x22;NOT APPLICABLE&#x22; table instead. This is handled in the sub-condition
UPDATE 4: When there are functionalItemRefs in the document, use them to construct the EDI instead.">
<Tests>
<XPathTest
expression="count(descendant::dmContent/dmodule/content/illustratedPartsCatalog)>0"/>
<XPathTest
expression="count(preceding-sibling::pmEntry/dmContent/dmodule/content/illustratedPartsCatalog)=0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A067746f1-bb38-41f8-ab53-179b228ce073"><_gte:Target lang="en"
><_ufe:IPD_FunctionalItemRefsTitle></_ufe:IPD_FunctionalItemRefsTitle
><_ufe:IPD_EDI_Generator></_ufe:IPD_EDI_Generator><_ufe:PageBreak
></_ufe:PageBreak></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A78adf056-1d2f-4d01-ab88-4ba0301df8f0"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests>
<XPathTest expression="count(//functionalItemRef)>0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aab8d6bf4-5000-4cae-b15b-649fec08dac8"><_gte:Target lang="en"
><_ufe:IPD_FunctionalItemRefsTitle></_ufe:IPD_FunctionalItemRefsTitle
><_ufe:IPD_FunctionalItemRefs></_ufe:IPD_FunctionalItemRefs><_ufe:PageBreak
></_ufe:PageBreak></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1abb9161-c043-40e8-beb5-d774eefc5fee"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment='When there are no genericPartDataName="rd" or "rdi"; output a "NOT APPLICABLE" table instead.'
conditionType="elseIf">
<Tests>
<XPathTest
expression="count(//genericPartData[@genericPartDataName='rd' or @genericPartDataName='rdi'])=0"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Adb5ee766-177a-451e-843e-8600cc4c2ba2"><_gte:Target lang="en"
><_ufe:IPD_FunctionalItemRefsTitle></_ufe:IPD_FunctionalItemRefsTitle
><_dtd:table frame="top"><_dtd:tgroup cols="8"><?PubTbl tgroup
clmarg="0.00pt" crmarg="0.00pt"?><_dtd:colspec colname="col1"
colwidth="1.50in" colsep="0"/><_dtd:colspec colname="col2"
colwidth="0.30in" colsep="0"/><_dtd:colspec colname="col3"
colwidth="0.50in" colsep="0"/><_dtd:colspec colname="col4"
colwidth="1.25in"/><_dtd:colspec colname="COLSPEC2" colwidth="1.50in"
/><_dtd:colspec colname="COLSPEC3" colwidth="1.44*"/><_dtd:colspec
colname="COLSPEC5" colwidth="1.40*"/><_dtd:colspec colname="COLSPEC4"
colwidth="3.05*"/><_dtd:thead><_dtd:row rowsep="1"><_dtd:entry
valign="top">EQUIPMENT<_dtd:_newline/>DESIGNATOR</_dtd:entry><_dtd:entry
valign="top" nameend="col3" namest="col2">FIG.<_dtd:_newline/>ITEM</_dtd:entry
><_dtd:entry colsep="0" valign="top">GEOGRAPHIC<_dtd:_newline/>LOCATION</_dtd:entry
><_dtd:entry colsep="0" valign="top">EQUIPMENT<_dtd:_newline/>DESIGNATOR</_dtd:entry
><_dtd:entry colsep="0" valign="top" nameend="COLSPEC5"
namest="COLSPEC3">FIG.<_dtd:_newline/>ITEM</_dtd:entry><_dtd:entry
valign="top">GEOGRAPHIC<_dtd:_newline/>LOCATION</_dtd:entry></_dtd:row
></_dtd:thead><_dtd:tbody><_dtd:row><?PubTbl row rht="0.35in"?><_dtd:entry
valign="bottom" nameend="COLSPEC4" namest="col1"> NOT APPLICABLE</_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table><_ufe:PageBreak
></_ufe:PageBreak></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af185bd02-9bb9-4a0a-b0bb-c9a8bd984691"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="20" selector="pmEntry/pmEntry">
<BaseProperties propertySetReferences="Save_LEP_pages">
<SpaceBefore optimum="6pt"/>
<SpaceAfter optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Adf72eb19-a3ed-487b-b21a-5d89a1adeb7f"><_gte:Target lang="en"
><_ufe:SaveLEPEndPage></_ufe:SaveLEPEndPage></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="For IPL, the 3rd and 4th second-level pmEntries are the vendor code list and detailed parts list, and should start on odd pages">
<Tests>
<XPathTest expression="parent::pmEntry/@pmEntryType='pmt75'"/></Tests>
<BaseProperties></BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="count(preceding-sibling::pmEntry)=2 or count(preceding-sibling::pmEntry)=3"/>
</Tests>
<BaseProperties>
<Breaks startNew="oddPage"/></BaseProperties>
<Condition
comment="If an EDI table will be generated, use the EDI page set to generate the continued EDI titles
DISABLE for now: this would apply to all the content in this pmEntry; will need to make sure it the EDI continued title doesn't appear where it shouldn't">
<Tests>
<XPathTest
expression="@false and (count(//functionalItemRef)>0 or count(//genericPartData[@genericPartDataName='rd' or @genericPartDataName='rdi'])>0)"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="EDI_Page_Set" startNew="oddPage"/></BaseProperties>
</Condition>
</Condition>
</Condition>
<Condition
comment="Check for odd last page (but IPL is handled separately due to how the page sets are nested - see catalogSeqNumber that constructs the IPL table)">
<Tests>
<XPathTest
expression="not(following-sibling::pmEntry) and not (parent::pmEntry/following-sibling::pmEntry)"/>
<XPathTest expression="not(ancestor::pmEntry[@pmEntryType='pmt75'])"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A87ef7efe-2986-4cc8-b5f6-40556c363bf1"><_gte:Target lang="en"
><_ufe:SaveLastPageNumber></_ufe:SaveLastPageNumber><_ufe:SaveLEPEndPage
></_ufe:SaveLEPEndPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context divisionLevel="1" priority="0" selector="pmEntry">
<BaseProperties
propertySetReferences="Save_LEP_pages Set_authorityName Set_specialSectionName Set_pageBlockPrefix">
<Breaks blockOrInline="block" newPageSet="Default_Page_Set"
pageNumberXPath="'3'" startNew="page"/></BaseProperties>
<Conditions>
<Condition
comment="For the Illustrated parts list, set the catalogSeqNumber attributes for figureNumber and FigureNumberVariant in advance, so they will
be correct when the EDI and NI are generated." conditionType="if">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt75"/></Tests>
<BaseProperties propertySetReferences="Set_figureNumbers">
<Breaks pageNumber="custom" pageNumberXPath="'10001'"/></BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest
expression="/pm/@type='im' or /pm/@type='sdim' or /pm/@type='sdom'"/>
</Tests>
<BaseProperties></BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="@pmEntryType='pmt91' or preceding-sibling::pmEntry/@pmEntryType='pmt91'"/>
</Tests>
<BaseProperties>
<Breaks newPageSet="Default_Page_Set" pageNumber="initial"
startNew="oddPage"/></BaseProperties>
</Condition>
</Condition>
<Condition
comment="Regular body pages (the introduction or after the introduction): start a new odd page">
<Tests>
<XPathTest expression="not(ancestor::pmEntry)"/>
<XPathTest
expression="@pmEntryType='pmt58' or preceding-sibling::pmEntry/@pmEntryType='pmt58'"/>
<XPathTest expression="not(/pm/@type='acmm')"/></Tests>
<BaseProperties>
<Breaks newPageSet="Default_Page_Set" pageNumber="initial"
startNew="oddPage"/></BaseProperties>
<Condition>
<Tests>
<XPathTest expression="@false and @startat"/></Tests>
<BaseProperties>
<Breaks newPageSet="Default_Page_Set" pageNumber="custom"
pageNumberXPath="(@startat)" startNew="oddPage"/></BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest expression="number(@startat) = 3001"/></Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Page_3000_Set" pageNumber="initial"
startNew="oddPage"/></BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="number(@startat) >= 2000"/></Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Page_Set" pageNumber="initial"
startNew="oddPage"/></BaseProperties>
</Condition>
<Condition
comment="Sometimes the first page of the 1000s pageblock doesn't output the page block prefix properly, so use a special pageset with the prefix  hard-coded"
conditionType="elseIf">
<Tests>
<XPathTest expression="number(@startat) >= 1000"/></Tests>
<BaseProperties>
<Breaks newPageSet="Page_Block_Page_1000_Set" pageNumber="initial"
startNew="oddPage"/></BaseProperties>
</Condition>
</Condition>
<Condition comment="Different pagination rules for ACMM documents">
<Tests>
<XPathTest expression="/pm/@type='acmm'"/></Tests>
<BaseProperties>
<Breaks startNew="none"/></BaseProperties>
<Condition comment="Hide Record of revisions">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt53"/></Tests>
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
<Condition comment="Hide Record of revisions" conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt54"/></Tests>
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
<Condition comment="Hide Record of revisions" conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt55"/></Tests>
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
<Condition comment="Hide Record of revisions" conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt56"/></Tests>
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
<Condition comment="Start new page for TRANSMITTAL INFORMATION"
conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt52"/></Tests>
<BaseProperties>
<Breaks newPageSet="#noChange" startNew="page"/></BaseProperties>
</Condition>
<Condition comment="Hide Record of revisions" conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt58"/></Tests>
<BaseProperties>
<Breaks newPageSet="#noChange" startNew="page"/></BaseProperties>
</Condition>
<Condition comment="Start new page for Proprietary Information"
conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt77"/></Tests>
<BaseProperties>
<Breaks newPageSet="Title_Page_Set_ACMM" pageNumber="continue"
startNew="page"/></BaseProperties>
</Condition>
</Condition>
<Condition
comment='Disabled most of these contexts and instead using the condition above to set the page set and starting page number.
Also, we always start at "1" now, and add the pageblock number separately (using the add-in template)'
conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt75"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'10001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt60"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'1001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt69"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'11001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt70"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'12001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt73"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'15001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt72"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'14001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt71"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'13001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt68"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'9001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt74"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'16001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt67"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'8001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt65"/></Tests>
<BaseProperties>
<Breaks newPageSet="Default_Page_Set" pageNumber="custom"
pageNumberXPath="'6001'" startNew="oddPage"/></BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt66"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'7001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt63"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'4001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt64"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'5001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt62"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'3001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt61"/></Tests>
<BaseProperties>
<Breaks pageNumber="custom" pageNumberXPath="'2001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition
comment='Appendix in regular CMM doctypes (not SPM) starts at 1, with prefix "A"'
conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt85"/>
<XPathTest
expression="not(/pm/@type='spm' or /pm/@type='im' or /pm/@type='sdom' /pm/@type='sdim' )"/>
</Tests>
<BaseProperties>
<Breaks pageNumber="initial" pageNumberXPath="'2001'" startNew="oddPage"/>
</BaseProperties>
</Condition>
<Condition
comment="Use the special Introduction page set for the introduction, because the page-prefix was not appearing properly on the first page."
conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt58"/></Tests>
<BaseProperties>
<Breaks newPageSet="Intro_Page_Set" pageNumber="initial"
startNew="oddPage"/></BaseProperties>
</Condition>
<Condition
comment="For Transmittal Information, output the Table of Highlights after.
UPDATE: Moved to description, since outputting here was causing a keep with previous paragraph (though I can't see why)"
conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="xpmt52"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4d34145d-6190-4b4a-8b9a-fdb1330f5951"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="Special case for LEP: use the LEP page set, output the LEP UFE to generate the content, and add the ToC after."
conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" testType="equals"
testValue="pmt56"/></Tests>
<BaseProperties>
<Breaks newPageSet="LEP_Page_Set" pageNumber="initial"
startNew="oddPage"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A46ccad95-026c-46b7-8653-c525557f3d9c"><_gte:Target lang="en"
><_ufe:LEP></_ufe:LEP><_ufe:ToC_Pageset><_ufe:ToC></_ufe:ToC><_ufe:ToC_Figures
></_ufe:ToC_Figures><_ufe:ToC_Tables></_ufe:ToC_Tables></_ufe:ToC_Pageset
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="This condition is for front-matter pmEntries (without a specifically handled pmEntryType above).
Restart numbering at 1. Except for the first pmEntry, for Proprietary information, which is a continuation of the
title pages (see next condition)." conditionType="elseIf">
<Tests>
<XPathTest expression="not(descendant::pmEntry)"/>
<XPathTest expression="not(ancestor::pmEntry)"/>
<XPathTest expression="count(preceding-sibling::pmEntry)>0"/>
<XPathTest
expression="not(preceding-sibling::pmEntry/@pmEntryType='pmt58' or preceding-sibling::pmEntry/@pmEntryType='pmt91' or @pmEntryType='pmt91')"/>
</Tests>
<BaseProperties>
<SpaceAfter optimum="10pt"/>
<Breaks newPageSet="Default_Page_Set" pageNumber="initial"
startNew="oddPage"/></BaseProperties>
</Condition>
<Condition
comment='This is for the first pmEntry, for Proprietary information, which is a continuation of the title pages.
Also, for some reason the page prefix does not work on the first page of Proprietary information, so use a special
page set with the "T-" prefix hard-coded.' conditionType="elseIf">
<Tests>
<XPathTest expression="not(descendant::pmEntry)"/>
<XPathTest expression="not(ancestor::pmEntry)"/>
<XPathTest expression="count(preceding-sibling::pmEntry)=0"/></Tests>
<BaseProperties>
<SpaceAfter optimum="10pt"/>
<Breaks newPageSet="Title_Page_Set" pageNumber="continue"
startNew="page"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="pmEntryTitle" style="title">
<Context
comment="Note: Used to have an XPath to count preceding pmEntries for the numbering (in the numbering dialog). But it didn't
work in 6.0. But using natural numbering instead seems to work ok in 6.0. May need to reinstate the XPath for 6.1 later."
priority="40" selector="pmEntry/pmEntry/pmEntryTitle">
<BaseProperties>
<Font weight="bold"/>
<Highlight textUnderlineColor="#000000" textUnderlineStyle="underline"/>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<SpaceAfter optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af24a2830-78cf-4a36-8227-c4f912b2c5e5"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="no"><_gte:ElementLabelAndNumber
display="1"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" numberSuffix="."
tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae41a15cf-07d2-4aa5-949f-574b0c7280f2"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="parent::pmEntry/@authorityDocument"/></Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="0in"/>
<SpaceAfter optimum="0pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A58b42dad-1d7a-4b9e-a2cd-3eee793233a0"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="no"><_gte:ElementLabelAndNumber
display="1"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A73a2b820-912d-4e1c-84fd-05f87d960d34"><_gte:Target lang="en"
><_gte:Font Weight="medium"> (TASK <_gte:XPathString
expr="parent::pmEntry/@authorityDocument"/>)</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" numberSuffix="."
tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Aadad4f0b-8718-455e-a743-3d26708b6308"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment="Front matter title (top level pmEntry with no descendants)
UPDATE: Change to being in a pmEntry before the introduction (or before the first section of IM/SDIM/SDOM)
" priority="26"
selector="pmEntry/pmEntryTitle[parent::pmEntry[not(ancestor::pmEntry)] and (parent::pmEntry/following-sibling::pmEntry/@pmEntryType='pmt58' or (parent::pmEntry/following-sibling::pmEntry/@pmEntryType='pmt91' and not(parent::pmEntry/@pmEntryType='pmt91')))]">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold Centred_Heading_TOC">
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="Hide the title of the LEP section, since it is output by the LEP script">
<Tests>
<AttributeTest attributeName="pmEntryType" elementName="#parent"
testType="equals" testValue="pmt56"/></Tests>
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
<Condition comment="Proprietary information (License etc.)"
conditionType="elseIf">
<Tests>
<AttributeTest attributeName="pmEntryType" elementName="#parent"
testType="equals" testValue="pmt77"/></Tests>
<BaseProperties>
<Font size="10pt"/>
<Indent leftIndent="-0.25in"/>
<Alignment align="left"/>
<SpaceAfter maximum="4pt" minimum="4pt" optimum="4pt"/></BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="20.005" selector="pmEntry/pmEntryTitle">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_1">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="Top-level pmEntry title (after or including the introduction; the front-matter is handled above): make it a centred heading.
">
<Tests>
<XPathTest expression="parent::pmEntry[not(ancestor::pmEntry)]"/>
</Tests>
<BaseProperties propertySetReferences="Centred_Heading_TOC">
<Hidden hidden="no"/></BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="/pm/@type='im' or /pm/@type='sdim' or /pm/@type='sdom'"/>
</Tests>
<BaseProperties></BaseProperties>
<Condition>
<Tests>
<AttributeTest attributeName="pmEntryType" elementName="#parent"
testType="equals" testValue="pmt85"/></Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aadfa1901-468a-4bbc-a3f1-697ae073038a"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="APPENDIX S"/></_gte:Font></_gte:LabelAndNumberMarker>– </_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="A"
stringXPath="ancestor::pmEntry/@sectionNumber" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="A967b0925-4b9b-4d07-bd3d-6992a433f519"><_gte:Target lang="en"
>APPENDIX <_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes">Appendix <_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ade2a7c46-0a41-46f3-81d7-bf4bcc4d2895"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="SECTION S"/></_gte:Font></_gte:LabelAndNumberMarker>– </_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1"
stringXPath="ancestor::pmEntry/@sectionNumber" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="A684f1382-398d-4136-9eeb-6d105d8c8e07"><_gte:Target lang="en"
>SECTION <_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="20" selector="_ufe:FigureTitleForToC/pmEntryTitle">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_formalBlock">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A731bcd2a-7f9b-4903-a39b-2fd642cefd01"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A03a92bd9-0728-418f-b9d9-964aeae7a913"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A0817f8f9-8cb6-4c09-b6f7-66bd5837cddd"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="pmEntryTitle">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold Centred_Heading_TOC">
<SpaceAfter optimum="1em"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="pmIdent" style="unstyled">
<Context priority="0" selector="pmIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="pmRef" style="unstyled">
<Context priority="0" selector="pmRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="pmRefAddressItems" style="unstyled">
<Context priority="0" selector="pmRefAddressItems">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="pmRefIdent" style="unstyled">
<Context priority="0" selector="pmRefIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="pmStatus" style="hidden">
<Context priority="0" selector="pmStatus">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="pmTitle" style="unstyled">
<Context priority="0" selector="pmTitle">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="policyStatement" style="unstyled">
<Context priority="0" selector="policyStatement">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="possibleCauseGroup" style="unstyled">
<Context priority="0" selector="possibleCauseGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="postOfficeBox" style="unstyled">
<Context priority="0" selector="postOfficeBox">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="postalZipCode" style="unstyled">
<Context priority="0" selector="postalZipCode">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="preferredSparePart" style="unstyled">
<Context priority="0" selector="preferredSparePart">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="preliminaryRqmts" style="block">
<Context priority="0" selector="preliminaryRqmts">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A47a835c5-ee7e-4632-88f2-eae7f23dbbda"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="proceduralStep" style="block">
<Context
comment="This one should only be for the top-level pmEntries controlled by the second condition."
priority="140"
selector="proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep">
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Font weight="normal"/>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Addd754a1-3cdb-4039-afb0-4a628d818812"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(a)"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A5d4a82cf-e6e4-4581-8c63-68e3d63f9629"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-13mm" leftIndent="@13mm"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8e9934ad-436f-4eca-97a7-052ea722fa61"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(a)"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0c0db413-8766-403b-a55b-bf4af80edd5a"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0.25in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="13mm">
<LabelAndNumber><_gte:Translate translate="off"
id="A3ebedf27-f71a-49ed-bfce-be1f4eb475dc"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="If it's in a 1st level pmEntry after the introduction, use different numbering">
<Tests>
<XPathTest
expression="count(ancestor::pmEntry)=1 and ancestor::pmEntry/preceding-sibling::pmEntry/@pmEntryType='pmt58'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A52429aac-92f8-4350-be8f-09576ab44fff"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(a)"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Aef26c91f-48a7-4d03-b270-4cd907de19ea"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa07d599c-18c2-4cfc-a9bd-d23cb00424eb"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(a)"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7aee2425-7bae-4cd6-a934-4f2a89743479"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae1cbd953-b5e7-4e39-8671-8f78cd11112a"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="120"
selector="proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep">
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Font weight="normal"/>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af52b65a5-056a-4c5c-9327-02114f60b53c"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(a)"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A03ef1554-20e7-49af-a689-ac5357cb79fe"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-13mm" leftIndent="@13mm"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A22912da0-8eed-47d0-a108-bb4d7a2dffc9"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(a)"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae4b214cb-3c8b-4d84-9529-1da521de5fa5"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0.25in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="13mm">
<LabelAndNumber><_gte:Translate translate="off"
id="Aee73001c-9dbd-4a71-9b9b-ce88f4698e3b"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="If it's in a 1st level pmEntry after the introduction, use different numbering">
<Tests>
<XPathTest
expression="count(ancestor::pmEntry)=1 and ancestor::pmEntry/preceding-sibling::pmEntry/@pmEntryType='pmt58'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aab9f6f98-cb6d-4135-9184-95c849ad98de"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(1)"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A02583a2d-071a-463b-8f86-5c00fc28d92c"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A60e9e576-53d5-4e38-a59a-c7f37d8dcc8e"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(1)"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3a3e4ad1-1ea7-4697-9146-3f2a17affd0e"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A69dce1a9-3e51-4f47-af9e-c1f5a96c1ab3"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="100"
selector="proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep">
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Font weight="normal"/>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A12244482-3f2a-438f-966a-33ecaead59d2"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(1)"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A617ca6df-5789-4e96-958f-242be422a7f9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-13mm" leftIndent="@13mm"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3a75d030-816f-4f50-8d17-b39486b8221f"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(1)"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac7be0e8f-71d5-4ad7-a0c8-9e8eb35fd8e4"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0.25in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="13mm">
<LabelAndNumber><_gte:Translate translate="off"
id="Aa90d0dc7-4cb4-4985-a981-3af8c096827d"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="If it's in a 1st level pmEntry after the introduction, use different numbering">
<Tests>
<XPathTest
expression="count(ancestor::pmEntry)=1 and ancestor::pmEntry/preceding-sibling::pmEntry/@pmEntryType='pmt58'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad35ac7b6-5215-4696-9879-b04e53ca1119"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="a"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Afbe9b3cd-e4ac-4e53-aa4f-3e936db45cc8"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7702fced-78fa-4137-9b39-7b47d8050313"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="a"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A782d4179-3121-42a1-872d-4aa80da437e7"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Af021afad-2352-451e-a4f0-16016fc0f6db"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="80"
selector="proceduralStep/proceduralStep/proceduralStep/proceduralStep/proceduralStep">
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Font weight="normal"/>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Affb6ad8a-b0f9-40d5-b39c-98c05c8d99a5"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="a"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A9efa84d8-a285-446f-8fc7-4d9b972f29f9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-13mm" leftIndent="@13mm"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A43a2561c-9d9a-4d19-9c3e-ad8f3bb867d8"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="a"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2a641399-38f4-49bc-81fb-6889ed25042d"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0.25in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="a" tabtoAfter="13mm">
<LabelAndNumber><_gte:Translate translate="off"
id="A94d85d8f-5cbf-4e1b-bfa6-1b1f8cb2536f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="If it's in a 1st level pmEntry after the introduction, use different numbering">
<Tests>
<XPathTest
expression="count(ancestor::pmEntry)=1 and ancestor::pmEntry/preceding-sibling::pmEntry/@pmEntryType='pmt58'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa4a2c9c9-e7ca-4c19-8fdf-93210ed67a98"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A5084594a-f13e-4407-aff0-30c78a7451b2"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad129cc31-0f46-4f56-9f22-77a4a5b85da2"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A78514ac1-3ed9-47d4-9f25-3b6a8200d9bd"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Ac08f5651-3de7-43af-bb4b-8016ed010f53"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="60"
selector="proceduralStep/proceduralStep/proceduralStep/proceduralStep">
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Font weight="normal"/>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab799d8c5-12d1-4f80-ab6c-fc1ec3c9a900"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Adc5d08cc-0058-4c68-a27d-fdc8a727cd80"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-13mm" leftIndent="@13mm"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6232e1d9-e19e-46d7-8b47-9642e4a52dc3"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="1"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A19a8dfb1-bf1c-44dc-b11f-585acde806ad"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0.25in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="1" tabtoAfter="13mm">
<LabelAndNumber><_gte:Translate translate="off"
id="Ac30fa2dd-871b-4766-9b68-58534b6b133f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="If it's in a 1st level pmEntry after the introduction, use different numbering">
<Tests>
<XPathTest
expression="count(ancestor::pmEntry)=1 and ancestor::pmEntry/preceding-sibling::pmEntry/@pmEntryType='pmt58'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac34fbee3-b566-478a-a060-7c9d06b64f96"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="no"><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Adfa83529-a435-46e2-a1c6-a1b1fcac3cb7"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7e8229e1-ceba-4e2a-b3d0-d8c5627d92aa"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Underline="single"
ScoreSpace="yes"><_gte:ElementLabelAndNumber display="(a)"/></_gte:Font
></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin class="default"
offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A39d34e0f-37d6-4c7c-8df1-c0bfb0c00537"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Af61fbd2c-6de9-4a90-9c0b-9c3a526490f2"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="40"
selector="proceduralStep/proceduralStep/proceduralStep">
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Font weight="normal"/>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8a054b32-44c6-4510-90f8-533873e9d71a"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A09eeb7c7-bffd-436e-8c67-7a5656118768"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-13mm" leftIndent="@13mm"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A014b1580-5723-4ee4-bd8d-cd68c921391b"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(a)"/></_gte:Font></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin
class="default" offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3d0229e0-bc65-4807-9b52-3dd6b7835a01"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0.25in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="a" tabtoAfter="13mm">
<LabelAndNumber><_gte:Translate translate="off"
id="Ad1925b98-5928-4d2d-81cb-dc29268e8f07"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="If it's in a 1st level pmEntry after the introduction, use different numbering">
<Tests>
<XPathTest
expression="count(ancestor::pmEntry)=1 and ancestor::pmEntry/preceding-sibling::pmEntry/@pmEntryType='pmt58'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2e9124eb-29d4-4a34-b475-71cd669b79c7"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A3b689c46-cd98-41a6-b130-f315ba71f9f6"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A43e65e40-fc73-489c-898c-a4e991c144e2"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin
class="default" offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa52accd6-c1ee-45fe-ba7d-b20c7c4a9476"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A25b9f2dc-b661-4e7c-a316-dd39227462b5"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment="If the procedure step is empty, don't output a number">
<Tests>
<XPathTest expression="string(.)='' and count(*)=0"/></Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText></GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment='Removed the "keep together" here because a figure can occur within a proceduralStep. Then the keep makes the
step jump onto the next page to "keep" with the figure, and if the figure doesn&#x27;t fit then it goes to the next page
again, leaving one line of text on a page.
' priority="20" selector="proceduralStep/proceduralStep">
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Font weight="normal"/>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad2982b7f-94ff-4a52-b680-54ca1a0cacfb"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A9d3f7328-50e1-4137-a3fc-76f73a32c65e"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7d479777-496c-4672-866e-809994900fb7"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin
class="default" offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A86fb2788-fe4d-4767-a23b-0948e0db436c"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A71f8701b-fd7e-45a0-aff5-04ce2b6442ad"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="If it contains a title, make the number bold, and keep with next.
[REMOVED keep: it was causing some layout problems]">
<Tests>
<ContentTest testContent="title"/></Tests>
<BaseProperties>
<Font weight="bold"/></BaseProperties>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-15mm" leftIndent="@15mm"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8791a9de-d166-42c9-bdf7-fab9d2a7f8eb"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="(1)"/></_gte:Font></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin
class="default" offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae7c18630-fb49-43ac-ac78-26f2ca9eb886"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0.25in" followWith="tab" format="'(' (CURRENT) ')'"
numberAlignment="left" numberStyle="1" tabtoAfter="15mm">
<LabelAndNumber><_gte:Translate translate="off"
id="Aa98ee580-e1b8-40cf-bb34-4ba7c8376508"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment="If the preceding sibling was a title (of the higher-level procedural step), then keep with prev">
<Tests>
<XPathTest expression="@false and preceding-sibling::title"/></Tests>
<BaseProperties>
<Keep withPrevious="4"/></BaseProperties>
</Condition>
<Condition
comment="If it's in a 1st level pmEntry after the introduction, use different numbering">
<Tests>
<XPathTest
expression="count(ancestor::pmEntry)=1 and ancestor::pmEntry/preceding-sibling::pmEntry/@pmEntryType='pmt58'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8cdbf2ba-3747-4268-8703-e4c5dfd8ea4f"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="A"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="A" numberSuffix="."
tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A0dd4b8f7-383c-455d-8240-a30ea7876d90"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aacebe428-b6aa-4f16-92f5-be1a0d9f3cd6"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="A"/>.</_gte:Font></_gte:LabelAndNumberMarker><_gte:ChangeBarBegin
class="default" offset="10pt" ruleThick="4pt"/><_ufe:LEP_start_change
></_ufe:LEP_start_change></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae63c3a50-7c87-4a77-81df-166ac6612af1"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberStyle="A" numberSuffix="."
tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="Ab61d0894-b092-4f77-b56e-98eec2226462"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment="If the procedure step is empty, don't output a number">
<Tests>
<XPathTest expression="string(.)='' and count(*)=0"/></Tests>
<BaseProperties>
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<GeneratedText></GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="0" selector="proceduralStep">
<BaseProperties propertySetReferences="ProcedureStep_spacing">
<Font weight="normal"/>
<Indent leftIndent="@20mm"/>
<SpaceBefore optimum="Honeywell_Standard_Space"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties
propertySetReferences="Change_bar Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af6b8de27-5c42-4f12-8c43-c311c6a60e23"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8baa4ea8-8c0e-4cb3-8d46-9050c74edada"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="Procedure strps in 2nd level (or more) pmEntries have normal numbering">
<Tests>
<XPathTest expression="count(ancestor::pmEntry) > 1"/></Tests>
<BaseProperties>
<Indent firstLineIndent="*-1in" leftIndent="@1in"/>
<SpaceAfter optimum="6pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad6f3b675-5b19-4dd1-935b-3a3625f17390"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Weight="bold"><_gte:ElementLabelAndNumber
display="A"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0.5in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="A"
numberSuffix="."
numberXPath="count(preceding-sibling::proceduralStep)+count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/procedure/mainProcedure/proceduralStep)+1"
tabtoAfter="1in">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae2275424-d142-4057-935a-82d832085016"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A963af580-4774-4b3d-b968-3be242bba5f3"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_gte:ElementLabelAndNumber display="A"/> .<_gte:Leaders
leaderType="text" lenType="specified" specLen="12.00pt" leaderText=""
vshift="0.00pt" leaderSpacing="0.25in"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af5e87222-af3c-4604-a593-83ffaa311540"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="A"
numberXPath="count(preceding-sibling::proceduralStep)+count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/procedure/mainProcedure/proceduralStep)+1"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Ab87a4df5-8714-4238-8d6d-a504828690df"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment='Originally all body procedures had at least two levels of pmEntry. We have seen new cases where that is not true, so also include procedure steps in pmEntries after the introduction.
UPDATE: This is for procedure steps in first-level pmEntries after the Introduction. These will now be numbered starting at "1." (numeric).'
conditionType="elseIf">
<Tests>
<XPathTest
expression="ancestor::pmEntry/preceding-sibling::pmEntry/@pmEntryType='pmt58'"/>
</Tests>
<BaseProperties propertySetReferences="Set_titleNumber">
<Indent firstLineIndent="*-0.5in" leftIndent="@0.5in"/>
<SpaceAfter optimum="6pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A964b6aae-7054-4f2f-ac55-2b714f85ff76"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Weight="bold"><_gte:ElementLabelAndNumber
display="1"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0in" followWith="tab" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
numberSuffix="."
numberXPath="count(preceding-sibling::proceduralStep)+count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/procedure/mainProcedure/proceduralStep)+1"
tabtoAfter="0.5in">
<LabelAndNumber><_gte:Translate translate="off"
id="A5a47e0bd-c290-4893-8db5-a9f8593fab20"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Set_Para_Highlight_Info">
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1eaf1fa9-b7ab-4148-a6c9-60f728e757bd"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_gte:ElementLabelAndNumber display="1"/> .<_gte:Leaders
leaderType="text" lenType="specified" specLen="12.00pt" vshift="0.00pt"
leaderSpacing="0.25in"/><_ufe:LEP_start_change></_ufe:LEP_start_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa4a882e6-7f69-4fa3-8030-1f9013e9db0a"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
numberXPath="count(preceding-sibling::proceduralStep)+count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/procedure/mainProcedure/proceduralStep)+1"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A26ea8ec1-4336-4c06-92b5-e5a8ab94e24a"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition
comment="If the procedure step is empty, don't output a number">
<Tests>
<XPathTest expression="string(.)='' and count(*)=0"/></Tests>
<BaseProperties></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="proceduralStepAlts" style="unstyled">
<Context priority="0" selector="proceduralStepAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="procedure" style="block">
<Context priority="0" selector="procedure">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A4a3bdddc-0ed4-43ee-9be9-58fc1a6b7f7d"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="processCategory" style="unstyled">
<Context priority="0" selector="processCategory">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="procurementData" style="unstyled">
<Context priority="0" selector="procurementData">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="productConfiguration" style="unstyled">
<Context priority="0" selector="productConfiguration">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="productItem" style="unstyled">
<Context priority="0" selector="productItem">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="productSafety" style="unstyled">
<Context priority="0" selector="productSafety">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="productionMaintData" style="unstyled">
<Context priority="0" selector="productionMaintData">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="province" style="unstyled">
<Context priority="0" selector="province">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="pubMedia" style="unstyled">
<Context priority="0" selector="pubMedia">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dc:publisher" style="unstyled">
<Context priority="0" selector="dc:publisher">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="qualityAssurance" style="unstyled">
<Context priority="0" selector="qualityAssurance">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="quantity" style="inline">
<Context
comment='Where there is a minimum and maximum group, each with two quantity values, we need to output it like "from 4 to 6 ozm (113 to 170 g)".'
priority="6"
selector='quantity[count(quantityGroup[@quantityGroupType="minimum"]/quantityValue)=2]'>
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac1e52292-81af-40ac-9181-b20e4bdd5a16"><_gte:Target lang="en"
>from <_gte:ElementContent include="contentOnly"
xpath="quantityGroup[@quantityGroupType='minimum']/quantityValue[1]"
/> to <_gte:ElementContent include="elementAndContent"
xpath="quantityGroup[@quantityGroupType='maximum']/quantityValue[1]"
/> (<_gte:ElementContent include="contentOnly"
xpath="quantityGroup[@quantityGroupType='minimum']/quantityValue[2]"
/> to <_gte:ElementContent include="elementAndContent"
xpath="quantityGroup[@quantityGroupType='maximum']/quantityValue[2]"
/>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context
comment='Where there is a minimum and maximum group, each with one quntity values, we need to output it like "from 4 to 6 ozm".'
priority="3"
selector='quantity[count(quantityGroup[@quantityGroupType="minimum"]/quantityValue)=1]'>
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A446b6c0a-b527-436e-8ad9-f77cf327fdd1"><_gte:Target lang="en"
>from <_gte:ElementContent include="contentOnly"
xpath="quantityGroup[@quantityGroupType='minimum']/quantityValue[1]"
/> to <_gte:ElementContent include="elementAndContent"
xpath="quantityGroup[@quantityGroupType='maximum']/quantityValue[1]"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="quantity">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="quantityGroup" style="inline">
<Context priority="0" selector="quantityGroup">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
<Conditions>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="quantityGroupType" testType="equals"
testValue="minimum"/>
<AttributeTest attributeName="quantityGroupType" testType="equals"
testValue="maximum"/></Tests>
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="quantityPerNextHigherAssy" style="hidden">
<Context priority="0" selector="quantityPerNextHigherAssy">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="quantityPerUnit" style="unstyled">
<Context priority="0" selector="quantityPerUnit">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="quantityTolerance" style="inline">
<Context priority="0" selector="quantityTolerance">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Acbc27311-d0b8-4eae-8b8e-d2789e69c83b"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7615d29e-5fa8-4b0a-95b1-af04675740c4"><_gte:Target lang="en"
> <_gte:AttributeContent attr="quantityUnitOfMeasure" occur="1"
scope="quantityTolerance"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="degC"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A26e4f1e1-6383-41b8-b5ad-fbbf468d9388"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae42fef89-9796-482f-aaa6-dfb4dc2ff8df"><_gte:Target lang="en"
>°C</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="degF"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A8cf7963f-514e-408b-bbbd-4633de77d4c5"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae9a33151-1ca3-42f5-9091-d4b8c0cc51b1"><_gte:Target lang="en"
>°F</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="in2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A6897826d-e5b1-4143-9bdb-2f577208c682"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A6a1b62cb-df30-4287-9f4e-b0a0a55599ae"><_gte:Target lang="en"
> in<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="in3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A9f02c0a5-6024-4b30-9127-51efcf81fd25"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A5f9adea7-4e95-40a2-b04b-0f2906d5f5da"><_gte:Target lang="en"
> in<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="mm2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3feeaec2-8656-4a0c-8ec1-f12eefdbfb94"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A23536f15-3983-48f8-925c-3c3791c06035"><_gte:Target lang="en"
> mm<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="mm3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa2105cf7-7f08-40b9-987b-b5b69ea599d4"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A12dcc07c-cbc6-4ae4-b1b6-45b868d6de34"><_gte:Target lang="en"
> mm<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A34747291-86a2-455e-bba3-c0cce4004f46"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A24ab2038-b2b7-4ca8-a561-baf6c06dae19"><_gte:Target lang="en"
> m<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A12185773-40be-4756-8eaf-b0f8adebff78"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A05729bcd-1094-4503-91ec-02f079622537"><_gte:Target lang="en"
> m<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m/s2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A05db3e05-8d4f-417f-98ea-86cfd3a4e142"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A181f93f0-da00-4418-9288-d2dd7e437e6f"><_gte:Target lang="en"
> m/s<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m/s3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1e9cb17c-0457-4fd5-9810-b289ffcb8c6f"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A2cc73f19-d167-44fc-9f79-b74ae296270c"><_gte:Target lang="en"
> m/s<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="ft2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac77def4f-98b3-4bbc-99c3-b15b39deb463"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad28111ba-cd1b-475c-a9fb-9936005d9ae2"><_gte:Target lang="en"
> ft<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="ft3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A90d14c11-2cd9-4fdd-ab5b-1c0413ec6503"><_gte:Target lang="en"
> ±</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ab3cf6580-c6fa-4c87-a340-4118c0155b69"><_gte:Target lang="en"
> ft<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="quantityValue" style="inline">
<Context priority="25"
selector="quantityGroup[@quantityGroupType!='minimum' and @quantityGroupType!='maximum']/quantityValue[position()>1]">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3d24b63d-687d-4021-a24c-5da8646b6411"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A058b41d6-f9ec-436d-9e8c-eed04d1136c5"><_gte:Target lang="en"
> <_gte:AttributeContent attr="quantityUnitOfMeasure" occur="1"
scope="quantityValue"/>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="degC"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ad5c29bbc-6bc7-4ad8-9131-6a8873c21340"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A7474aa96-5f7b-49b0-9664-f058d715b32f"><_gte:Target lang="en"
>°C)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="degF"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aaf32a3c9-a5b4-42a4-a4f8-721d5b8a43d3"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac1ebe15d-99a0-4349-87f3-20cae491365f"><_gte:Target lang="en"
>°F)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="in2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A21c38dd5-000b-4520-8a3c-ff5afec8161d"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae9e71d84-70b0-468b-9281-e24f4a09ccb9"><_gte:Target lang="en"
> in<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="in3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Adea395a0-d3d2-4e09-b21d-18118298cc17"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A244c527e-b7c3-40ce-8cb2-9ca610b9e875"><_gte:Target lang="en"
> in<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="mm2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa5113176-6398-45ad-9cb1-3e78011f6b2c"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aceaaaa13-db08-44ab-93ad-db3867c710f1"><_gte:Target lang="en"
> mm<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="mm3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ab8aad7fd-8389-486f-8b95-3f9dc2a50273"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A9fa48639-6599-4041-a4dc-6fd56d2f492d"><_gte:Target lang="en"
> mm<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A9b93c65d-0585-44fc-8634-2151e56d21a5"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac1a3a057-7377-4d6c-a08d-77b3e36d620e"><_gte:Target lang="en"
> m<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A5ef3c3ac-e90d-403b-a388-62b3686cd544"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aae53f502-899d-44ac-9e9b-4c7c52f0add8"><_gte:Target lang="en"
> m<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m/s2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3c53b6a9-544b-43a5-aeed-31599f1fb354"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Afebfb320-b51a-4329-89e9-870322925551"><_gte:Target lang="en"
> m/s<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m/s3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A5ed58739-af33-4fb3-9689-5268a7b21c98"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Acca412c6-2960-4aa8-a47b-34bb759443a3"><_gte:Target lang="en"
> m/s<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="ft2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A9fcfba85-62dd-4835-b2e1-8cd83e6acc42"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac9cc87a6-0768-460b-a459-ffc4616a464b"><_gte:Target lang="en"
> ft<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="ft3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ab0daf5dd-7479-4310-9fc4-e8c87e956cbf"><_gte:Target lang="en"
> (</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A09f40987-bf9b-47ce-ae4a-3a20717b23e8"><_gte:Target lang="en"
> ft<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment="Removed Keep-together because it was causing trouble with linebreaks before periods and justification issues."
priority="0" selector="quantityValue">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1e4557eb-bc25-4ee9-a442-8ffb1f9c791d"><_gte:Target lang="en"
> <_gte:AttributeContent attr="quantityUnitOfMeasure" occur="1"
scope="quantityValue"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="degC"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A923a732d-3897-4ac2-9368-dd81e2487212"><_gte:Target lang="en"
>°C</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="degF"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A662e43ef-13b3-46eb-aa08-7fa1ffd97d36"><_gte:Target lang="en"
>°F</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="in2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af602bcbc-6335-4866-87dc-be7ab186325c"><_gte:Target lang="en"
> in<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="in3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A23e56000-6bc0-458d-b2d4-74837eca72e5"><_gte:Target lang="en"
> in<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="mm2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Acc21fd0e-d150-4929-a2be-eb3b14f7dd3b"><_gte:Target lang="en"
> mm<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="mm3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A4d6d42cc-0492-4f3e-8a65-8dfd376988ac"><_gte:Target lang="en"
> mm<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A26b2fb0f-cfcb-4056-9af6-5a116d9aafa3"><_gte:Target lang="en"
> m<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A1bf340fe-4f68-4004-9f65-19957a8a3951"><_gte:Target lang="en"
> m<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m/s2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A7ecf6377-1949-468a-aaf1-ba9812340650"><_gte:Target lang="en"
> m/s<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="m/s3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A2cb1772b-5d48-459d-aa19-c1a57f469ab1"><_gte:Target lang="en"
> m/s<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="ft2"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A3ddbfa20-9b8b-479d-ae5f-8698b21afc5a"><_gte:Target lang="en"
> ft<_gte:Font TypeSize=".69em" Offset=".33em">2</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="ft3"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A40eb62fb-501b-44c0-b985-f6d60c969aba"><_gte:Target lang="en"
> ft<_gte:Font TypeSize=".69em" Offset=".33em">3</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<AttributeTest attributeName="quantityUnitOfMeasure" testType="equals"
testValue="um51"/></Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A78ed5a8f-5aae-495a-bc8b-5e2168fc04a4"><_gte:Target lang="en"
> daN.m</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="randomList" style="bulletedList">
<Context priority="10.005" selector="listItemDefinition//randomList">
<BaseProperties propertySetReferences="Standard_space">
<SpaceAfter optimum="6pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="10" selector="entry//randomList">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="randomList">
<BaseProperties propertySetReferences="Standard_space">
<Indent leftIndent="@0pt"/>
<SpaceAfter optimum="6pt" precedence="medium"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="rcmd" style="unstyled">
<Context priority="0" selector="rcmd">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="rcmdQuantity" style="unstyled">
<Context priority="0" selector="rcmdQuantity">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="realValue" style="unstyled">
<Context priority="0" selector="realValue">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="reasonForAmendment" style="unstyled">
<Context priority="0" selector="reasonForAmendment">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="reasonForSelection" style="inline">
<Context priority="0" selector="reasonForSelection">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="reasonForUpdate" style="block">
<Context priority="0" selector="reasonForUpdate">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="reasonForUpdatePageNumberRef" style="crossReference">
<Context priority="0" selector="reasonForUpdatePageNumberRef">
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A891d323b-9ddf-4bd0-8593-4db4a6c9b765"><_gte:Target lang="en"
current="no"><_dtd:_newline/>(Page <_sfe:CrossReference><_gte:CrossReference
refAttr="reasonForUpdateRefIds" xrefStyle="Page"/></_sfe:CrossReference
>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="referTo" style="block">
<Context priority="10" selector="_ufe:IPD_ReferTo//referTo">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment='Several refTypes have everything in common except the "FOR ..." statement at the end'>
<Tests>
<XPathTest
expression="@refType='rft01' or @refType='rft02' or @refType='rft06' or @refType='rft10' or @refType='rft51' or @refType='rft52' or @refType='rft53' or @refType='rft54'"/>
</Tests>
<BaseProperties></BaseProperties>
<Condition conditionType="if">
<Tests>
<XPathTest
expression="refs/externalPubRef/externalPubRefIdent/externalPubCode"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ab957ccef-67e1-41d7-bdc1-9f399baa0e00"><_gte:Target lang="en"
>(SEE ATA <_gte:ElementContent include="contentOnly"
xpath="refs/externalPubRef/externalPubRefIdent/externalPubCode"/> <_ufe:IPD_ReferToTypeText
></_ufe:IPD_ReferToTypeText>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="New type to refer to a figure by dmRef only; we need to calculate the figure number and figure number variant based on the
pmEntry/dmContent structure" conditionType="elseIf">
<Tests>
<XPathTest expression="refs/dmRef"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ae3c13735-876b-400a-bd84-ca194d814c49"><_gte:Target lang="en"
>(SEE IPL FIG <_ufe:IPD_ReferToFigureDmRef></_ufe:IPD_ReferToFigureDmRef
> <_ufe:IPD_ReferToTypeText></_ufe:IPD_ReferToTypeText>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition
comment="Note: intentionally no space after the _ufe:IPD_ReferToItemNumCheck (that UFE adds it if necessary)"
conditionType="elseIf">
<Tests>
<XPathTest
expression="catalogSeqNumberRef/@assyCode=ancestor::catalogSeqNumber/@assyCode"/>
<XPathTest
expression="catalogSeqNumberRef/@subSubSystemCode=ancestor::catalogSeqNumber/@subSubSystemCode"/>
<XPathTest
expression="catalogSeqNumberRef/@subSystemCode=ancestor::catalogSeqNumber/@subSystemCode"/>
<XPathTest
expression="catalogSeqNumberRef/@systemCode=ancestor::catalogSeqNumber/@systemCode"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A001239d5-e4f1-42d9-ad76-7ae441301ed5"><_gte:Target lang="en"
>(SEE IPL FIG <_ufe:IPD_ReferToFigNums></_ufe:IPD_ReferToFigNums> <_ufe:IPD_ReferToTypeText
></_ufe:IPD_ReferToTypeText>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ab6c03cb6-7ef7-4cbb-b8ef-cb22f88ed82a"><_gte:Target lang="en"
>(SEE CMM <_gte:AttributeContent attr="systemCode"
xpath="ancestor::itemSeqNumber/partLocationSegment/referTo/catalogSeqNumberRef"
/>-<_gte:AttributeContent attr="subSystemCode"
xpath="ancestor::itemSeqNumber/partLocationSegment/referTo/catalogSeqNumberRef"
/><_gte:AttributeContent attr="subSubSystemCode"
xpath="ancestor::itemSeqNumber/partLocationSegment/referTo/catalogSeqNumberRef"
/>-<_gte:AttributeContent attr="assyCode"
xpath="ancestor::itemSeqNumber/partLocationSegment/referTo/catalogSeqNumberRef"
/> <_ufe:IPD_ReferToTypeText></_ufe:IPD_ReferToTypeText>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest expression="@refType='rft03'"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ada97cec5-c9d3-471e-bb75-0646a7606302"><_gte:Target lang="en"
>(SEE IPL FIG <_ufe:IPD_ReferToFigNums></_ufe:IPD_ReferToFigNums> FOR
OPT MFG PN)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Condition conditionType="if">
<Tests>
<XPathTest
expression="refs/externalPubRef/externalPubRefIdent/externalPubCode"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A64ceb8c0-7d2d-4185-9728-1df06f418c30"><_gte:Target lang="en"
>(SEE ATA <_gte:ElementContent include="contentOnly"
xpath="refs/externalPubRef/externalPubRefIdent/externalPubCode"/> FOR
OPT MFG PN)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition conditionType="else">
<BaseProperties></BaseProperties>
<Condition>
<Tests>
<XPathTest
expression="refs/externalPubRef/externalPubRefIdent/externalPubCode"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Ac323937c-1037-44d5-9837-3072f9b230d7"><_gte:Target lang="en"
>(SEE ATA <_gte:ElementContent include="contentOnly"
xpath="refs/externalPubRef/externalPubRefIdent/externalPubCode"/>)</_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context
comment="Hidden in normal flow (only output from UFE IPD_ReferTo"
priority="0" selector="referTo">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="referencedApplicGroup" style="block">
<Context priority="0" selector="referencedApplicGroup">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="referencedApplicGroupRef" style="unstyled">
<Context priority="0" selector="referencedApplicGroupRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="refs" style="hidden">
<Context priority="0" selector="refs">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="remarks" style="block">
<Context priority="0" selector="remarks">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="removalOrInstallationQuantity" style="unstyled">
<Context priority="0" selector="removalOrInstallationQuantity">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="repair" style="block">
<Context priority="0" selector="repair">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Af609b8a8-059e-4e29-b24d-e7e4b6060224"><_gte:Target lang="en"
><_gte:Font Weight="bold">Repair: </_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="replacedBy" style="unstyled">
<Context priority="0" selector="replacedBy">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="replacementCond" style="unstyled">
<Context priority="0" selector="replacementCond">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="repositorySourceDmIdent" style="unstyled">
<Context priority="0" selector="repositorySourceDmIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="reqCond" style="hidden">
<Context priority="0" selector="reqCond">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="reqCondCircuitBreaker" style="unstyled">
<Context priority="0" selector="reqCondCircuitBreaker">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="reqCondDm" style="block">
<Context priority="0" selector="reqCondDm">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2d7c3fb6-e1ff-4cec-8842-2abd7bd39538"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="bottom"><_dtd:tgroup
cols="2"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0"><_gte:ElementContent include="contentOnly" occur="1"
scope="reqCondNoRef" elem="reqCond"/></_dtd:entry><_dtd:entry colsep="0"
><_gte:ElementContent include="contentOnly" occur="1" scope="reqCondDm"
elem="dmRef"/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(following-sibling::*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8520f08d-3029-49cd-96db-729b3c551adb"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="bottom"><_dtd:tgroup
cols="2"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0"><_gte:ElementContent include="contentOnly" occur="1"
scope="reqCondNoRef" elem="reqCond"/><_gte:ElementContent
include="contentOnly" occur="1" scope="reqCondDm" elem="reqCond"/></_dtd:entry
><_dtd:entry colsep="0"><_gte:ElementContent include="contentOnly"
occur="1" scope="reqCondDm" elem="dmRef"/></_dtd:entry></_dtd:row
></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:RequirementsTableRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="reqCondExternalPub" style="unstyled">
<Context priority="0" selector="reqCondExternalPub">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="reqCondGroup" style="hidden">
<Context priority="0" selector="reqCondGroup">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="reqCondNoRef" style="block">
<Context priority="0" selector="reqCondNoRef">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8bc5f618-3af3-458b-a0aa-1f6712b8d4f9"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="none"><_dtd:tgroup
cols="2"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0"><_gte:ElementContent include="contentOnly" occur="1"
scope="reqCondNoRef" elem="reqCond"/></_dtd:entry><_dtd:entry colsep="0"
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:RequirementsTableRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(following-sibling::*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A56e0b9a5-dbef-41e8-b547-4455a059d10d"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="bottom"><_dtd:tgroup
cols="2"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0"><_gte:ElementContent include="contentOnly" occur="1"
scope="reqCondNoRef" elem="reqCond"/></_dtd:entry><_dtd:entry colsep="0"
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:RequirementsTableRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="reqCondPm" style="unstyled">
<Context priority="0" selector="reqCondPm">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="reqPersons" style="block">
<Context priority="0" selector="reqPersons">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa704b74e-4c30-4870-b658-7707a0e3c124"><_gte:Target lang="en"
><_ufe:SubHeading>Required Persons</_ufe:SubHeading><_dtd:table
frame="topbot"><_dtd:title>Required Persons</_dtd:title><_dtd:tgroup
cols="2"><_dtd:colspec colname="col1"/><_dtd:colspec colname="col2"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_ufe:TableHeading
>Person</_ufe:TableHeading></_dtd:entry><_dtd:entry><_ufe:TableHeading
>Category</_ufe:TableHeading></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="reqQuantity" style="block">
<Context priority="20.01" selector="spareDescr/reqQuantity">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="20.005" selector="supplyDescr/reqQuantity">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="20" selector="supportEquipDescr/reqQuantity">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="reqQuantity">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A50301b28-f5d1-4048-af83-414bd28a5dc9"><_gte:Target lang="en"
> <_gte:AttributeContent attr="unitOfMeasure" occur="1"
scope="reqQuantity"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="reqSafety" style="block">
<Context priority="0" selector="reqSafety">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A2e07083e-f0d9-490e-9e55-f0255b1167c9"><_gte:Target lang="en"
><_ufe:SubHeading>Safety Conditions</_ufe:SubHeading></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A317d2eac-71bd-42c0-b32c-936e1e1b1888"><_gte:Target lang="en"
><_ufe:SubHeading>Safety Conditions</_ufe:SubHeading><_ufe:NoSafetyRow
></_ufe:NoSafetyRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: reqSafety

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 1;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' && contextProp.isHidden == 0)
{
   var stream = template.content.getStream('stylesheet0:Element:reqSafety:reqSafety:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:reqSafety:reqSafety:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A2e07083e-f0d9-490e-9e55-f0255b1167c9\"><_gte:Target lang=\"en\"><_ufe:SubHeading>Safety Conditions</_ufe:SubHeading></_gte:Target></_gte:Translate>" );
      stream.write( "</_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( count(*)=0 )", 130, template.primaryStream, null ) != 0 && contextProp.isHidden == 0)
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:reqSafety:reqSafety:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:reqSafety:reqSafety:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A317d2eac-71bd-42c0-b32c-936e1e1b1888\"><_gte:Target lang=\"en\"><_ufe:SubHeading>Safety Conditions</_ufe:SubHeading><_ufe:NoSafetyRow></_ufe:NoSafetyRow>" );
         stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
   }
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: reqSafety

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="reqSpares" style="block">
<Context priority="0" selector="reqSpares">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aeac25e51-89a1-4e17-93fd-bf5984efcf2f"><_gte:Target lang="en"
><_ufe:SubHeading>Spares</_ufe:SubHeading><_ufe:RequirementsTableHeadingRow
><_dtd:table frame="topbot"><_dtd:title>Spares</_dtd:title><_dtd:tgroup
cols="3"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:colspec colname="COLSPEC0"
colwidth="0.75in"/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_ufe:TableHeading
>Nomenclature</_ufe:TableHeading></_dtd:entry><_dtd:entry colsep="0"
><_ufe:TableHeading>Identification no.</_ufe:TableHeading></_dtd:entry
><_dtd:entry><_ufe:TableHeading>Qty</_ufe:TableHeading></_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:RequirementsTableHeadingRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(spareDescrGroup/*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A5a48b48a-d200-4f97-8b35-88021026ee32"><_gte:Target lang="en"
><_ufe:SubHeading>Spares</_ufe:SubHeading><_ufe:NoSafetyRow></_ufe:NoSafetyRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: reqSpares

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 1;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' && contextProp.isHidden == 0)
{
   var stream = template.content.getStream('stylesheet0:Element:reqSpares:reqSpares:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:reqSpares:reqSpares:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Aeac25e51-89a1-4e17-93fd-bf5984efcf2f\"><_gte:Target lang=\"en\"><_ufe:SubHeading>Spares</_ufe:SubHeading><_ufe:RequirementsTableHeadingRow><table frame=\"topbot\">" );
      stream.write( "<title>Spares</title><tgroup cols=\"3\"><colspec colname=\"col1\" colwidth=\"1.50*\"/><colspec colname=\"col2\" colwidth=\"1.50*\"/><colspec colname=\"COLSPEC0\" colwidth=\"0.75in\"/><tbody><row><entry colsep=\"0\"><_ufe:TableHeading>" );
      stream.write( "Nomenclature</_ufe:TableHeading></entry><entry colsep=\"0\"><_ufe:TableHeading>Identification no.</_ufe:TableHeading></entry><entry><_ufe:TableHeading>Qty</_ufe:TableHeading></entry></row></tbody></tgroup>" );
      stream.write( "</table></_ufe:RequirementsTableHeadingRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( count(spareDescrGroup/*)=0 )", 130, template.primaryStream, null ) != 0 && contextProp.isHidden == 0)
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:reqSpares:reqSpares:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:reqSpares:reqSpares:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A5a48b48a-d200-4f97-8b35-88021026ee32\"><_gte:Target lang=\"en\"><_ufe:SubHeading>Spares</_ufe:SubHeading><_ufe:NoSafetyRow></_ufe:NoSafetyRow></_gte:Target>" );
         stream.write( "</_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
   }
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: reqSpares

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="reqSupplies" style="block">
<Context priority="0" selector="reqSupplies">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A5b1b7d51-5d80-4a25-a0bf-848b52b2659f"><_gte:Target lang="en"
><_ufe:SubHeading>Consumables, Materials and Expendables</_ufe:SubHeading
><_ufe:RequirementsTableHeadingRow><_dtd:table frame="topbot"><_dtd:title
>Consumables, Materials and Expendables</_dtd:title><_dtd:tgroup
cols="3"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:colspec colname="COLSPEC0"
colwidth="0.75in"/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_ufe:TableHeading
>Nomenclature</_ufe:TableHeading></_dtd:entry><_dtd:entry colsep="0"
><_ufe:TableHeading>Identification no.</_ufe:TableHeading></_dtd:entry
><_dtd:entry><_ufe:TableHeading>Qty</_ufe:TableHeading></_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:RequirementsTableHeadingRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: reqSupplies

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isBlock =  isBlock = 1;

if ( formatting.evaluateXPath( " boolean( count(supplyDescrGroup)=0 )", 130, template.primaryStream, null ))
{
	contextProp.isHidden = 1;
}
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' && contextProp.isHidden == 0)
{
   var stream = template.content.getStream('stylesheet0:Element:reqSupplies:reqSupplies:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:reqSupplies:reqSupplies:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A5b1b7d51-5d80-4a25-a0bf-848b52b2659f\"><_gte:Target lang=\"en\"><_ufe:SubHeading>Consumables, Materials and Expendables</_ufe:SubHeading><_ufe:RequirementsTableHeadingRow>" );
      stream.write( "<table frame=\"topbot\"><title>Consumables, Materials and Expendables</title><tgroup cols=\"3\"><colspec colname=\"col1\" colwidth=\"1.50*\"/><colspec colname=\"col2\" colwidth=\"1.50*\"/><colspec colname=\"COLSPEC0\" colwidth=\"0.75in\"/>" );
      stream.write( "<tbody><row><entry colsep=\"0\"><_ufe:TableHeading>Nomenclature</_ufe:TableHeading></entry><entry colsep=\"0\"><_ufe:TableHeading>Identification no.</_ufe:TableHeading></entry><entry><_ufe:TableHeading>Qty</_ufe:TableHeading>" );
      stream.write( "</entry></row></tbody></tgroup></table></_ufe:RequirementsTableHeadingRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: reqSupplies

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="reqSupportEquips" style="block">
<Context priority="0" selector="reqSupportEquips">
<BaseProperties>
<Hidden hidden="no"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aee3261bf-f8a3-49b7-a747-51c614912f15"><_gte:Target lang="en"
><_ufe:RequirementsTableHeadingRow><_dtd:table frame="topbot"><_dtd:title
>Support Equipment</_dtd:title><_dtd:tgroup cols="3"><_dtd:colspec
colname="col1" colwidth="1.50*"/><_dtd:colspec colname="col2"
colwidth="1.50*"/><_dtd:colspec colname="COLSPEC0" colwidth="0.75in"
/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_ufe:TableHeading
>Nomenclature</_ufe:TableHeading></_dtd:entry><_dtd:entry colsep="0"
><_ufe:TableHeading>Identification no.</_ufe:TableHeading></_dtd:entry
><_dtd:entry><_ufe:TableHeading>Qty</_ufe:TableHeading></_dtd:entry
></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_ufe:RequirementsTableHeadingRow
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(supportEquipDescrGroup/*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aec640639-c16f-4df4-a66c-effa33cf3065"><_gte:Target lang="en"
><_ufe:SubHeading>Support Equipment</_ufe:SubHeading><_ufe:NoSafetyRow
></_ufe:NoSafetyRow></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: reqSupportEquips

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 1;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;

// context preamble complete.

contextProp.isHidden = 1;
contextProp.isBlock =  isBlock = 1;
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' && contextProp.isHidden == 0)
{
   var stream = template.content.getStream('stylesheet0:Element:reqSupportEquips:reqSupportEquips:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:reqSupportEquips:reqSupportEquips:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Aee3261bf-f8a3-49b7-a747-51c614912f15\"><_gte:Target lang=\"en\"><_ufe:RequirementsTableHeadingRow><table frame=\"topbot\"><title>Support Equipment</title>" );
      stream.write( "<tgroup cols=\"3\"><colspec colname=\"col1\" colwidth=\"1.50*\"/><colspec colname=\"col2\" colwidth=\"1.50*\"/><colspec colname=\"COLSPEC0\" colwidth=\"0.75in\"/><tbody><row><entry colsep=\"0\"><_ufe:TableHeading>Nomenclature</_ufe:TableHeading>" );
      stream.write( "</entry><entry colsep=\"0\"><_ufe:TableHeading>Identification no.</_ufe:TableHeading></entry><entry><_ufe:TableHeading>Qty</_ufe:TableHeading></entry></row></tbody></tgroup></table></_ufe:RequirementsTableHeadingRow>" );
      stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( count(supportEquipDescrGroup/*)=0 )", 130, template.primaryStream, null ) != 0 && contextProp.isHidden == 0)
{
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:reqSupportEquips:reqSupportEquips:addBefore_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:reqSupportEquips:reqSupportEquips:addBefore_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"Aec640639-c16f-4df4-a66c-effa33cf3065\"><_gte:Target lang=\"en\"><_ufe:SubHeading>Support Equipment</_ufe:SubHeading><_ufe:NoSafetyRow></_ufe:NoSafetyRow>" );
         stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      currentNode.augmentAfter( null );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
   }
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.spanParents = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: reqSupportEquips

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();


if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
</Element>
<Element name="reqTechInfo" style="unstyled">
<Context priority="0" selector="reqTechInfo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="reqTechInfoGroup" style="unstyled">
<Context priority="0" selector="reqTechInfoGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="xlink:resource" style="unstyled">
<Context priority="0" selector="xlink:resource">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="responsiblePartnerCompany" style="unstyled">
<Context priority="0" selector="responsiblePartnerCompany">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="restrictedOperationNote" style="unstyled">
<Context priority="0" selector="restrictedOperationNote">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="restrictionInfo" style="unstyled">
<Context priority="0" selector="restrictionInfo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="restrictionInstructions" style="unstyled">
<Context priority="0" selector="restrictionInstructions">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="retrofit" style="unstyled">
<Context priority="0" selector="retrofit">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dc:rights" style="unstyled">
<Context priority="0" selector="dc:rights">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="room" style="unstyled">
<Context priority="0" selector="room">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="row" style="table">
<Context priority="0" selector="row">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment='Special "keepWithNext" attribute (non-DTD) used by the LEP to keep LEP subheadings with the following row.'>
<Tests>
<AttributeTest attributeName="keepWithNext" testType="equals"
testValue="1"/></Tests>
<BaseProperties>
<Keep keepScope="withinColumn" withNext="6"/></BaseProperties>
</Condition>
<Condition comment="Keep Table of Highlights rows together">
<Tests>
<XPathTest expression="ancestor::_ufe:TableOfHighlights"/></Tests>
<BaseProperties>
<Keep together="4"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="safetyCategory" style="unstyled">
<Context priority="0" selector="safetyCategory">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="safetyRqmts" style="block">
<Context priority="0" selector="safetyRqmts">
<BaseProperties>
<SpaceBefore optimum="8pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="secondVerification" style="unstyled">
<Context priority="0" selector="secondVerification">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
comment="A special element not in the original S1000D schema added to generate a section prefix in certain contexts where UFEs are unavailable."
name="sectionPrefix" style="inline">
<Context priority="0" selector="sectionPrefix">
<BaseProperties>
<Breaks blockOrInline="inline"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A86da0326-8d54-4d2b-8977-1ea15d1fd10b"><_gte:Target lang="en"
><_gte:AttributeContent attr="pmEntryType"
xpath="ancestor::pmEntry[last()]"/>Z</_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="security" style="unstyled">
<Context priority="0" selector="security">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="selectOrManufacture" style="unstyled">
<Context priority="0" selector="selectOrManufacture">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="selectOrManufactureFromIdent" style="unstyled">
<Context priority="0" selector="selectOrManufactureFromIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="sequentialList" style="numberedList">
<Context priority="0" selector="sequentialList">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="serialNumber" style="unstyled">
<Context priority="0" selector="serialNumber">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="service" style="unstyled">
<Context priority="0" selector="service">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="setFunction" style="unstyled">
<Context priority="0" selector="setFunction">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="setOperator" style="unstyled">
<Context priority="0" selector="setOperator">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="setValue" style="unstyled">
<Context priority="0" selector="setValue">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="shelfLife" style="unstyled">
<Context priority="0" selector="shelfLife">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="shippingInfo" style="unstyled">
<Context priority="0" selector="shippingInfo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="shortExternalPubTitle" style="unstyled">
<Context priority="0" selector="shortExternalPubTitle">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="shortName" style="hidden">
<Context priority="0" selector="shortName">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="shortPmTitle" style="unstyled">
<Context priority="0" selector="shortPmTitle">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="simplePara" style="block">
<Context priority="10.005" selector="_ufe:TableOfHighlights//simplePara">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(preceding-sibling::simplePara)=0"/></Tests>
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="10"
selector="_ufe:FooterApplicabilityStyle//simplePara">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="0" selector="simplePara">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/>
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="add"/>
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="modify"/></Tests>
<BaseProperties propertySetReferences="Change_bar"></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="simpleRemark" style="unstyled">
<Context priority="0" selector="simpleRemark">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="skillLevel" style="unstyled">
<Context priority="0" selector="skillLevel">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="sourceDmIdent" style="unstyled">
<Context priority="0" selector="sourceDmIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="sourceMaintRecoverability" style="unstyled">
<Context priority="0" selector="sourceMaintRecoverability">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="sourcePmIdent" style="unstyled">
<Context priority="0" selector="sourcePmIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="spanspec" style="unstyled">
<Context priority="0" selector="spanspec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="spareDescr" style="block">
<Context priority="0" selector="spareDescr">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Add4beb74-1f98-4b25-a6ab-e06e3ba9c630"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="none"><_dtd:tgroup
cols="3"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:colspec colname="COLSPEC0"
colwidth="0.75in"/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:ElementContent
include="contentOnly" xpath="name"/></_dtd:entry><_dtd:entry colsep="0"
><_gte:ElementContent include="elementAndContent" occur="1"
scope="spareDescr" elem="partRef"/></_dtd:entry><_dtd:entry><_gte:ElementContent
include="elementAndContent" occur="1" scope="spareDescr"
elem="reqQuantity"/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(following-sibling::*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9c35adde-150e-48a6-b3cf-1b0456afc0f7"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="bottom"><_dtd:tgroup
cols="3"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:colspec colname="COLSPEC0"
colwidth="0.75in"/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_gte:ElementContent
include="contentOnly" xpath="name"/></_dtd:entry><_dtd:entry colsep="0"
><_gte:ElementContent include="elementAndContent" occur="1"
scope="spareDescr" elem="partRef"/></_dtd:entry><_dtd:entry><_gte:ElementContent
include="elementAndContent" occur="1" scope="spareDescr"
elem="reqQuantity"/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="spareDescrGroup" style="block">
<Context priority="0" selector="spareDescrGroup">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A33c15be8-d889-44ce-89e5-2a2858c5e6b5"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="sparePartClass" style="unstyled">
<Context priority="0" selector="sparePartClass">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="specDocument" style="unstyled">
<Context priority="0" selector="specDocument">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="specGroup" style="unstyled">
<Context priority="0" selector="specGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="specialStorage" style="unstyled">
<Context priority="0" selector="specialStorage">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="sru" style="unstyled">
<Context priority="0" selector="sru">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="sruItem" style="unstyled">
<Context priority="0" selector="sruItem">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="state" style="unstyled">
<Context priority="0" selector="state">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="street" style="unstyled">
<Context priority="0" selector="street">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="stringFunction" style="unstyled">
<Context priority="0" selector="stringFunction">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="stringOperator" style="unstyled">
<Context priority="0" selector="stringOperator">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="stringValue" style="unstyled">
<Context priority="0" selector="stringValue">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="subScript" style="inline">
<Context priority="0" selector="subScript">
<BaseProperties>
<Font size=".69em"/>
<Highlight offset="-0.15em"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="subStringFunction" style="unstyled">
<Context priority="0" selector="subStringFunction">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="subStringLength" style="unstyled">
<Context priority="0" selector="subStringLength">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="subStringPosition" style="unstyled">
<Context priority="0" selector="subStringPosition">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dc:subject" style="unstyled">
<Context priority="0" selector="dc:subject">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="subjectIdent" style="unstyled">
<Context priority="0" selector="subjectIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="subjectVariantSegment" style="unstyled">
<Context priority="0" selector="subjectVariantSegment">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="superScript" style="inline">
<Context priority="0" selector="superScript">
<BaseProperties>
<Font size=".69em"/>
<Highlight offset="0.33em"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="supersedure" style="unstyled">
<Context priority="0" selector="supersedure">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyClassification" style="unstyled">
<Context priority="0" selector="supplyClassification">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyDescr" style="block">
<Context priority="0" selector="supplyDescr">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8e7ad322-0a12-4e62-a13e-4fd63ecc3d66"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="none"><_dtd:tgroup
cols="3"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:colspec colname="COLSPEC0"
colwidth="0.85in"/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_ufe:SupplyNameText
></_ufe:SupplyNameText></_dtd:entry><_dtd:entry colsep="0"><_gte:ElementContent
include="elementAndContent" occur="1" scope="supplyDescr"
elem="supplyRef"/></_dtd:entry><_dtd:entry><_gte:ElementContent
include="elementAndContent" occur="1" scope="supplyDescr"
elem="reqQuantity"/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(following-sibling::*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A30ad6003-46e1-43a9-b0d9-841da7319df6"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="bottom"><_dtd:tgroup
cols="3"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:colspec colname="COLSPEC0"
colwidth="0.85in"/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_ufe:SupplyNameText
></_ufe:SupplyNameText></_dtd:entry><_dtd:entry colsep="0"><_gte:ElementContent
include="elementAndContent" occur="1" scope="supplyDescr"
elem="supplyRef"/></_dtd:entry><_dtd:entry><_gte:ElementContent
include="elementAndContent" occur="1" scope="supplyDescr"
elem="reqQuantity"/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="supplyDescrGroup" style="block">
<Context priority="0" selector="supplyDescrGroup">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A809a394c-1b3c-4a99-8950-eca69badc720"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="supplyIdent" style="unstyled">
<Context priority="0" selector="supplyIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRef" style="block">
<Context priority="20" selector="supplyDescr/supplyRef">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context
comment="Default version just prints local supply number. The conditions below should retrieve the appropriate
information from the supply repository." priority="0"
selector="supplyRef">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ae36e1bae-14cf-4b7a-9142-0dba4564f1fd"><_gte:Target lang="en"
><_ufe:SupplyRefText></_ufe:SupplyRefText></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="supplyRepository" style="unstyled">
<Context priority="0" selector="supplyRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRqmt" style="unstyled">
<Context priority="0" selector="supplyRqmt">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRqmtAltIdent" style="unstyled">
<Context priority="0" selector="supplyRqmtAltIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRqmtAltStatus" style="unstyled">
<Context priority="0" selector="supplyRqmtAltStatus">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRqmtAlts" style="unstyled">
<Context priority="0" selector="supplyRqmtAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRqmtIdent" style="unstyled">
<Context priority="0" selector="supplyRqmtIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRqmtRef" style="unstyled">
<Context priority="0" selector="supplyRqmtRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRqmtRepository" style="unstyled">
<Context priority="0" selector="supplyRqmtRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRqmtSpec" style="unstyled">
<Context priority="0" selector="supplyRqmtSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplyRqmtStatus" style="unstyled">
<Context priority="0" selector="supplyRqmtStatus">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplySet" style="unstyled">
<Context priority="0" selector="supplySet">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplySetGroup" style="unstyled">
<Context priority="0" selector="supplySetGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supplySpec" style="unstyled">
<Context priority="0" selector="supplySpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="supportEquipDescr" style="block">
<Context priority="0" selector="supportEquipDescr">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab50a200a-3ef2-4bb9-be65-84279b30dca8"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="none"><_dtd:tgroup
cols="3"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:colspec colname="COLSPEC0"
colwidth="0.85in"/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_ufe:ToolNameText
></_ufe:ToolNameText></_dtd:entry><_dtd:entry colsep="0"><_gte:ElementContent
include="elementAndContent" occur="1" scope="supportEquipDescr"
elem="toolRef"/></_dtd:entry><_dtd:entry><_gte:ElementContent
include="elementAndContent" occur="1" scope="supportEquipDescr"
elem="reqQuantity"/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(following-sibling::*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1bd9dfec-a83c-444f-af1d-a7c45dc2e9de"><_gte:Target lang="en"
><_ufe:RequirementsTableRow><_dtd:table frame="bottom"><_dtd:tgroup
cols="3"><_dtd:colspec colname="col1" colwidth="1.50*"/><_dtd:colspec
colname="col2" colwidth="1.50*"/><_dtd:colspec colname="COLSPEC0"
colwidth="0.85in"/><_dtd:tbody><_dtd:row><_dtd:entry colsep="0"><_ufe:ToolNameText
></_ufe:ToolNameText></_dtd:entry><_dtd:entry colsep="0"><_gte:ElementContent
include="elementAndContent" occur="1" scope="supportEquipDescr"
elem="toolRef"/></_dtd:entry><_dtd:entry><_gte:ElementContent
include="elementAndContent" occur="1" scope="supportEquipDescr"
elem="reqQuantity"/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_ufe:RequirementsTableRow></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="supportEquipDescrGroup" style="block">
<Context priority="0" selector="supportEquipDescrGroup">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(*)=0"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aaf1844bd-609b-469b-9141-9f565cc2f8bc"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="symbol" style="graphic">
<GraphicDetails filename="xlink:href"></GraphicDetails>
<Context priority="0" selector="symbol">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="If there is no text in the parent element (generally a para), then make it block formatted and centred">
<Tests>
<XPathTest expression="not(parent::*/text())"/></Tests>
<BaseProperties>
<Indent leftIndent="0in"/>
<Alignment align="center"/>
<SpaceAfter optimum="Honeywell_Standard_Space"/></BaseProperties>
</Condition>
<Condition conditionType="else">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Condition>
</Conditions>
</Context>
</Element>
<Element name="systemBreakdownCode" style="unstyled">
<Context priority="0" selector="systemBreakdownCode">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="systemIdent" style="unstyled">
<Context priority="0" selector="systemIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="systemLocation" style="unstyled">
<Context priority="0" selector="systemLocation">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="systemName" style="unstyled">
<Context priority="0" selector="systemName">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="systemPosition" style="unstyled">
<Context priority="0" selector="systemPosition">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="table" style="formalBlock">
<Context
comment="Added source edit to specify custom table rules style.
Note: change bars are added on the tgroup instead of here, since they start too high on the page when added here."
priority="16" selector="content//table[@bak]">
<BaseProperties
propertySetReferences="Standard_space Set_Tool_or_Consumable_table_ID">
<Indent leftIndent="0pt"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<AttributeTest attributeName="orient" testType="equals" testValue="land"/>
</Tests>
<BaseProperties>
<Indent leftIndent="0pt"/>
<Breaks newPageSet="Landscape_Page_Set" startNew="page"/>
</BaseProperties>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties>
<Breaks newPageSet="Landscape_Change_Page_Set" startNew="page"/>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="10.02" selector="_ufe:IPD_FunctionalItemRefs//table">
<BaseProperties>
<SpaceBefore optimum="1pt" precedence="force"/>
<SpaceAfter precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="10.015" selector="_ufe:IPD_EDI_PageSet//table">
<BaseProperties>
<SpaceBefore precedence="force"/>
<SpaceAfter precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="10.01" selector="_ufe:IPD_EDI_TableHeader//table">
<BaseProperties>
<SpaceBefore optimum="1pt" precedence="force"/>
<SpaceAfter precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="10.005" selector="_sfe:BeforeOrAfterText//table">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="10" selector="_sfe:Gentext//table">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context
comment="Added source edit to specify custom table rules style.
Note: change bars are added on the tgroup instead of here, since they start too high on the page when added here."
priority="5" selector="content//table">
<BaseProperties
propertySetReferences="Standard_space Set_Tool_or_Consumable_table_ID">
<Indent leftIndent="0pt"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<AttributeTest attributeName="orient" testType="equals" testValue="land"/>
</Tests>
<BaseProperties>
<Indent leftIndent="0pt"/>
<Breaks newPageSet="Landscape_Page_Set" startNew="page"/>
</BaseProperties>
<Condition conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties>
<Breaks newPageSet="Landscape_Change_Page_Set" startNew="page"/>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: content//table

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "table_anywhere_in_content";
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.pdfTag = 'Sect';
contextProp.pdfAttrs = {};
fish[ 'gentextResolved' ] = 0; // Signal to property sets to apply gentext

// Base properties
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Standard_space' ].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_Tool_or_Consumable_table_ID' ].onEnter( block, contextProp );

if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  // The highlight to set acts like a para (i.e., it uses the numbering of the para within which this table exists)
  //fish[ '_propset:Set_Table_Highlight_Info' ] = 1;
  //template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_Table_Highlight_Info' ].onEnter( block, contextProp );
  fish[ '_propset:Set_Para_Highlight_Info' ] = 1;
  template.content.functions[ template.stylerNamespace ].PropertySet[ 'Set_Para_Highlight_Info' ].onEnter( block, contextProp );

}

block.indentStart = '0pt';
block.absoluteStart = 2;
if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
if ( block.defaultRegion ) block.defaultRegion.horizontalAlign = fBlockRegion.ALIGN_LEFT;


if ( formatting.evaluateXPath( "@orient = 'land'", 130, template.primaryStream ) != 0 )
{
  // Base properties
  block.indentStart = '0pt';
  block.absoluteStart = 2;
  contextProp.startNew = 2; // start new page
  contextProp.pageType = 0;
  contextProp.pageSet = 'Landscape_Page_Set';

  if ( formatting.evaluateXPath( " boolean( number(ancestor::pmEntry[last()]/@startat) >= 1000 )", 130, template.primaryStream ) != 0 ) {
    contextProp.pageSet = 'Page_Block_Landscape_Page_Set';
  }


  if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
  {
    // Base properties
    contextProp.startNew = 2; // start new page
    contextProp.pageType = 0;
    contextProp.pageSet = 'Landscape_Change_Page_Set';

    if ( formatting.evaluateXPath( " boolean( number(ancestor::pmEntry[last()]/@startat) >= 1000 )", 130, template.primaryStream ) != 0 ) {
      contextProp.pageSet = 'Page_Block_Landscape_Change_Page_Set';
    }
  }


}
var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
template.content.functions._app.setWantColumnTopMargin( contextProp.wantColumnTopMargin, block );
fish[ 'isHidden' ] = contextProp.isHidden;
if ( contextProp.isHidden == 1 ) {
  currentNode.augmentReference( '_app:hidden', 1 );
  if ( ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ) {
    fish[ 'isHidden' ] = 0;
  } else {
    return;
  }
}

fish[ 'pageSet' ] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' ) {
  if ( contextProp.pageSet != '' ) {
    template.content.functions._app.startPageSet( block, contextProp, 0 );
  } else {
    template.content.functions._app.pageBreak( contextProp, 0 );
  }
} else if ( contextProp.startNew == '1' ) {
  template.content.functions._app.startNewColumn( block, contextProp );
}

if ( block.numColumns > 1 ) {
  template.content.functions._app.configureColumns( block );
}

template.content.functions._app.blockStart( block, false, false );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
fish[ 'customTable' ] = 0;
var attrs = {};
attrs.name = "table_anywhere_in_content";
for ( var arg in arguments[0].attributes ) attrs[ arg ] = arguments[0].attributes[arg];
if ( contextProp.rowWidows != undefined ) attrs.rowWidows = String( contextProp.rowWidows );
if ( contextProp.rowOrphans != undefined ) attrs.rowOrphans = String( contextProp.rowOrphans );
template.content.functions._app.Tables.start_table( { attributes : attrs } );

//******************
// Customization to specify rules for regular tables:

// But only apply to non-front-matter sections. The conditions (XPath) for this were copied from
// the dmodule condition which handled front matter sections differently.
// UPDATE: Also include the Record of Temporary Revisions, which should not have rules added

var isRTR = formatting.evaluateXPath("boolean(ancestor::pmEntry[@pmEntryType='pmt54'])");
var isFrontMatter = formatting.evaluateXPath("count(ancestor::pmEntry) = 1 and name(ancestor::dmodule[1]/parent::*)='dmContent'");

//formatting.output("isRTR: " + isRTR);

// UPDATE: Now the default is to leave full table rules, so just apply this for the Record of Temporary Revisions
//if (isFrontMatter == "0" || isRTR) {
if (isRTR != "0") {
	const tableInfo = this.tableInfo;
	tableInfo.frameRules[0].show = 0; // no left frame rule
	tableInfo.frameRules[1].show = 0; // no right frame rule
	tableInfo.frameRules[2].show = 1; // show top frame rule
	tableInfo.frameRules[3].show = 1; // show bottom frame rule

	tableInfo.borderThickness = '2pt';
	tableInfo.ruleThickness = '1pt';
	tableInfo.cellRules[1].show = 0;	// colsep
	tableInfo.cellRules[3].show = 0;	// rowsep
}

// END customization
//******************

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: content//table

var fish = formatting.fish[ template.stylerFish ];
if ( fish[ 'customTable' ] == 0 ) {
  var attrs = {};
  attrs.name = "table_anywhere_in_content";
  template.content.functions._app.Tables.end_table( { attributes : attrs } );
}
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Standard_space' ].onExit();
if ( fish[ 'isHidden' ] != 1 ) {
  template.content.functions._app.endPdfTag();
  template.content.functions._app.blockEnd( "table_anywhere_in_content", false, false );
  if ( fish[ 'pageSet' ] != '' ) {
    template.content.functions._app.endPageSet();
  }
}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="0" selector="table">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="taskCategory" style="unstyled">
<Context priority="0" selector="taskCategory">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="taskDuration" style="unstyled">
<Context priority="0" selector="taskDuration">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="tbody" style="table">
<Context priority="0" selector="tbody">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="techData" style="unstyled">
<Context priority="0" selector="techData">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="techName" style="inline">
<Context priority="0" selector="techName">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="techPubBase" style="unstyled">
<Context priority="0" selector="techPubBase">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="techStandard" style="block">
<Context priority="0" selector="techStandard">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="termTitle" style="unstyled">
<Context priority="0" selector="termTitle">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="testDescr" style="unstyled">
<Context priority="0" selector="testDescr">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="testName" style="unstyled">
<Context priority="0" selector="testName">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="testParameters" style="unstyled">
<Context priority="0" selector="testParameters">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="testProcedure" style="unstyled">
<Context priority="0" selector="testProcedure">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="tfoot" style="table">
<Context priority="0" selector="tfoot">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="tgroup" style="table">
<Context priority="14" selector="content//tgroup[1]">
<BaseProperties propertySetReferences="Table_space">
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition
comment="This condition is used to centre the landscape table if desired. Disabled for now, but leave here for reference">
<Tests>
<AttributeTest attributeName="orient" testType="equals" testValue="land"/>
<XPathTest expression="@false"/></Tests>
<BaseProperties>
<Indent firstLineIndent="0pt" leftIndent="0pt" rightIndent="0pt"/>
<Alignment align="center"/>
<Breaks startLandPage="yes" startNew="page"/></BaseProperties>
</Condition>
<Condition
comment="Add change bars (but not for landscape tables). Landscape tables will need a special page set, handled on the table tag.
Also add UFEs to save start and end pages for the LEP."
conditionType="if">
<Tests logic="or">
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="add"/>
<AttributeTest attributeName="changeType" elementName="#parent"
testType="equals" testValue="modify"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A2981f17d-57cd-4f6f-969d-c4f4a1b8d14b"><_gte:Target lang="en"
><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab1a297d8-6086-49f9-ab29-383766a984fb"><_gte:Target lang="en"
><_ufe:LEP_end_change></_ufe:LEP_end_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests>
<AttributeTest attributeName="orient" elementName="#parent"
testType="notEqual" testValue="land"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0540e648-0334-4b72-8cbf-073a0e20b614"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/><_ufe:LEP_start_change></_ufe:LEP_start_change></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A3441f098-a04e-4c22-a1c7-9a2d6c4f9114"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/><_ufe:LEP_end_change></_ufe:LEP_end_change
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
</Context>
<Context priority="4" selector="tgroup[1]">
<BaseProperties propertySetReferences="Table_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="tgroup">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="thead" style="table">
<Context priority="10" selector="_ufe:IPD_NumericalIndex//thead">
<BaseProperties>
<SpaceAfter optimum="10pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="thead">
<BaseProperties propertySetReferences="bold">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="thresholdInterval" style="unstyled">
<Context priority="0" selector="thresholdInterval">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="title" style="title">
<Context priority="30" selector="_ufe:TableOfHighlights//table/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_space bold Title_keeps">
<Alignment align="center"/>
<SpaceBefore maximum="8pt" minimum="8pt" optimum="8pt"/>
<SpaceAfter maximum="6pt" minimum="8pt" optimum="8pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="Aa679c60c-6767-459f-922f-51dfb09c96df"><_gte:Target
lang="en"><_ufe:Centre><_gte:Font Weight="bold"><_gte:ElementContent
/> (Continued)</_gte:Font></_ufe:Centre></_gte:Target></_gte:Translate
></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="23.0075" selector="table/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps">
<Font italic="no" weight="bold"/>
<Alignment align="center"/>
<SpaceBefore optimum="10pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aeeedd264-68ec-4897-b0b3-2f71c77888f5"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="Table 1"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="Ad4cec50f-4ce6-4519-a19a-02baf1c4bbea"><_gte:Target
lang="en"><_ufe:Centre><_gte:ElementLabelAndNumber/><_gte:Leaders
leaderType="space" lenType="specified" specLen="1em"/><_gte:ElementContent
include="contentOnly" occur="1" scope="title"/> (Continued)</_ufe:Centre
></_gte:Target></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext
></RepeatingTitle>
<Numbering alignAt="0pt" followWith="emspace" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
numberSuffix="." tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="Ae7186716-7999-4a6c-a0bc-9a0d41b4640d"><_gte:Target lang="en"
>Table <_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes">Table <_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: table/title

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "title_in_table";
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.markerType = '';
contextProp.pdfTag = 'H';
contextProp.pdfAttrs = {};
fish[ 'gentextResolved' ] = 1; // Signal to property sets not to overwrite context gentext

// Base properties
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_font' ].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_color' ].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_alignment' ].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_keeps' ].onEnter( block, contextProp );
style.italic = 0;
style.weight = fStyle.WEIGHT_BOLD;

var isACMM = formatting.evaluateXPath("/pm/@type='acmm'");

if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_CENTER;
if ( block.defaultRegion ) block.defaultRegion.horizontalAlign = fBlockRegion.ALIGN_CENTER;
block.marginTop = '10pt';
if ( !arguments[0].source.namespace.children[ 'labelFormat' ] ) {
  var primaryStream = template.content.getStream( template.primaryStream );
  var stream = template.content.createStream( 'labelFormat', primaryStream.type, arguments[0].source.namespace );
  stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\"><_gte:Translate translate=\"on\" id=\"Ae7186716-7999-4a6c-a0bc-9a0d41b4640d\">" );

   // ***** SOURCE EDIT: Add the short prefix of the current pmEntry to the table's number, and sub-section suffix (when specified).
   // UPDATE: But not for ACMM documents
   if ( isACMM == "0") {
     stream.write( "<_gte:Target lang=\"en\">Table <_gte:XPathString expr=\"ancestor::pmEntry/@shortPrefix\"/><_gte:ElementNumber/><_gte:XPathString expr=\"ancestor::pmEntry[count(ancestor::pmEntry)=0]/@authorityName\"/></_gte:Target></_gte:Translate></_app:Gentext>" );
   }
   else {
     stream.write( "<_gte:Target lang=\"en\">Table <_gte:ElementNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );
   }

  currentNode.setUserString('app_hasnumbering','true');
}

var result = currentNode.evaluateXPath( 'ancestor::pmEntry' );
// Don't restart numbering for ACMM documents
if ( isACMM == "0" && result && result.resultType == XPathResult.NODELIST_TYPE ) {
  var ancestor = result.nodeListValue.item(0);
  if ( ancestor.getUserString( '_temp_reset_title45C5A017' ) != '1' ) {
    ancestor.augmentReference( '_app:RestartNumbering title45C5A017', 1 );
    formatting.fish[ template.numberingFish ][ 'title45C5A017' ] = '';
    ancestor.setUserString( '_temp_reset_title45C5A017', '1' );
  }
}

contextProp.markerArgs = { format : "(CURRENT)", labelPlacement : "beforeNumber", numberStyle : "1", numberSuffix : ".", startAtXPath : "ancestor::pmEntry/@startat", labelFormat : arguments[0].source.namespace.children[ 'labelFormat' ], followWith : "&#x20;", countAs : "title45C5A017" };
contextProp.markerType = 'Numbering';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:title:title_in_table:addBefore');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:title:title_in_table:addBefore', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"Aeeedd264-68ec-4897-b0b3-2f71c77888f5\"><_gte:Target lang=\"en\"><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber display=\"Table 1\"/>" );
    stream.write( ".</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentBefore( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasBefore_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}

if ( !arguments[0].source.namespace.children[ 'repeatHeader' ] ) {
  var primaryStream = template.content.getStream( template.primaryStream );
  var stream = template.content.createStream( 'repeatHeader', primaryStream.type, arguments[0].source.namespace );
  stream.write( "<?xml version=\"1.0\"?><_app:RepeatingTitle xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
  stream.write( "<_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate translate=\"on\" id=\"Ad4cec50f-4ce6-4519-a19a-02baf1c4bbea\"><_gte:Target lang=\"en\"><_ufe:Centre><_gte:Font Weight=\"bold\"><_gte:ElementLabelAndNumber/>. " );
  stream.write( "<_gte:ElementContent include=\"contentOnly\" occur=\"1\" scope=\"title\"/> (Continued)</_gte:Font></_ufe:Centre></_gte:Target></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></_app:RepeatingTitle>  " );
  stream.contextsCtrl = template.stylerNamespace + ':Contexts';
  stream.augmentationCtrl =  template.stylerNamespace + ':Contexts';
  stream.stripspaceCtrl = template.stylerNamespace + ':StripSpaceControl';
  stream.mapReturns =  fStream.MAP_RETURNS + fStream.MAP_TO_YBR;
  stream.ignoreSpaces =  fStream.IGNORE_START + fStream.IGNORE_MULTIPLE + fStream.IGNORE_END;
}

contextProp.repeatHeader = arguments[0].source.namespace.children[ 'repeatHeader' ];

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
template.content.functions._app.setWantColumnTopMargin( contextProp.wantColumnTopMargin, block );
fish[ 'isHidden' ] = 0;
if ( contextProp.isHidden == 1 ) {
  currentNode.augmentReference( '_app:hidden', 1 );
  template.content.functions._app.Reference();
}

fish[ 'pageSet' ] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' ) {
  if ( contextProp.pageSet != '' ) {
    template.content.functions._app.startPageSet( block, contextProp, 0 );
  } else {
    template.content.functions._app.pageBreak( contextProp, 0 );
  }
} else if ( contextProp.startNew == '1' ) {
  template.content.functions._app.startNewColumn( block, contextProp );
}

if ( block.numColumns > 1 ) {
  template.content.functions._app.configureColumns( block );
}

template.content.functions._app.repeatHeader( block, contextProp.repeatHeader );
template.content.functions._app.blockStart( block, false, false );
if ( contextProp.markerType != '' ) {
  fish[ 'referenceMode' ] = '';
  template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}

template.content.functions._app.Reference();
template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "false" }} );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: table/title

var fish = formatting.fish[ template.stylerFish ];
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_font' ].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_color' ].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_alignment' ].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_keeps' ].onExit();
template.content.functions._app.endPdfTag();
template.content.functions._app.blockEnd( "title_in_table", false, false );
if ( fish[ 'pageSet' ] != '' ) {
  template.content.functions._app.endPageSet();
}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="20.035" selector="_ufe:IPLFigureTitleForToC/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_formalBlock">
<Hidden hidden="yes"/>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af00f2316-86a2-4225-89db-948f629c3383"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Suppress="yes"><_gte:ElementLabelAndNumber
display="1"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
startAtXPath="(ancestor::pmEntry/@startat)" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="Aeda62c34-9e1c-4452-ab5c-7de1043d0496"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes">Fig <_gte:ElementNumber/></_gte:Target><_gte:Target
lang="en" baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition comment="This should normally be true">
<Tests>
<XPathTest expression="ancestor::illustratedPartsCatalog"/></Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A09f0b59e-ecb8-4750-9855-abdde79df30e"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Suppress="yes"><_gte:ElementLabelAndNumber
display="S"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="A"
stringXPath="concat(number(ancestor::figure/following-sibling::catalogSeqNumber/@figureNumber), ancestor::figure/following-sibling::catalogSeqNumber/@figureNumberVariant)"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A41401aa2-ecff-424d-8165-424c397e83b8"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="20.03" selector="_ufe:FigureTitleForToC/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_formalBlock">
<Hidden hidden="yes"/>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Acad8d674-dc03-4e4e-8b28-c3d85f5663d2"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Suppress="yes"><_gte:ElementLabelAndNumber
display="1"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
startAtXPath="(ancestor::pmEntry/@startat)" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A12da97f9-a56a-40d7-ac33-8e1c36fa4dc3"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes">Fig <_gte:ElementNumber/></_gte:Target><_gte:Target
lang="en" baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="ancestor::pmEntry/@pmEntryType='pmt58'"/></Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af7992292-e9b1-4640-b47d-c6b37ead541d"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Suppress="yes"><_gte:ElementLabelAndNumber
display="INTRO-1"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A689a6b6b-1e91-49d1-803b-21fbdb3590ec"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
startAtXPath="(ancestor::pmEntry/@startat)" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="A592cc1f8-a8bc-4bb8-b0b5-b1afc8a1c5cb"><_gte:Target lang="en"
>INTRO-<_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes">Fig <_gte:ElementNumber/></_gte:Target><_gte:Target
lang="en" baseline="yes"><_gte:ElementNumber/></_gte:Target></_gte:Translate
></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="/pm/@type='im' or /pm/@type='sdim' or /pm/@type='sdom'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A6b3d5828-feed-40b0-ad52-f9989b1facd4"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Suppress="yes"><_gte:ElementLabelAndNumber
display="1"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
startAtXPath="(ancestor::pmEntry/@startat)" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A38da10ba-b191-4f01-b94e-11bc24974cd8"><_gte:Target lang="en"
><_gte:XPathString
expr="ancestor::pmEntry[count(ancestor::pmEntry)=0]/@shortPrefix"
/><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition conditionType="elseIf">
<Tests>
<XPathTest
expression="ancestor::pmEntry[count(ancestor::pmEntry)=0]/@authorityName"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad05499d1-52ab-48e5-9583-934f0be076bb"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Suppress="yes"><_gte:ElementLabelAndNumber
display="1"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
startAtXPath="(ancestor::pmEntry/@startat)" tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="off"
id="A8ebc4864-b5e7-44e7-b7e9-01cdf14408c9"><_gte:Target lang="en"
><_gte:ElementNumber/><_gte:XPathString
expr="ancestor::pmEntry[count(ancestor::pmEntry)=0]/@authorityName"
/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest expression="ancestor::illustratedPartsCatalog"/></Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af1a2959e-8dcf-4c43-81a6-3d7d7fc6deae"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font Suppress="yes"><_gte:ElementLabelAndNumber
display="IPL A"/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="A"
numberXPath="count(ancestor::dmContent/preceding-sibling::dmContent/dmodule/content/illustratedPartsCatalog/figure)"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="Ad678474c-743f-4af4-a8a5-940bc1ee255a"><_gte:Target lang="en"
>IPL <_gte:XPathString
expr="count((ancestor::pmEntry)[last()]/preceding-sibling::pmEntry)+1"
/><_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes" current="no"><_gte:ElementNumber/></_gte:Target><_gte:Target
lang="en" baseline="yes" current="no">IPD <_gte:ElementNumber/></_gte:Target
><_gte:Target lang="en" baseline="yes" current="no">IPD <_gte:ElementNumber
/></_gte:Target><_gte:Target lang="en" baseline="yes" current="no"
>IPD <_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes" current="no">IPD <_gte:ElementNumber/></_gte:Target
><_gte:Target lang="en" baseline="yes" current="no">IPD <_gte:ElementNumber
/></_gte:Target><_gte:Target lang="en" baseline="yes" current="no"
>IPD <_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes" current="no">IPD <_gte:ElementNumber/></_gte:Target
></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="20.025" selector="commonInfoDescrPara/title">
<BaseProperties propertySetReferences="SubHeading">
<SpaceAfter optimum="1em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af302adc0-5f7f-4418-88c1-7f082a82dee0"><_gte:Target lang="en"
><_gte:AttributeContent attr="shortPrefix" occur="ancestor"
elem="pmEntry"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
<Context comment="SOURCE EDIT: Change to Inline" priority="20.0225"
selector="pmEntry[@pmEntryType='pmt77']//levelledPara/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps bold">
<Font size="13"/>
<Alignment align="center"/>
<SpaceBefore optimum="10pt"/>
<SpaceAfter optimum="10pt" precedence="high"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5a41aade-28ca-4c76-9c6e-45e4c2d97ac8"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Af358b1ff-905a-4c83-b5bd-acda200d9742"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest
expression="normalize-space(.)='Copyright - notice' or normalize-space(.)='Copyright - Notice'"/>
</Tests>
<BaseProperties>
<Font size="13pt"/>
<Alignment align="center"/>
<SpaceAfter optimum="13pt"/>
<Breaks startNew="page"/></BaseProperties>
</Condition>
</Conditions>
</Context>
<Context comment="SOURCE EDIT: Change to Inline" priority="20.02"
selector="levelledPara/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps bold">
<SpaceBefore minimum="0em" optimum="10pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A065652f1-98ce-4b40-9720-35317cbb8723"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ac4529623-0bde-4510-8616-1d67b84175f1"><_gte:Target lang="en"
><_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
<Condition>
<Tests>
<XPathTest expression="count(preceding-sibling::*)!=0"/></Tests>
<BaseProperties>
<Indent leftIndent="0pt"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A344e4256-eab4-4510-9e13-1b21bd043234"><_gte:Target lang="en"
> (SUBTASK <_gte:XPathString
expr="(ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument"
/>)</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A04c2bf19-bfee-40e4-9a27-957ccf9af3e8"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A40e4ceb5-1312-494c-9cc3-9dfd25004935"><_gte:Target lang="en"
>(SUBTASK <_gte:XPathString
expr="(ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument"
/>)<_gte:ChangeBarEnd class="default"/></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
<Condition>
<Tests>
<XPathTest expression="parent::levelledPara/@authorityDocument"/>
</Tests>
<BaseProperties>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A2c1a4303-4307-4dbe-8ec6-3b76c654216d"><_gte:Target lang="en"
> <_gte:Font Weight="medium">(SUBTASK <_gte:XPathString
expr="parent::levelledPara/@authorityDocument"/>)</_gte:Font></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
<Condition>
<Tests logic="or">
<AttributeTest attributeName="changeType" testType="equals"
testValue="add"/>
<AttributeTest attributeName="changeType" testType="equals"
testValue="modify"/></Tests>
<BaseProperties>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A61809884-74fe-43bb-8d9c-40de77893f76"><_gte:Target lang="en"
><_gte:ChangeBarBegin class="default" offset="10pt" ruleThick="4pt"
/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A93a07d08-666e-485f-8e27-90e207b35f11"><_gte:Target lang="en"
><_gte:Font Weight="medium">(SUBTASK <_gte:XPathString
expr="parent::levelledPara/@authorityDocument"/>)</_gte:Font><_gte:ChangeBarEnd
class="default"/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Condition>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.1M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: levelledPara/title

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
var block = new fBlock();
var style = block.defaultStyle;
block.name = "title_in_levelledPara";
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.preformatted = false;
contextProp.pdfTag = 'H';
contextProp.pdfAttrs = {};
contextProp.repeatHeader = null;
contextProp.repeatFooter = null;
fish[ 'gentextResolved' ] = 0; // Signal to property sets to apply gentext

// Base properties
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_font' ].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_color' ].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_alignment' ].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_keeps' ].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet[ 'bold' ].onEnter( block, contextProp );
block.marginTop = '10pt';

style.weight = fStyle.WEIGHT_BOLD;

contextProp.isBlock =  isBlock = 0;  // RS: SOURCE EDIT: Change to Inline (was "= 1;")


if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::*)!=0 )", 130, template.primaryStream, null ) != 0 )
{
	contextProp.isBlock =  isBlock = 1; // RS: SOURCE EDIT: Change back to block mode if it's after cautions or warnings
   block.indentStart = '20mm';
   block.absoluteStart = 2;
}


if ( currentNode.getUserString( '_temp_hasAfter_' ) != '1' ) {
  var stream = template.content.getStream('stylesheet0:Element:title:titlebak_in_levelledPara1190:addAfter');
  if ( stream == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    stream = template.content.createStream( 'stylesheet0:Element:title:titlebak_in_levelledPara1190:addAfter', primaryStream.type );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
    stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A760d6345-cc60-4337-be02-f226fda2efee\"><_gte:Target lang=\"en\"><_ufe:SubtaskFromDmRef/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
  }

  currentNode.augmentAfter( stream.xmlDocument );
  currentNode.setUserString( '_temp_hasAfter_', '1' );
  var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
  if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}


fish[ 'gentextResolved' ] = 0; // Allows conditions to overwrite gentext


if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
{
  // Base properties
  if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:title:title_in_levelledPara:addBefore_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:title:title_in_levelledPara:addBefore_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:ChangeBarBegin ruleThick=\"4pt\" offset=\"10pt\" class=\"default\"/><_ufe:LEP_start_change></_ufe:LEP_start_change></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentBefore( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:title:title_in_levelledPara:addAfter_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:title:title_in_levelledPara:addAfter_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_ufe:SubtaskFromDmRef/><_gte:ChangeBarEnd class=\"default\"/><_ufe:LEP_end_change></_ufe:LEP_end_change></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  contextProp.repeatHeader = null;
  contextProp.repeatFooter = null;

}

if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::*)!=0 )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  block.indentStart = '0pt';
  block.absoluteStart = 2;
  if ( currentNode.getUserString( '_temp_hasAfter_Test2' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:title:title_in_levelledPara:addAfter_Test2');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:title:title_in_levelledPara:addAfter_Test2', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_ufe:SubtaskFromDmRef/></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test2', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasBefore_Test2' ) != '1' ) {
    currentNode.augmentBefore( null );
    currentNode.setUserString( '_temp_hasBefore_Test2', '1' );
  }

  contextProp.repeatHeader = null;
  contextProp.repeatFooter = null;


  if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
  {
    // Base properties
    if ( currentNode.getUserString( '_temp_hasBefore_Test3' ) != '1' ) {
      var stream = template.content.getStream('stylesheet0:Element:title:title_in_levelledPara:addBefore_Test3');
      if ( stream == null ) {
        var primaryStream = template.content.getStream( template.primaryStream );
        stream = template.content.createStream( 'stylesheet0:Element:title:title_in_levelledPara:addBefore_Test3', primaryStream.type );
        stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
        stream.write( "<_sfe:BeforeOrAfterText><_gte:ChangeBarBegin ruleThick=\"4pt\" offset=\"10pt\" class=\"default\"/><_ufe:LEP_start_change></_ufe:LEP_start_change></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }

      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test3', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
    }

    if ( currentNode.getUserString( '_temp_hasAfter_Test3' ) != '1' ) {
      var stream = template.content.getStream('stylesheet0:Element:title:title_in_levelledPara:addAfter_Test3');
      if ( stream == null ) {
        var primaryStream = template.content.getStream( template.primaryStream );
        stream = template.content.createStream( 'stylesheet0:Element:title:title_in_levelledPara:addAfter_Test3', primaryStream.type );
        stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
        stream.write( "<_sfe:BeforeOrAfterText><_ufe:SubtaskFromDmRef/><_gte:ChangeBarEnd class=\"default\"/><_ufe:LEP_end_change></_ufe:LEP_end_change></_sfe:BeforeOrAfterText></_app:Gentext>" );
        stream.write( "" );
      }

      currentNode.augmentAfter( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasAfter_Test3', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
    }

    contextProp.repeatHeader = null;
    contextProp.repeatFooter = null;

  }
}

if ( formatting.evaluateXPath( " boolean( parent::levelledPara/@authorityDocument )", 130, template.primaryStream ) != 0 )
{
  // Base properties
  if ( currentNode.getUserString( '_temp_hasAfter_Test4' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:title:title_in_levelledPara:addAfter_Test4');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:title:title_in_levelledPara:addAfter_Test4', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Font Weight=\"medium\"> (Subtask <_gte:XPathString expr=\"parent::levelledPara/@authorityDocument\"/>)</_gte:Font></_sfe:BeforeOrAfterText></_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test4', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

  if ( currentNode.getUserString( '_temp_hasBefore_Test4' ) != '1' ) {
    currentNode.augmentBefore( null );
    currentNode.setUserString( '_temp_hasBefore_Test4', '1' );
  }

  contextProp.repeatHeader = null;
  contextProp.repeatFooter = null;


  if ( formatting.evaluateXPath( "@changeType = 'add' or @changeType = 'modify'", 130, template.primaryStream ) != 0 )
  {
    // Base properties
    if ( currentNode.getUserString( '_temp_hasBefore_Test5' ) != '1' ) {
      var stream = template.content.getStream('stylesheet0:Element:title:title_in_levelledPara:addBefore_Test5');
      if ( stream == null ) {
        var primaryStream = template.content.getStream( template.primaryStream );
        stream = template.content.createStream( 'stylesheet0:Element:title:title_in_levelledPara:addBefore_Test5', primaryStream.type );
        stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
        stream.write( "<_sfe:BeforeOrAfterText><_gte:ChangeBarBegin ruleThick=\"4pt\" offset=\"10pt\" class=\"default\"/><_ufe:LEP_start_change></_ufe:LEP_start_change></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }

      currentNode.augmentBefore( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasBefore_Test5', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
    }

    if ( currentNode.getUserString( '_temp_hasAfter_Test5' ) != '1' ) {
      var stream = template.content.getStream('stylesheet0:Element:title:title_in_levelledPara:addAfter_Test5');
      if ( stream == null ) {
        var primaryStream = template.content.getStream( template.primaryStream );
        stream = template.content.createStream( 'stylesheet0:Element:title:title_in_levelledPara:addAfter_Test5', primaryStream.type );
        stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
        stream.write( "<_sfe:BeforeOrAfterText><_gte:Font Weight=\"medium\"> (Subtask <_gte:XPathString expr=\"parent::levelledPara/@authorityDocument\"/>)</_gte:Font><_gte:ChangeBarEnd class=\"default\"/><_ufe:LEP_end_change></_ufe:LEP_end_change></_sfe:BeforeOrAfterText></_app:Gentext>" );
        stream.write( "" );
      }

      currentNode.augmentAfter( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasAfter_Test5', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
    }

    contextProp.repeatHeader = null;
    contextProp.repeatFooter = null;

  }
}
if ( contextProp.preformatted ) {
  template.content.functions._app.setPreformatted( block );
}

var lang = template.content.functions._app.processLanguageAttr( arguments[ 0 ], style );
template.content.functions._app.setWantColumnTopMargin( contextProp.wantColumnTopMargin, block );
fish[ 'isHidden' ] = contextProp.isHidden;
if ( contextProp.isHidden == 1 ) {
  currentNode.augmentReference( '_app:hidden', 1 );
  template.content.functions._app.Reference();
  if ( ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ) {
    fish[ 'isHidden' ] = 0;
  } else {
    template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "true", expanded : "true", formatStream : template.stylerNamespace + ":TOCs:PDF_Bookmarks:title_in_levelledPara" }} );
    return;
  }
}

fish[ 'pageSet' ] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' ) {
  if ( contextProp.pageSet != '' ) {
    template.content.functions._app.startPageSet( block, contextProp, 0 );
  } else {
    template.content.functions._app.pageBreak( contextProp, 0 );
  }
} else if ( contextProp.startNew == '1' ) {
  template.content.functions._app.startNewColumn( block, contextProp );
}

if ( block.numColumns > 1 ) {
  template.content.functions._app.configureColumns( block );
}

if ( contextProp.repeatHeader != null ) {
  template.content.functions._app.repeatHeader( block, contextProp.repeatHeader );
}

if ( contextProp.repeatFooter != null ) {
  template.content.functions._app.repeatFooter( block, contextProp.repeatFooter );
}

// RS: SOURCE EDIT: Only start block if isBlock = 1
if ( contextProp.isBlock == 1 )
{
	template.content.functions._app.blockStart( block, false, false );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

template.content.functions._app.Reference();
template.content.functions._app.MakeLink( { attributes : { isTitle:1, forTOC : "1", inPDF : "true", expanded : "true", formatStream : template.stylerNamespace + ":TOCs:PDF_Bookmarks:title_in_levelledPara" }} );
template.content.functions._app.startPdfTag( contextProp.pdfTag, contextProp.pdfAttrs, lang, 0, 1 );
]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: levelledPara/title

var fish = formatting.fish[ template.stylerFish ];
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_font' ].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_color' ].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_alignment' ].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet[ 'Title_keeps' ].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet[ 'bold' ].onExit();
if ( fish[ 'isHidden' ] != 1 ) {
  template.content.functions._app.endPdfTag();

  //template.content.functions._app.blockEnd( "title_in_levelledPara", false, false );
  // RS: SOURCE EDIT: only end block if isBlock = 1
   switch ( fish['isBlock'] )
   {
         //case '1': formatting.blockEnd( 2 ); break;
         case '1': template.content.functions._app.blockEnd( "title_in_levelledPara", false, false ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

  if ( fish[ 'pageSet' ] != '' ) {
    template.content.functions._app.endPageSet();
  }
}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="20.0175"
selector="proceduralStep[count(ancestor::pmEntry)=1]/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(preceding-sibling::*)!=0"/></Tests>
<BaseProperties>
<Indent leftIndent="20mm"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: proceduralStep/title

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;
contextProp.repeatHeader = null;
contextProp.repeatFooter = null;

// context preamble complete.

template.content.functions[ template.stylerNamespace ].PropertySet['Title_font'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_color'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_alignment'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_keeps'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_space'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['bold'].onEnter( block, contextProp );

contextProp.isBlock =  isBlock = 0;  // RS: SOURCE EDIT: Change to Inline (was "= 1;")

fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( (ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument )", 130, template.primaryStream, null ) != 0 )
{
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:title:titleinprocStrppmEntry1:addAfter_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:title:titleinprocStrppmEntry1:addAfter_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A018c0951-1a83-40a9-a97b-2d1bb0ecb6b4\"><_gte:Target lang=\"en\"><_gte:Font Weight=\"medium\"> (Subtask <_gte:XPathString expr=\"(ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument\"/>" );
         stream.write( ")</_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentAfter( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      currentNode.augmentBefore( null );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
   }
   contextProp.repeatHeader = null;
   contextProp.repeatFooter = null;
}

if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::*)!=0 )", 130, template.primaryStream, null ) != 0 )
{
	contextProp.isBlock =  isBlock = 1; // RS: SOURCE EDIT: Change back to block mode if it's after cautions or warnings
   block.indentStart = '20mm';
   block.absoluteStart = 2;
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "false" }} );

      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   if ( contextProp.repeatHeader != null )
   {
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
      formatting.blockColumnHeader( 2 );
      formatting.fishSave( template.stylerFish );
      formatting.blockStart( template.content.functions._app.ToHeaderBlock( block ));
      formatting.fish[ template.stylerFish ][ 'referenceInfo' ] = currentNode.getNodePath( 1 );
      formatting.formatStream( contextProp.repeatHeader, '+' );
      formatting.blockEnd();
      formatting.fishRestore( template.stylerFish );
   }
   if ( contextProp.repeatFooter != null )
   {
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
      formatting.blockColumnFooter( 2, 1, 'o' );
      formatting.fishSave( template.stylerFish );
      formatting.blockStart( template.content.functions._app.ToFooterBlock( block ));
      formatting.fish[ template.stylerFish ][ 'referenceInfo' ] = currentNode.getNodePath( 1 );
      formatting.formatStream( contextProp.repeatFooter, '+' );
      formatting.blockEnd();
      formatting.fishRestore( template.stylerFish );
   }
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}


template.content.functions._app.Reference();

// SOURCE EDIT: Make sure the title of procedure steps are added to PDF bookmarks
//template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "false" }} );
template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "true", expanded : "true", formatStream : template.stylerNamespace + ":TOCs:PDF_Bookmarks:title_in_proceduralStep" }} );

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: proceduralStep/title

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();

template.content.functions[ template.stylerNamespace ].PropertySet['Title_font'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_color'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_alignment'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_keeps'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_space'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['bold'].onExit();

if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="20.015" selector="proceduralStep/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<Breaks blockOrInline="block"/></BaseProperties>
<Conditions>
<Condition>
<Tests>
<XPathTest expression="count(preceding-sibling::*)!=0"/></Tests>
<BaseProperties>
<Indent leftIndent="20mm"/></BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: proceduralStep/title

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;
contextProp.repeatHeader = null;
contextProp.repeatFooter = null;

// context preamble complete.

template.content.functions[ template.stylerNamespace ].PropertySet['Title_font'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_color'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_alignment'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_keeps'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_space'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['bold'].onEnter( block, contextProp );

contextProp.isBlock =  isBlock = 0;  // RS: SOURCE EDIT: Change to Inline (was "= 1;")

fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( (ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument )", 130, template.primaryStream, null ) != 0 )
{
   if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' )
   {
      var stream = template.content.getStream('stylesheet0:Element:title:titleinprocStrp:addAfter_Test1');
      if ( stream == null )
      {
         var primaryStream = template.content.getStream( template.primaryStream );
         stream = template.content.createStream( 'stylesheet0:Element:title:titleinprocStrp:addAfter_Test1', primaryStream.type );
         stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
         stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A018c0951-1a83-40a9-a97b-2d1bb0ecb6b4\"><_gte:Target lang=\"en\"><_gte:Font Weight=\"medium\"> (Subtask <_gte:XPathString expr=\"(ancestor::dmContent/preceding-sibling::dmRef)[last()]/@authorityDocument\"/>" );
         stream.write( ")</_gte:Font></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
      }
      currentNode.augmentAfter( stream.xmlDocument );
      currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
      var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
      if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
   }
   if ( currentNode.getUserString( '_temp_hasBefore_Test1' ) != '1' )
   {
      currentNode.augmentBefore( null );
      currentNode.setUserString( '_temp_hasBefore_Test1', '1' );
   }
   contextProp.repeatHeader = null;
   contextProp.repeatFooter = null;
}

if ( formatting.evaluateXPath( " boolean( count(preceding-sibling::*)!=0 )", 130, template.primaryStream, null ) != 0 )
{
	contextProp.isBlock =  isBlock = 1; // RS: SOURCE EDIT: Change back to block mode if it's after cautions or warnings
   block.indentStart = '20mm';
   block.absoluteStart = 2;
}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "false" }} );

      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   if ( contextProp.repeatHeader != null )
   {
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
      formatting.blockColumnHeader( 2 );
      formatting.fishSave( template.stylerFish );
      formatting.blockStart( template.content.functions._app.ToHeaderBlock( block ));
      formatting.fish[ template.stylerFish ][ 'referenceInfo' ] = currentNode.getNodePath( 1 );
      formatting.formatStream( contextProp.repeatHeader, '+' );
      formatting.blockEnd();
      formatting.fishRestore( template.stylerFish );
   }
   if ( contextProp.repeatFooter != null )
   {
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
      formatting.blockColumnFooter( 2, 1, 'o' );
      formatting.fishSave( template.stylerFish );
      formatting.blockStart( template.content.functions._app.ToFooterBlock( block ));
      formatting.fish[ template.stylerFish ][ 'referenceInfo' ] = currentNode.getNodePath( 1 );
      formatting.formatStream( contextProp.repeatFooter, '+' );
      formatting.blockEnd();
      formatting.fishRestore( template.stylerFish );
   }
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}


template.content.functions._app.Reference();

// SOURCE EDIT: Make sure the title of procedure steps are added to PDF bookmarks
//template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "false" }} );
template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "true", expanded : "true", formatStream : template.stylerNamespace + ":TOCs:PDF_Bookmarks:title_in_proceduralStep" }} );

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: proceduralStep/title

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();

template.content.functions[ template.stylerNamespace ].PropertySet['Title_font'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_color'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_alignment'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_keeps'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_space'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['bold'].onExit();

if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context
comment="This context outputs the title of the last graphic in a multi-graphic figure. The others are added after each graphic
with the UFE FigureSheetTitle.
UPDATE: From EIPC, now use catalogSeqNumber attributes to get the figure number (which are set in catalogSeqNumber
based on the document structure)" priority="20.01265625"
selector="illustratedPartsCatalog//figure[count(graphic)!=1]/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space">
<Hidden hidden="no"/>
<Font italic="no" weight="bold"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<Keep together="0" withNext="0" withPrevious="7"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A92222cd1-d119-4cd6-bcc8-a0b06a270b22"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="IPL Figure S"/>.</_gte:Font></_gte:LabelAndNumberMarker>(Sheet <_gte:XPathString
expr="count(ancestor::figure/graphic)"/> of <_gte:XPathString
expr="count(ancestor::figure/graphic)"/>)<_gte:Leaders
leaderType="space" lenType="specified" specLen="1.00em"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="A"
numberSuffix="." startAtXPath="(ancestor::pmEntry/@startat)"
stringXPath="concat(number(ancestor::figure/following-sibling::catalogSeqNumber/@figureNumber), ancestor::figure/following-sibling::catalogSeqNumber/@figureNumberVariant)"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="A9be86db2-e607-47f0-a7a0-3425df0f44c2"><_gte:Target lang="en"
>IPL Figure <_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If it's a foldout page, use a right indent so the title appears only on the left side of the page.">
<Tests>
<XPathTest expression="../graphic[last()]/@reproductionWidth='355.6 mm'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt" rightIndent="8.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="Aa4d9e895-33d7-479d-96bc-fb13f6c8e656"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="IPL Figure S"/>.</_gte:Font></_gte:LabelAndNumberMarker>(Sheet <_gte:XPathString
expr="count(ancestor::figure/graphic)"/> of <_gte:XPathString
expr="count(ancestor::figure/graphic)"/>)<_gte:Leaders
leaderType="space" lenType="specified" specLen="1.00em"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab4043698-9301-405d-8094-f1f46d25323e"><_gte:Target lang="en"
><_ufe:BlankFoldoutPage></_ufe:BlankFoldoutPage></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="A"
numberSuffix="." startAtXPath="(ancestor::pmEntry/@startat)"
stringXPath="concat(number(ancestor::figure/following-sibling::catalogSeqNumber/@figureNumber), ancestor::figure/following-sibling::catalogSeqNumber/@figureNumberVariant)"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="A6c5906fc-323d-4fee-bee5-6deef4208e5b"><_gte:Target lang="en"
>IPL Figure <_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context priority="20.009140625"
selector="illustratedPartsCatalog//figure/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space">
<Hidden hidden="no"/>
<Font italic="no" weight="bold"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<Keep together="0" withNext="0" withPrevious="7"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab05717ef-5197-4377-8a04-d9df4c59d70f"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="IPL Figure S"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="A"
numberSuffix="."
stringXPath="concat(number(ancestor::figure/following-sibling::catalogSeqNumber/@figureNumber), ancestor::figure/following-sibling::catalogSeqNumber/@figureNumberVariant)"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="Abbceaddb-9809-408d-b0ce-8a0eee499267"><_gte:Target lang="en"
>IPL Figure <_gte:ElementNumber/></_gte:Target><_gte:Target lang="en"
baseline="yes" current="no">IPL Figure <_gte:XPathString
expr="count((ancestor::pmEntry)[last()]/preceding-sibling::pmEntry)+1"
/><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If it's a foldout page, use a right indent so the title appears only on the left side of the page.">
<Tests>
<XPathTest expression="../graphic/@reproductionWidth='355.6 mm'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt" rightIndent="8.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A31c4aedd-05ad-4bde-8e62-eaeb75ccd10d"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="IPL Figure S"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A29f828a9-e522-42af-bb42-240b262cb5b7"><_gte:Target lang="en"
><_ufe:BlankFoldoutPage></_ufe:BlankFoldoutPage></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="A"
numberSuffix="."
stringXPath="concat(number(ancestor::figure/following-sibling::catalogSeqNumber/@figureNumber), ancestor::figure/following-sibling::catalogSeqNumber/@figureNumberVariant)"
tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="A04382dc9-cc0c-44a4-a2b1-4f64cf929602"><_gte:Target lang="en"
>IPL Figure <_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
</Context>
<Context
comment="This context outputs the title of the last graphic in a multi-graphic figure. The others are added after each graphic
with the UFE FigureSheetTitle." priority="20.005625"
selector="figure[count(graphic)!=1]/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space">
<Hidden hidden="no"/>
<Font italic="yes" weight="normal"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<Keep together="0" withNext="0" withPrevious="7"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A62ff533a-536e-476f-8941-72a5dfb019f6"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="Figure 1"/>.</_gte:Font></_gte:LabelAndNumberMarker> (Sheet <_gte:XPathString
expr="count(ancestor::figure/graphic)"/> of <_gte:XPathString
expr="count(ancestor::figure/graphic)"/>)<_gte:Leaders
leaderType="space" lenType="specified" specLen="1.00em"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
numberSuffix="." tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="Aa42dfb85-4d53-455e-9fe2-228ccdc0c916"><_gte:Target lang="en"
>Figure <_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If it's a foldout graphic, make the right indent 8.5in.
UPDATE: Also add the blank foldout page after (before the legend, if any)">
<Tests>
<XPathTest expression="../graphic[last()]/@reproductionWidth='355.6 mm'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt" rightIndent="8.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A6a4345a6-ba9c-438f-877c-44e7e8d61a84"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="Figure 1"/>.</_gte:Font></_gte:LabelAndNumberMarker> (Sheet <_gte:XPathString
expr="count(ancestor::figure/graphic)"/> of <_gte:XPathString
expr="count(ancestor::figure/graphic)"/>)<_gte:Leaders
leaderType="space" lenType="specified" specLen="1.00em"/></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A081e6ca4-6d28-45c5-8bfd-5434c2dabcea"><_gte:Target lang="en"
><_ufe:BlankFoldoutPage></_ufe:BlankFoldoutPage></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
numberSuffix="." tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="A8e2c8ddd-da91-4081-9cf8-5a546083880b"><_gte:Target lang="en"
>Figure <_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M090" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: figure[count(graphic)!=1]/title

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
// Signal to property sets if they should apply gentext
fish['gentextResolved'] = ( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) != 0 ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;
contextProp.repeatHeader = null;
contextProp.repeatFooter = null;

// context preamble complete.

template.content.functions[ template.stylerNamespace ].PropertySet['Title_font'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_color'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_alignment'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_keeps'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_space'].onEnter( block, contextProp );

var isACMM = formatting.evaluateXPath("/pm/@type='acmm'");

contextProp.isHidden = 0;
style.italic = 0;
style.weight = fStyle.WEIGHT_BOLD;
contextProp.preformatted = false;
if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_CENTER;
if ( block.defaultRegion) block.defaultRegion.horizontalAlign = fBlockRegion.ALIGN_CENTER;
contextProp.isBlock =  isBlock = 1;
block.keepTogether = 0;
block.keepWithNext = 0;
block.keepWithPrevious = 255;
if ( !arguments[0].source.namespace.children[ 'labelFormat' ] )
{
   var primaryStream = template.content.getStream( template.primaryStream );
   var stream = template.content.createStream( 'labelFormat', primaryStream.type, arguments[0].source.namespace );
   stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"on\" id=\"Aa42dfb85-4d53-455e-9fe2-228ccdc0c916\">" );

   // ***** SOURCE EDIT: Add section prefix, and sub-section suffix (when specified)
   // UPDATE: But not for ACMM documents
   if ( isACMM == "0") {
     stream.write( "<_gte:Target lang=\"en\">Figure <_gte:XPathString expr=\"ancestor::pmEntry[1]/@shortPrefix\"/><_gte:ElementNumber/><_gte:XPathString expr=\"ancestor::pmEntry[count(ancestor::pmEntry)=0]/@authorityName\"/></_gte:Target></_gte:Translate></_app:Gentext>" );
   }
   else {
     stream.write( "<_gte:Target lang=\"en\">Figure <_gte:ElementNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );
   }


   currentNode.setUserString('app_hasnumbering','true');
}
var result = currentNode.evaluateXPath( 'ancestor::pmEntry' );
// Don't restart numbering for ACMM documents
if ( isACMM == "0" && result && result.resultType == XPathResult.NODELIST_TYPE )
{
   var ancestor = result.nodeListValue.item(0);
   if ( ancestor.getUserString( '_temp_reset_title1D9B4951' ) != '1' )
   {
      ancestor.augmentReference( '_app:RestartNumbering title1D9B4951', 0 );
      formatting.fish[ template.numberingFish ][ 'title1D9B4951' ] = '';
      ancestor.setUserString( '_temp_reset_title1D9B4951', '1' );
   }
}

contextProp.markerArgs = { format : "(CURRENT)", labelPlacement : "beforeNumber", numberStyle : "1", numberSuffix : ".", startAtXPath : "ancestor::pmEntry/@startat", labelFormat : arguments[0].source.namespace.children[ 'labelFormat' ], followWith : "&#x20;", countAs : "title1D9B4951" };
contextProp.markerType = 'Numbering';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:title:title_in_figurecountgraphic171BA:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:title:title_in_figurecountgraphic171BA:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"on\" id=\"A62ff533a-536e-476f-8941-72a5dfb019f6\"><_gte:Target lang=\"en\"><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber display=\"Figure 1\"/>" );
      stream.write( ".</_gte:Font></_gte:LabelAndNumberMarker>(Sheet <_gte:XPathString expr=\"count(ancestor::figure/graphic)\"/> of <_gte:XPathString expr=\"count(ancestor::figure/graphic)\"/>)<_gte:Leaders leaderType=\"space\" lenType=\"specified\" specLen=\"1.00em\"/>" );
      stream.write( "</_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
contextProp.repeatHeader = null;
contextProp.repeatFooter = null;
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( ../graphic[last()]/@reproductionWidth='355.6 mm' )", 130, template.primaryStream, null ) != 0 )
{
   block.indentStart = '-0.25in'; //'0pt';
   block.absoluteStart = 2;
   block.indentEnd = '8.25in'; //'8.5in';
   block.absoluteEnd = 2;

  if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:title:titlebak_in_figurecountgraphic1D620:addAfter_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:title:titlebak_in_figurecountgraphic1D620:addAfter_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A0352df9f-fad6-44f8-a111-3c979f52d700\"><_gte:Target lang=\"en\"><_ufe:BlankFoldoutPage></_ufe:BlankFoldoutPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText>" );
      stream.write( "</_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }


}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "false" }} );

      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   if ( contextProp.repeatHeader != null )
   {
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
      formatting.blockColumnHeader( 2 );
      formatting.fishSave( template.stylerFish );
      formatting.blockStart( template.content.functions._app.ToHeaderBlock( block ));
      formatting.fish[ template.stylerFish ][ 'referenceInfo' ] = currentNode.getNodePath( 1 );
      formatting.formatStream( contextProp.repeatHeader, '+' );
      formatting.blockEnd();
      formatting.fishRestore( template.stylerFish );
   }
   if ( contextProp.repeatFooter != null )
   {
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
      formatting.blockColumnFooter( 2, 1, 'o' );
      formatting.fishSave( template.stylerFish );
      formatting.blockStart( template.content.functions._app.ToFooterBlock( block ));
      formatting.fish[ template.stylerFish ][ 'referenceInfo' ] = currentNode.getNodePath( 1 );
      formatting.formatStream( contextProp.repeatFooter, '+' );
      formatting.blockEnd();
      formatting.fishRestore( template.stylerFish );
   }
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}


template.content.functions._app.Reference();
template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "false" }} );

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: figure[count(graphic)!=1]/title

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();

template.content.functions[ template.stylerNamespace ].PropertySet['Title_font'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_color'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_alignment'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_keeps'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_space'].onExit();

if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="20.005" selector="figure/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space">
<Hidden hidden="no"/>
<Font italic="yes" weight="normal"/>
<Alignment align="center"/>
<Breaks blockOrInline="block"/>
<Keep together="0" withNext="0" withPrevious="7"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A787f696a-660b-4603-82dc-692133e6ecea"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="Figure 1"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="emspace" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
numberSuffix="." tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="Af922c9cd-31c2-449a-9911-932abaebd7c2"><_gte:Target lang="en"
>Figure <_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
<Conditions>
<Condition
comment="If it's a foldout page, use a right indent so the title appears only on the left side of the page.
UPDATE: Add the blank foldout page after the title so that it appears before the legend (if any)">
<Tests>
<XPathTest expression="../graphic/@reproductionWidth='355.6 mm'"/>
</Tests>
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="@0pt" rightIndent="8.5in"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Adb054138-bb6c-436e-a8f9-624ecf42fd65"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="Figure 1"/>.</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9499c265-e248-46c1-9731-01b233140f00"><_gte:Target lang="en"
><_ufe:BlankFoldoutPage></_ufe:BlankFoldoutPage></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddAfter>
<Numbering alignAt="0pt" followWith="emspace" format="(CURRENT)"
numberAlignment="left" numberScope="pmEntry" numberStyle="1"
numberSuffix="." tabtoAfter="0pt">
<LabelAndNumber><_gte:Translate translate="on"
id="A19ef4bd9-1af3-41c0-8496-edf0b7354f6a"><_gte:Target lang="en"
>Figure <_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Condition>
</Conditions>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><OnEnter type="application/x-javascript"
xml:space="preserve"><![CDATA[// onEnter processing for context: figure/title

formatting.fishSave( template.stylerFish );
var contextProp = {};
var currentNode = formatting.currentXMLNode;
var fish = formatting.fish[ template.stylerFish ];
fish['gentextResolved'] = currentNode.hasAugmentation ? 1 : 0;
var block = new fBlock();
var paragraph = block.defaultParagraph;
var style = block.defaultStyle;
var graphic = {};
var useGraphic = false;
var isBlock = contextProp.isBlock = -1;
contextProp.isHidden = 0;
contextProp.startNew = 0;
contextProp.pageSet = '';
contextProp.pageType = 0;
contextProp.pageNumber = 0;
contextProp.wantColumnTopMargin = 0;
contextProp.customTable = 0;
contextProp.markerType = '';
contextProp.preformatted = false;
contextProp.repeatHeader = null;
contextProp.repeatFooter = null;

// context preamble complete.

template.content.functions[ template.stylerNamespace ].PropertySet['Title_font'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_color'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_alignment'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_keeps'].onEnter( block, contextProp );
template.content.functions[ template.stylerNamespace ].PropertySet['Title_space'].onEnter( block, contextProp );

var isACMM = formatting.evaluateXPath("/pm/@type='acmm'");

contextProp.isHidden = 0;
style.weight = fStyle.WEIGHT_BOLD;
contextProp.preformatted = false;
if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_CENTER;
if ( block.defaultRegion) block.defaultRegion.horizontalAlign = fBlockRegion.ALIGN_CENTER;
contextProp.isBlock =  isBlock = 1;
block.keepTogether = 0;
block.keepWithNext = 0;
block.keepWithPrevious = 255;
if ( !arguments[0].source.namespace.children[ 'labelFormat' ] )
{
   var primaryStream = template.content.getStream( template.primaryStream );
   var stream = template.content.createStream( 'labelFormat', primaryStream.type, arguments[0].source.namespace );
   stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"on\" id=\"Af922c9cd-31c2-449a-9911-932abaebd7c2\">" );

   // ***** SOURCE EDIT: Add section prefix, and sub-section suffix (when specified)
   // UPDATE: But not for ACMM documents
   if ( isACMM == "0") {
     stream.write( "<_gte:Target lang=\"en\">Figure <_gte:XPathString expr=\"ancestor::pmEntry[1]/@shortPrefix\"/><_gte:ElementNumber/><_gte:XPathString expr=\"ancestor::pmEntry[count(ancestor::pmEntry)=0]/@authorityName\"/></_gte:Target></_gte:Translate></_app:Gentext>" );   }
   else {
     stream.write( "<_gte:Target lang=\"en\">Figure <_gte:ElementNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );
   }

   
   currentNode.setUserString('app_hasnumbering','true');
}
var result = currentNode.evaluateXPath( 'ancestor::pmEntry' );
// Don't restart numbering for ACMM documents
if ( isACMM == "0" && result && result.resultType == XPathResult.NODELIST_TYPE )
{
   var ancestor = result.nodeListValue.item(0);
   if ( ancestor.getUserString( '_temp_reset_title1D9B4951' ) != '1' )
   {
      ancestor.augmentReference( '_app:RestartNumbering title1D9B4951', 0 );
      formatting.fish[ template.numberingFish ][ 'title1D9B4951' ] = '';
      ancestor.setUserString( '_temp_reset_title1D9B4951', '1' );
   }
}
contextProp.markerArgs = { format : "(CURRENT)", labelPlacement : "beforeNumber", numberStyle : "1", numberSuffix : ".", startAtXPath : "ancestor::pmEntry/@startat", labelFormat : arguments[0].source.namespace.children[ 'labelFormat' ], followWith : "&#x20;", countAs : "title1D9B4951" };
contextProp.markerType = 'Numbering';
if ( currentNode.getUserString( '_temp_hasBefore_' ) != '1' )
{
   var stream = template.content.getStream('stylesheet0:Element:title:title_in_figure:addBefore');
   if ( stream == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:title:title_in_figure:addBefore', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddBefore\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A787f696a-660b-4603-82dc-692133e6ecea\"><_gte:Target lang=\"en\"><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber display=\"Figure 1\"/>" );
      stream.write( ".</_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></_app:Gentext>" );
   }
   currentNode.augmentBefore( stream.xmlDocument );
   currentNode.setUserString( '_temp_hasBefore_', '1' );
   var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
   if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
}
contextProp.repeatHeader = null;
contextProp.repeatFooter = null;
fish['gentextResolved'] = 0;

if ( formatting.evaluateXPath( " boolean( ../graphic/@reproductionWidth='355.6 mm' )", 130, template.primaryStream, null ) != 0 )
{
   block.indentEnd = '8.5in';
   block.absoluteEnd = 2;

  if ( currentNode.getUserString( '_temp_hasAfter_Test1' ) != '1' ) {
    var stream = template.content.getStream('stylesheet0:Element:title:title_in_figure1D620:addAfter_Test1');
    if ( stream == null ) {
      var primaryStream = template.content.getStream( template.primaryStream );
      stream = template.content.createStream( 'stylesheet0:Element:title:title_in_figure1D620:addAfter_Test1', primaryStream.type );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext type=\"AddAfter\" xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\" xmlns:_sfe=\"http://www.arbortext.com/namespace/Styler/StylerFormattingElements\" xmlns:_ufe=\"http://www.arbortext.com/namespace/Styler/UserFormattingElements\">" );
      stream.write( "<_sfe:BeforeOrAfterText><_gte:Translate translate=\"off\" id=\"A0352df9f-fad6-44f8-a111-3c979f52d700\"><_gte:Target lang=\"en\"><_ufe:CheckChangeBarEnd/><_ufe:BlankFoldoutPage></_ufe:BlankFoldoutPage></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText>" );
      stream.write( "</_app:Gentext>" );
    }

    currentNode.augmentAfter( stream.xmlDocument );
    currentNode.setUserString( '_temp_hasAfter_Test1', '1' );
    var hasTOCEntry = currentNode.getUserString( 'app_tocEntry' );
    if ( hasTOCEntry == 1 ) template.needTOCRebuild = 1;
  }

}

// context format processing complete.

if ( contextProp.preformatted )
{
   if ( !block.avoidMe ) block.horizontalAlign = fBlock.ALIGN_LEFT;
   if ( block.defaultRegion) block.defaultRegion.horizontalAlign = '-1';
   paragraph.textAlign = fParagraph.ALIGN_OVER_RIGHT;
   style.useLigatureGroups = true;
   style.ligatureGroup = fStyle.LIGATURE_SYSTEM;
   formatting.styleSave();
   formatting.styleChange( style );
   style.wordSpace = new fLength( '#"t"' ).makeAbsolute();
   formatting.styleRestore();
}

var lang = arguments[0].attributes[ template.languageAttr ];
if ( lang ) lang = template.content.functions._app.resolveLanguage( lang, 1 );
if ( lang && fish['trackHyphLang'] == '1' ) style.hyphenationLanguage = lang;

if ( contextProp.wantColumnTopMargin == 1 )
{
   block.marginColumnTop = block.marginTop;
   block.marginColumnTopPriority = block.marginTopPriority;
   block.vjMarginColumnTop = block.vjMarginTop;
}
else
{
   block.marginColumnTop = '0pt';
   block.vjMarginColumnTop = '0pt';
}

fish['isHidden'] = contextProp.isHidden;
fish['markerType'] = contextProp.markerType;
if ( contextProp.isHidden == 1 )
{
   currentNode.augmentReference( '_app:hidden', 1 );
   useGraphic = false;
   if (( currentNode.hasAugmentation & ( fxNode.AUGMENTATION_BEFORE | fxNode.AUGMENTATION_AFTER )) == 0 )
   {
      template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "false" }} );

      if ( contextProp.markerType != ''  )
      {
         fish['referenceMode'] = '';
         template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
      }
      return;
   }
   else fish['isHidden'] = 0;
}
var pageInfo = template.pageInfo[ fish[ 'currentPageSet' ]];
fish['pageSet'] = contextProp.startNew == '2' ? contextProp.pageSet : '';
if ( contextProp.startNew == '2' )
{
   if ( contextProp.pageSet != '' )
   {
      template.content.functions[template.stylerNamespace].PageSets[ contextProp.pageSet ].PageSetup();
      pageInfo = template.pageInfo[ contextProp.pageSet ];
      if ( block.numColumns == 0 )
      {
         block.spanFrame = 1;
         block.numColumns = pageInfo.initialColumnCount; 
      }

      var pageseq = new fDocumentSequenceItem;
      pageseq.sequence = template.content.getControl( template.stylerNamespace + ':PageSets:' + contextProp.pageSet + ':PageSequence' );
      pageseq.start = contextProp.pageType;
      pageseq.initial = contextProp.pageNumber;
      pageseq.reverse = contextProp.direction == 1 || ( contextProp.direction == undefined && formatting.currentParagraph.direction == 1 );
      formatting.pageSequenceStart( pageseq, true );
      fish['pageSet'] = fish['currentPageSet'] = contextProp.pageSet;
   }
   else
   {
      formatting.pageSequenceBreak( contextProp.pageType );
   }
}
else if ( contextProp.startNew == '1' )
{
   formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
   formatting.breakTop( fFormatting.BREAK_COLUMN, 1 );
}

if ( isBlock != -1 ) contextProp.isBlock = isBlock;
if ( contextProp.isBlock == 1 )
{
   if ( block.numColumns > 1 )
   {
      var columnInfo = pageInfo.columnInfo[ block.numColumns ];
      for( var i = 0; i < block.numColumns; ++i ) block.columns[i] = columnInfo[i];
      block.horizontalAlign = pageInfo.horizontalAlignment;
      block.balanceColumns = pageInfo.balanceColumns;

      if ( pageInfo.gutterRule )
      {
         block.defaultRegion.rules.addRule( pageInfo.gutterRule );
         block.defaultRegion.ruleRightGutter = 'c';
      }
   }
   fish['isBlock'] = 1;
   if ( contextProp.repeatHeader != null )
   {
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
      formatting.blockColumnHeader( 2 );
      formatting.fishSave( template.stylerFish );
      formatting.blockStart( template.content.functions._app.ToHeaderBlock( block ));
      formatting.fish[ template.stylerFish ][ 'referenceInfo' ] = currentNode.getNodePath( 1 );
      formatting.formatStream( contextProp.repeatHeader, '+' );
      formatting.blockEnd();
      formatting.fishRestore( template.stylerFish );
   }
   if ( contextProp.repeatFooter != null )
   {
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 1 );
      formatting.blockColumnFooter( 2, 1, 'o' );
      formatting.fishSave( template.stylerFish );
      formatting.blockStart( template.content.functions._app.ToFooterBlock( block ));
      formatting.fish[ template.stylerFish ][ 'referenceInfo' ] = currentNode.getNodePath( 1 );
      formatting.formatStream( contextProp.repeatFooter, '+' );
      formatting.blockEnd();
      formatting.fishRestore( template.stylerFish );
   }
   formatting.blockStart( block );
}
else
{
   fish['isBlock'] = 0;
   formatting.styleSave();
   formatting.styleChange( style );
   formatting.currentParagraph.preserveProperties = 2;
}

if ( contextProp.markerType != ''  )
{
   fish['referenceMode'] = '';
   template.content.functions._app[ contextProp.markerType ]( { attributes: contextProp.markerArgs } );
}


template.content.functions._app.Reference();
template.content.functions._app.MakeLink( { attributes : { forTOC : "1", inPDF : "false" }} );

if ( useGraphic ) template.content.functions._app.Graphic( { attributes: graphic } );


// context contents

]]></OnEnter><OnExit type="application/x-javascript"
xml:space="preserve"><![CDATA[// onExit processing for context: figure/title

var fish = formatting.fish[ template.stylerFish ];
var isHidden = fish['isHidden'] == 1;
var wasPageSet = false;

var markerType = fish['markerType'];
if ( markerType != '' && markerType != 'Footnote' )
   template.content.functions._app[ 'end'+ markerType ]();

template.content.functions[ template.stylerNamespace ].PropertySet['Title_font'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_color'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_alignment'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_keeps'].onExit();
template.content.functions[ template.stylerNamespace ].PropertySet['Title_space'].onExit();

if ( !isHidden )
{
   switch ( fish['isBlock'] )
   {
         case '1': formatting.blockEnd( 2 ); break;
         case '-1': break;
         case '0':
         default:
            formatting.styleRestore(); break;
            break;
   }

   if ( fish['pageSet'] != '' )
   {
      formatting.pageSequenceEnd( true );
      formatting.recordEnd( fFormatting.END_PARAGRAPH, fFormatting.ALIGN_DEFAULT, 3 );
      formatting.breakTop(fFormatting.BREAK_PAGE, 2 );
   }

}

formatting.fishRestore( template.stylerFish );
]]></OnExit></EditedSource>
</Context>
<Context priority="20" selector="pm/title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_document">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="title">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A0e39302c-99b8-4bc3-bcd6-2611570d1aba"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A86bc85a6-1e67-4d4b-a56e-9ee3245a752f"><_gte:Target lang="en"
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="dc:title" style="unstyled">
<Context priority="0" selector="dc:title">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="tool" style="unstyled">
<Context priority="0" selector="tool">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="toolAlts" style="unstyled">
<Context priority="0" selector="toolAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="toolIdent" style="unstyled">
<Context priority="0" selector="toolIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element
comment="Hide in the main flow (within supportEquipDescr), but output tool number gentext in the Support equipment table."
name="toolRef" style="block">
<Context priority="20" selector="supportEquipDescr/toolRef">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="toolRef">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A07c05554-1935-49be-8174-bb2f9485b118"><_gte:Target lang="en"
><_ufe:ToolRefText></_ufe:ToolRefText></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="toolRefGroup" style="unstyled">
<Context priority="0" selector="toolRefGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="toolRepository" style="unstyled">
<Context priority="0" selector="toolRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="toolSpec" style="unstyled">
<Context priority="0" selector="toolSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="totalQuantity" style="unstyled">
<Context priority="0" selector="totalQuantity">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="trade" style="unstyled">
<Context priority="0" selector="trade">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="transport" style="unstyled">
<Context priority="0" selector="transport">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="trueValue" style="unstyled">
<Context priority="0" selector="trueValue">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="dc:type" style="unstyled">
<Context priority="0" selector="dc:type">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="unitOfIssue" style="unstyled">
<Context priority="0" selector="unitOfIssue">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="unitOfIssueQualificationSegment" style="unstyled">
<Context priority="0" selector="unitOfIssueQualificationSegment">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="unverified" style="unstyled">
<Context priority="0" selector="unverified">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="usableOnCodeAssy" style="unstyled">
<Context priority="0" selector="usableOnCodeAssy">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="usableOnCodeEquip" style="unstyled">
<Context priority="0" selector="usableOnCodeEquip">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="usage" style="unstyled">
<Context priority="0" selector="usage">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="variableRef" style="unstyled">
<Context priority="0" selector="variableRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="verbatimText" style="inline">
<Context priority="0" selector="verbatimText">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Element>
<Element name="viewLocation" style="unstyled">
<Context priority="0" selector="viewLocation">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="warning" style="block">
<Context priority="0" selector="warning">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddAfter><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad37cfe8d-eb4f-4556-b77c-c423665430af"><_gte:Target lang="en"
><_dtd:_newline/></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText
></AddAfter>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="warningAndCautionPara" style="block">
<Context priority="4" selector="warningAndCautionPara[1]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="0" selector="warningAndCautionPara">
<BaseProperties>
<SpaceBefore optimum="6pt"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="warningIdent" style="unstyled">
<Context priority="0" selector="warningIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="warningMalfunction" style="unstyled">
<Context priority="0" selector="warningMalfunction">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="warningMalfunctionAlts" style="unstyled">
<Context priority="0" selector="warningMalfunctionAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="warningRef" style="block">
<Context priority="0" selector="warningRef">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Element>
<Element name="warningRepository" style="unstyled">
<Context priority="0" selector="warningRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="warningSpec" style="unstyled">
<Context priority="0" selector="warningSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="warningsAndCautions" style="unstyled">
<Context priority="0" selector="warningsAndCautions">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="warningsAndCautionsRef" style="hidden">
<Context priority="0" selector="warningsAndCautionsRef">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Element>
<Element name="wiringFields" style="block">
<Context priority="0" selector="wiringFields">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="on"
id="A251df82e-c489-4ee1-b037-629e01a7ba20"><_gte:Target lang="en"
><_ufe:TempHeading>Wiring Fields:</_ufe:TempHeading></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Element>
<Element name="wiringPossibleCause" style="unstyled">
<Context priority="0" selector="wiringPossibleCause">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="wiringPossibleCauseFrom" style="unstyled">
<Context priority="0" selector="wiringPossibleCauseFrom">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="wiringPossibleCauseTo" style="unstyled">
<Context priority="0" selector="wiringPossibleCauseTo">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="workArea" style="unstyled">
<Context priority="0" selector="workArea">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="workAreaLocationGroup" style="unstyled">
<Context priority="0" selector="workAreaLocationGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="workLocation" style="unstyled">
<Context priority="0" selector="workLocation">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="yesAnswer" style="unstyled">
<Context priority="0" selector="yesAnswer">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="yesNoAnswer" style="unstyled">
<Context priority="0" selector="yesNoAnswer">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="zone" style="unstyled">
<Context priority="0" selector="zone">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="zoneAlts" style="unstyled">
<Context priority="0" selector="zoneAlts">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="zoneGroup" style="unstyled">
<Context priority="0" selector="zoneGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="zoneIdent" style="unstyled">
<Context priority="0" selector="zoneIdent">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="zoneRef" style="unstyled">
<Context priority="0" selector="zoneRef">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="zoneRefGroup" style="unstyled">
<Context priority="0" selector="zoneRefGroup">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="zoneRepository" style="unstyled">
<Context priority="0" selector="zoneRepository">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="zoneSide" style="unstyled">
<Context priority="0" selector="zoneSide">
<BaseProperties></BaseProperties>
</Context>
</Element>
<Element name="zoneSpec" style="unstyled">
<Context priority="0" selector="zoneSpec">
<BaseProperties></BaseProperties>
</Context>
</Element>
</Elements>
<Styles xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:noNamespaceSchemaLocation="http://www.arbortext.com/namespace/doctypes/styler"
xmlns:_sfe="http://www.arbortext.com/namespace/Styler/StylerFormattingElements"
xmlns:_gte="http://www.arbortext.com/namespace/Styler/GeneratedTextElements">
<Style styleName="block">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="crossReference">
<Context priority="0" selector="$elemname">
<BaseProperties>
<GeneratedText></GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="customTable">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Table_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableCell">
<Context priority="0" selector="$customTable//$elemname">
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="0pt" rightIndent="0pt"/>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableHeaderCell">
<Context priority="0" selector="$customTable//$elemname">
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="0pt" rightIndent="0pt"/>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableRow">
<Context priority="0" selector="$customTable/$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableHeaderRow">
<Context priority="0" selector="$customTable/$elemname">
<BaseProperties propertySetReferences="bold">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="customTableTitle">
<Context priority="10" selector="$customTable/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space customTableTitle">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5ccfd71f-327a-4a9c-8ad8-283e38e972aa"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A0319abcf-ed36-462e-8dc6-34b51ecb6e97"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Ad7888deb-4282-4789-b43c-b4157be73ef1"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="definitionList">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="definitionListItem">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division1">
<Context divisionLevel="1" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block" startNew="page"/></BaseProperties>
</Context>
</Style>
<Style styleName="division2">
<Context divisionLevel="2" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block" startNew="page"/></BaseProperties>
</Context>
</Style>
<Style styleName="division3">
<Context divisionLevel="3" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division4">
<Context divisionLevel="4" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division5">
<Context divisionLevel="5" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division6">
<Context divisionLevel="6" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division7">
<Context divisionLevel="7" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division8">
<Context divisionLevel="8" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="division9">
<Context divisionLevel="9" priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="document">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block" newPageSet="Default_Page_Set"
startNew="page"/></BaseProperties>
</Context>
</Style>
<Style styleName="footnote">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<Footnote footnoteModelReference="Default_Footnotes"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A39b907e7-17ee-464f-94c3-262e74c9c130"><_gte:Target lang="en"
><_gte:Font TypeSize=".69em" Offset=".33em"><_gte:ElementNumber/></_gte:Font
></_gte:Target></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="nothing" format="(CURRENT)"
numberAlignment="left">
<LabelAndNumber><_gte:Translate translate="off"
id="Aa7dcf3af-92ec-4d19-a916-eeababcffcc9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context footnoteModelReference="Default_Footnotes" priority="-0.005"
selector="$elemname">
<BaseProperties propertySetReferences="Footnote_font">
<Indent firstLineIndent="*-1.5pc" leftIndent="@1.5pc"/>
<Alignment align="left"/>
<Breaks blockOrInline="block"/>
<Footnote footnoteModelReference="Default_Footnotes"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A83f3359e-2f13-42ac-b28a-4553c2d18095"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
display="1."/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="tab" format="(CURRENT) '.'"
numberAlignment="left" tabtoAfter="1.5pc">
<LabelAndNumber><_gte:Translate translate="off"
id="A163a97ac-13bf-40d1-bfcd-6d2b018997f0"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="footnoteReference">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/>
<Footnote footnoteIdRefAttrName="rid"
footnoteModelReference="Default_Footnotes" referenceType="references"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aca7f4ab4-ccdd-4327-b19a-e33ea86c97f0"><_gte:Target lang="en"
><_gte:Font TypeSize=".69em" Offset=".33em"><_gte:CrossReference
refAttr="rid" xrefStyle="Number"/></_gte:Font></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
</GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="formalBlock">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="graphic">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="hidden">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/></BaseProperties>
</Context>
</Style>
<Style styleName="index">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block" spanInto="2" startNew="page"/>
<GeneratedText></GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="indexTermAttributeModel">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="indexTermElementModel">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="indexTermNestingElementModel">
<Context priority="20"
selector="$elemname//$elemname//$elemname//$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="15" selector="$elemname//$elemname//$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="10" selector="$elemname//$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="0" selector="$elemname">
<BaseProperties>
<Hidden hidden="yes"/>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="inline">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="link">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Link">
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="linkTarget">
<Context priority="0" selector="$elemname">
<BaseProperties></BaseProperties>
</Context>
</Style>
<Style styleName="bulletedList">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="numberedList">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="listItem">
<Context priority="25"
selector="*numberedList//*numberedList//*numberedList//*numberedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A79ba6028-d470-40fd-81ea-3320d7be865a"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) ')'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Af8d50b8d-953a-480c-8173-14cb2789dc74"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20"
selector="*bulletedList//*bulletedList//*bulletedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Adae1308d-0fe2-4e06-8773-9a21e29b70f9"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>♦</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="20"
selector="*numberedList//*numberedList//*numberedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-3em" leftIndent="@3em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Acdb75f26-04c8-49d6-ad3d-2f5815e49734"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="2em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="i" tabtoAfter="3em">
<LabelAndNumber><_gte:Translate translate="off"
id="A4bc952b5-16e1-40e8-ba94-76f50683c552"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="15" selector="*bulletedList//*bulletedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A5526f8d3-6519-4655-b22f-9bdbebeb9377"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>–</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="15" selector="*numberedList//*numberedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2em" leftIndent="@2em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A8916e511-9ef7-43c2-8d11-ba7b1a6d7a82"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="a" tabtoAfter="2em">
<LabelAndNumber><_gte:Translate translate="off"
id="Abc2ba347-51ce-4cb1-93f5-550a46488933"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*bulletedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-1.25em" leftIndent="@1.25em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A403d4936-fd7d-4b42-8e53-ebdff7ddbd35"><_gte:Target lang="en"
><_gte:BulletMarker><_gte:Font>•</_gte:Font></_gte:BulletMarker></_gte:Target
></_gte:Translate></_sfe:BeforeOrAfterText></AddBefore>
<Bulleting alignAt="0em" followWith="tab" tabtoAfter="1.25em"/>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*numberedList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Indent firstLineIndent="*-2.5em" leftIndent="@2.5em"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A1011ce30-686a-44db-ae52-0afce5d6988c"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="1.5em" followWith="tab" format="(CURRENT) '.'"
numberAlignment="right" numberStyle="1" tabtoAfter="2.5em">
<LabelAndNumber><_gte:Translate translate="off"
id="Aa5a70906-d4e3-4b30-8a10-a11e57e4f0e9"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*definitionList/$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="paragraph">
<Context priority="20" selector="*listItem/$elemname[1]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="15" selector="*footnote//$elemname[1]">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
<Context priority="10" selector="*listItem/$elemname[position()>1]">
<BaseProperties propertySetReferences="List_item_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Standard_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="preformatted">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="preformatted_font">
<Alignment align="preformatted"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style
description="Not used to style a table; see tableRoot and tableTgroup"
styleName="table">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableCell">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Indent firstLineIndent="*0pt" leftIndent="0pt" rightIndent="0pt"/>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableHeaderCell">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="bold">
<Indent firstLineIndent="*0pt" leftIndent="0pt" rightIndent="0pt"/>
<SpaceBefore maximum="0pt" minimum="0pt" optimum="0pt"
precedence="force"/>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableHead">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="bold">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableFoot">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="bold">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style
description="Used to style the table element in the HTML table model"
styleName="tableRoot">
<Context priority="0" selector="$elemname">
<BaseProperties propertySetReferences="Table_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style description="Used to style tgroup in CALS/OASIS table model"
styleName="tableTgroup">
<Context priority="10" selector="$elemname[1]">
<BaseProperties propertySetReferences="Table_space">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="tableOfContents">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="block"/>
<GeneratedText></GeneratedText>
</BaseProperties>
</Context>
</Style>
<Style styleName="title">
<Context priority="10" selector="*document/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_document">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
<Context priority="10" selector="*tableOfContents/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_TOC">
<Breaks blockOrInline="block"/>
<GeneratedText></GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*formalBlock/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_formalBlock">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ab59ad1be-f89c-456e-89eb-66ed01694c50"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<RepeatingTitle><_sfe:Gentext><_sfe:RepeatingTitle><_gte:Translate
translate="on" id="A894d7db4-57e5-400b-bcc9-0e2a1f46f2f2"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/><_gte:Leaders leaderType="space"
lenType="specified" specLen="1em"/><_gte:ElementContent/> (cont'd.)</_gte:Target
></_gte:Translate></_sfe:RepeatingTitle></_sfe:Gentext></RepeatingTitle>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberScope="(none)" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A9a5771be-5770-4b8b-a983-fff9889f0deb"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*division1/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_1">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A7f1ff3b8-a788-49a0-8137-e8ffb0e21962"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space" format="(CURRENT)"
numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Ae4f15cd6-75a7-4687-a8c6-c5f5ea1f20b6"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*division2/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_2">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa1d8872e-0751-49b1-86e6-e6eed5c90a5a"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A1a0380a1-3378-4010-b97b-d3cc96f1df5f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="10" selector="*division3/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_3">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa37904cd-e751-4d5a-8af6-913c4ce4271e"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Ac120e40d-7994-40db-8438-55808d0e9937"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division4/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_4">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A9186fafd-6081-426b-9a03-ba482d208192"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A55ed43a4-135a-483f-9cd4-47df6a0e7bfb"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division5/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_5">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Ad55957a6-c24f-4a8c-809a-86e54faee6bb"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="Afce47915-8840-4233-8a9d-0c382c55d03f"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division6/$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space Title_6">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A51c1d6c5-104e-4d9d-8916-6181d8ad9d73"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A45cf8cbd-5885-4c19-82d7-91f81e514df8"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division7/$elemname">
<BaseProperties
propertySetReferences="Title_color Title_alignment Title_keeps Title_space Title_7">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa643f778-2b59-4379-bc78-a0fe9ab4a1e1"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A163e75ae-c58c-4033-8b24-bedcaaeefd7e"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division8/$elemname">
<BaseProperties
propertySetReferences="Title_color Title_alignment Title_keeps Title_space Title_8">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="A348b60b9-5ac2-45e9-b7f9-f4120b6dc5fb"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A26707ce9-2236-46c3-8b54-5b3f1fe9eaf6"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context selector="*division9/$elemname">
<BaseProperties
propertySetReferences="Title_color Title_alignment Title_keeps Title_space Title_9">
<Indent firstLineIndent="*0pt" leftIndent="@0pt"/>
<Breaks blockOrInline="block"/>
<GeneratedText>
<AddBefore><_sfe:BeforeOrAfterText><_gte:Translate translate="off"
id="Aa9124fa1-231d-44fe-8705-949e51fb5558"><_gte:Target lang="en"
><_gte:LabelAndNumberMarker><_gte:Font><_gte:ElementLabelAndNumber
/></_gte:Font></_gte:LabelAndNumberMarker></_gte:Target></_gte:Translate
></_sfe:BeforeOrAfterText></AddBefore>
<Numbering alignAt="0pt" followWith="space"
format="(PREVIOUS) '.' (CURRENT)" numberAlignment="left" numberStyle="1">
<LabelAndNumber><_gte:Translate translate="off"
id="A890a1fd7-64f0-4d99-8978-54710e428d24"><_gte:Target lang="en"
><_gte:ElementNumber/></_gte:Target></_gte:Translate></LabelAndNumber>
</Numbering>
</GeneratedText>
</BaseProperties>
</Context>
<Context priority="0" selector="$elemname">
<BaseProperties
propertySetReferences="Title_font Title_color Title_alignment Title_keeps Title_space bold">
<Breaks blockOrInline="block"/></BaseProperties>
</Context>
</Style>
<Style styleName="nostyle">
<Context priority="0" selector="$elemname">
<BaseProperties>
<Breaks blockOrInline="inline"/></BaseProperties>
</Context>
</Style>
<Style styleName="unstyled">
<Context priority="0" selector="$elemname">
<BaseProperties></BaseProperties>
</Context>
</Style>
</Styles>
<Bullets>
<Bullet><_gte:Font>•</_gte:Font></Bullet>
<Bullet><_gte:Font>–</_gte:Font></Bullet>
<Bullet><_gte:Font>♦</_gte:Font></Bullet>
<Bullet><_gte:Font>◊</_gte:Font></Bullet>
<Bullet><_gte:Font>⇒</_gte:Font></Bullet>
</Bullets>
<ReferenceFormats>
<ReferenceFormat referenceFormatName="Figure_and_Sheet_Number"><_gte:Translate
translate="on" id="A83238f52-97f9-4d27-9b60-1cdc522e940d"><_gte:Target
lang="en">Figure <_gte:XPathString
expr="count(preceding::figure) - count(ancestor::pmEntry[1]/preceding::figure)+1"
/>, Sheet <_gte:XPathString
expr="count(ancestor-or-self::graphic/preceding-sibling::graphic)+1"
/></_gte:Target></_gte:Translate></ReferenceFormat>
<ReferenceFormat referenceFormatName="Label_Number"><_gte:Translate
translate="off" id="A441c3f39-13cc-48f5-a774-03045d408e57"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/></_gte:Target></_gte:Translate
></ReferenceFormat>
<ReferenceFormat referenceFormatName="Label_Number_Page"><_gte:Translate
translate="on" id="A9692ef67-92e0-44f1-9089-57fe13ea5d52"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/>, Page <_gte:PageNumberReference
/></_gte:Target></_gte:Translate></ReferenceFormat>
<ReferenceFormat referenceFormatName="Label_Number_Text"><_gte:Translate
translate="off" id="A9c9ea8d3-1199-4e41-8888-0836f986ad1f"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/> <_sfe:CrossReferenceTitle
><_gte:ElementContent/></_sfe:CrossReferenceTitle></_gte:Target></_gte:Translate
></ReferenceFormat>
<ReferenceFormat referenceFormatName="Label_Number_Text_Page"><_gte:Translate
translate="on" id="A1cc0ef95-4c1a-4b17-a78d-ebee40d3a77b"><_gte:Target
lang="en"><_gte:ElementLabelAndNumber/> <_sfe:CrossReferenceTitle
><_gte:ElementContent/></_sfe:CrossReferenceTitle>, page <_gte:PageNumberReference
/></_gte:Target></_gte:Translate></ReferenceFormat>
<ReferenceFormat referenceFormatName="Name"><_gte:Translate
translate="off" id="A4ef89d79-7e09-4c52-bb48-dd2283a97d48"><_gte:Target
lang="en"><_gte:ElementContent include="contentOnly"
xpath="descendant-or-self::name"/></_gte:Target></_gte:Translate></ReferenceFormat>
<ReferenceFormat referenceFormatName="Number"><_gte:Translate
translate="off" id="Aff3be4bf-6019-4206-8140-7c244efb701b"><_gte:Target
lang="en"><_gte:ElementNumber/></_gte:Target></_gte:Translate></ReferenceFormat>
<ReferenceFormat referenceFormatName="Number_Text"><_gte:Translate
translate="off" id="A8610b2d7-7632-457e-9738-7938d636dc6c"><_gte:Target
lang="en"><_gte:ElementNumber/> <_sfe:CrossReferenceTitle><_gte:ElementContent
/></_sfe:CrossReferenceTitle></_gte:Target></_gte:Translate></ReferenceFormat>
<ReferenceFormat referenceFormatName="Page"><_gte:Translate
translate="off" id="A338e2710-fa70-4450-a17a-9f17da6a3300"><_gte:Target
lang="en"><_gte:PageNumberReference/></_gte:Target></_gte:Translate
></ReferenceFormat>
<ReferenceFormat referenceFormatName="pageBlockPrefix"><_gte:Translate
translate="off" id="Aac05975c-42ca-49f6-b522-6776e3562dc5"><_gte:Target
lang="en"><_gte:AttributeContent attr="pageBlockPrefix" occur="1"
scope=""/></_gte:Target></_gte:Translate></ReferenceFormat>
<ReferenceFormat referenceFormatName="pmEntryTitle"><_gte:Translate
translate="off" id="Ab6cd3f00-0f9a-4517-88dc-531ba4a26ea8"><_gte:Target
lang="en"><_gte:PageNumberReference/></_gte:Target></_gte:Translate
></ReferenceFormat>
<ReferenceFormat referenceFormatName="Text"><_gte:Translate
translate="off" id="Ae2261772-d17e-4235-9675-21c1dc18aafa"><_gte:Target
lang="en"><_sfe:CrossReferenceTitle><_gte:ElementContent/></_sfe:CrossReferenceTitle
></_gte:Target></_gte:Translate></ReferenceFormat>
</ReferenceFormats>
<Indexes>
<Index headingsBold="yes" indexName="Main_Index"/></Indexes>
<PrintPageSets>
<PrintPageSet doubleSided="yes" pageSetName="ACMM_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blank="Intentional_Blank" blankLeft="Intentional_Blank"
right="ACMM_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="A166acdb8-672d-47c2-8eb3-759104430dbc"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet pageSetName="Blank_Foldout_Page">
<Margins evenLeft="Left_Margin" evenRight="Right_Margin"
oddLeft="Left_Margin" oddRight="Right_Margin" paperHeight="11in"
paperWidth="17in"/>
<Headers></Headers>
<Footers></Footers>
<Layouts right="Blank_Foldout_Page"/>
<Columns></Columns>
<PageNumbers pageNumberStyle="1"></PageNumbers>
</PrintPageSet>
<PrintPageSet
comment='Edited to add the "prefix" to the page number (like "TEST-4").'
doubleSided="yes" pageSetName="Default_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blank="Intentional_Blank" blankLeft="Intentional_Blank"
firstLeft="Default_Page_Set_right" firstRight="Default_Page_Set_right"
left="Default_Page_Set_right" right="Default_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="Afcf7da69-4591-43b7-8eec-f548573a5ee6"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M120" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'Default_Page_Set' ];
if ( pageInfo == undefined )
{
   //setup the page, column and other information important to this pageset
   template.pageInfo[ 'Default_Page_Set' ] = pageInfo = {};
   pageInfo.changeBarPlacement = 'left'
   pageInfo.paperHeight = template.sizeDefinitions[ 'Page_Height' ];
   pageInfo.paperWidth = template.sizeDefinitions[ 'Page_Width' ];
   pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
   pageInfo.bottomMargin = template.sizeDefinitions[ 'Bottom_Margin' ];
   pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
   pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
   pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Right_Margin' ];
   pageInfo.evenRightMargin = template.sizeDefinitions[ 'Left_Margin' ];
   pageInfo.initialColumnCount = 1;
   pageInfo.balanceColumns = false;
   pageInfo.verticalJustification = false;
   pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
   var columnInfo = {};
   var column = {};
   pageInfo.columnInfo = [];

   pageInfo.columnInfo[ 2 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = column;

   pageInfo.columnInfo[ 3 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

   pageInfo.columnInfo[ 4 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

   pageInfo.columnInfo[ 5 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

   pageInfo.columnInfo[ 6 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

   pageInfo.columnInfo[ 7 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

   pageInfo.columnInfo[ 8 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:Default_Page_Set');
if ( pagesetNS.children['PageSequence'] == null )
{

   if ( pagesetNS.children['PageNumber'] == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"Afcf7da69-4591-43b7-8eec-f548573a5ee6\">" );

      //stream.write( "<_gte:Target lang=\"en\"><_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );

      // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix, and section suffix (when specified)
      stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:PageNumber/><_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/></_gte:Target></_gte:Translate></_app:Gentext>" );

   }


   if ( pagesetNS.children['PageRef'] == null )
   {
      var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
      stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
   }


   var pageSeq = new fPageSequenceItem();
   var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_ODD;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
   psc.layout = pageTypes[ 'Intentional_Blank' ]( 'rightBlank', pageInfo, pagesetNS, true, true );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_EVEN;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
   psc.layout = pageTypes[ 'Intentional_Blank' ]( 'leftBlank', pageInfo, pagesetNS, false, true );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_ODD;
   psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
   psc.testContent = fPageSequenceCondition.CONTENT_ANY;
   psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'rightFirst', pageInfo, pagesetNS, true, false);
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_EVEN;
   psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
   psc.testContent = fPageSequenceCondition.CONTENT_ANY;
   psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'leftFirst', pageInfo, pagesetNS, true, false );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_ODD;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_ANY;
   psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'rightPage', pageInfo, pagesetNS, true, false );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_EVEN;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_ANY;
   psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'leftPage', pageInfo, pagesetNS, false, false );
   pageSeq.addCondition( psc );

   var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
   pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet
comment='Make an EDI page set based on the Page Block Page set to output the continued header "Equipment Designated Index" on pages after the first,
and also the table headers' doubleSided="yes" pageSetName="EDI_Page_Set">
<Margins bottom="1in" evenLeft="Right_Margin" evenRight="Left_Margin"
oddLeft="Left_Margin" oddRight="Right_Margin" paperHeight="Page_Height"
paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blank="Intentional_Blank_Page_Block"
blankLeft="Intentional_Blank_Page_Block" right="EDI_Page_Set_right"/>
<Columns balance="yes" initialColumnCount="2">
<ColumnSet columnCount="2" gutterWidth="0pc"></ColumnSet>
</Columns>
<PageNumbers><_gte:Translate translate="off"
id="A29205ad6-321a-4763-959f-62283263a221"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'EDI_Page_Set' ];
if ( pageInfo == undefined ) {
  //setup the page, column and other information important to this pageset
  template.pageInfo[ 'EDI_Page_Set' ] = pageInfo = {};
  pageInfo.changeBarPlacement = 'left';
  pageInfo.paperHeight = template.sizeDefinitions[ 'Page_Height' ];
  pageInfo.paperWidth = template.sizeDefinitions[ 'Page_Width' ];
  pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
  pageInfo.bottomMargin = new fLength( '1in'); //0.75in' ); //30mm' );
  pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenRightMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.initialColumnCount = 2;
  //pageInfo.balanceColumns = false;
  pageInfo.balanceColumns = true;
  pageInfo.verticalJustification = false;
  pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
  var columnInfo = {};
  var column = {};
  pageInfo.columnInfo = [];

  pageInfo.columnInfo[ 2 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '0pc';
  columnInfo[0] = columnInfo[1] = column;

  pageInfo.columnInfo[ 3 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

  pageInfo.columnInfo[ 4 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

  pageInfo.columnInfo[ 5 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

  pageInfo.columnInfo[ 6 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

  pageInfo.columnInfo[ 7 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

  pageInfo.columnInfo[ 8 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:EDI_Page_Set');
if ( pagesetNS.children['PageSequence'] == null ) {

  if ( pagesetNS.children['PageNumber'] == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"A29205ad6-321a-4763-959f-62283263a221\">" );
    //stream.write( "<_gte:Target lang=\"en\"><_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );

    // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix, and section suffix (when specified)
    stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    //stream.write( "<_gte:AttributeContentPage attr=\"startat\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:PageBlockPageNumber/>");
    stream.write( "<_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
		stream.write( "<_gte:PageBlockPageNumber/>" );
    stream.write( "<_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/></_gte:Target></_gte:Translate></_app:Gentext>" );
  }

  if ( pagesetNS.children['PageRef'] == null ) {
    var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
    stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
  }


  var pageSeq = new fPageSequenceItem();
  var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'rightBlank', pageInfo, pagesetNS, true, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'leftBlank', pageInfo, pagesetNS, false, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'EDI_Page_Set_right' ]( 'rightFirst', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'EDI_Page_Set_right' ]( 'leftFirst', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'EDI_Page_Set_right' ]( 'rightPage', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'EDI_Page_Set_right' ]( 'leftPage', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
  pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet pageSetName="Foldout_Page_Set">
<Margins bottom="1in" evenLeft="Left_Margin" evenRight="Right_Margin"
oddLeft="Left_Margin" oddRight="Right_Margin" paperHeight="11in"
paperWidth="17in"/>
<Headers></Headers>
<Footers></Footers>
<Layouts right="Foldout_Page"/>
<Columns></Columns>
<PageNumbers pageNumberStyle="1"></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'Foldout_Page_Set' ];
if ( pageInfo == undefined )
{
   //setup the page, column and other information important to this pageset
   template.pageInfo[ 'Foldout_Page_Set' ] = pageInfo = {};
   pageInfo.changeBarPlacement = 'left'
   pageInfo.paperHeight = new fLength( '11in' );
   pageInfo.paperWidth = new fLength( '17in' );
   pageInfo.topMargin = new fLength( '1.5in' );
   pageInfo.bottomMargin = new fLength( '1.25in' );
   pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
   pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
   pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
   pageInfo.evenRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
   pageInfo.initialColumnCount = 1;
   pageInfo.balanceColumns = false;
   pageInfo.verticalJustification = false;
   pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
   var columnInfo = {};
   var column = {};
   pageInfo.columnInfo = [];

   pageInfo.columnInfo[ 2 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = column;

   pageInfo.columnInfo[ 3 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

   pageInfo.columnInfo[ 4 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

   pageInfo.columnInfo[ 5 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

   pageInfo.columnInfo[ 6 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

   pageInfo.columnInfo[ 7 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

   pageInfo.columnInfo[ 8 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:Foldout_Page_Set');
if ( pagesetNS.children['PageSequence'] == null )
{

   if ( pagesetNS.children['PageNumber'] == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"Afcf7da69-4591-43b7-8eec-f548573a5ee6\">" );
        //stream.write( "<_gte:Target lang=\"en\"><_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );

      // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix
      stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:PageNumber/><_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/>/<_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:NextPageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );

   }


   if ( pagesetNS.children['PageRef'] == null )
   {
      var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
      stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
   }


   var pageSeq = new fPageSequenceItem();
   var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_ANY;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
   psc.layout = pageTypes[ 'Foldout_Page' ]( 'blank', pageInfo, pagesetNS, true, true );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_ANY;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_ANY;
   psc.layout = pageTypes[ 'Foldout_Page' ]( 'page', pageInfo, pagesetNS, true, false );
   pageSeq.addCondition( psc );

   var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
   pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet doubleSided="yes" pageSetName="Front_Cover">
<Margins evenLeft="Right_Margin" evenRight="Left_Margin"
oddLeft="Left_Margin" oddRight="Right_Margin" paperHeight="11in"
paperWidth="8.5in"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Intentional_Blank_Cover" firstRight="Front_Cover"
left="Inside_Front_Cover" right="Inside_Front_Cover"/>
<Columns></Columns>
<PageNumbers pageNumberStyle="1"></PageNumbers>
</PrintPageSet>
<PrintPageSet
comment='Edited to add the front-matter "prefix" to the page number (like "FM-3").'
doubleSided="no" pageSetName="Front_Matter_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Left_Margin"
evenRight="Right_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts right="Front_Matter_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="A102ebe2d-eb48-4a12-8e08-15a567c52778"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M080" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'Front_Matter_Page_Set' ];
if ( pageInfo == undefined )
{
   //setup the page, column and other information important to this pageset
   template.pageInfo[ 'Front_Matter_Page_Set' ] = pageInfo = {};
   pageInfo.changeBarPlacement = 'left'
   pageInfo.paperHeight = template.sizeDefinitions[ 'Page_Height' ];
   pageInfo.paperWidth = template.sizeDefinitions[ 'Page_Width' ];
   pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
   pageInfo.bottomMargin = template.sizeDefinitions[ 'Bottom_Margin' ];
   pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
   pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
   pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Right_Margin' ];
   pageInfo.evenRightMargin = template.sizeDefinitions[ 'Left_Margin' ];
   pageInfo.initialColumnCount = 1;
   pageInfo.balanceColumns = false;
   pageInfo.verticalJustification = false;
   pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
   var columnInfo = {};
   var column = {};
   pageInfo.columnInfo = [];

   pageInfo.columnInfo[ 2 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = column;

   pageInfo.columnInfo[ 3 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

   pageInfo.columnInfo[ 4 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

   pageInfo.columnInfo[ 5 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

   pageInfo.columnInfo[ 6 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

   pageInfo.columnInfo[ 7 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

   pageInfo.columnInfo[ 8 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:Front_Matter_Page_Set');
if ( pagesetNS.children['PageSequence'] == null )
{

   if ( pagesetNS.children['PageNumber'] == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"A102ebe2d-eb48-4a12-8e08-15a567c52778\">" );

      // **** SOURCE EDIT: Add "FM-" for the page number prefix
      stream.write( "<_gte:Target lang=\"en\">FM-<_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );
   }


   if ( pagesetNS.children['PageRef'] == null )
   {
      var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
      stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
   }


   var pageSeq = new fPageSequenceItem();
   var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_ODD;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
   psc.layout = pageTypes[ 'Intentional_Blank_frontmatter' ]( 'rightBlank', pageInfo, pagesetNS, true, true );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_EVEN;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
   psc.layout = pageTypes[ 'Intentional_Blank_frontmatter' ]( 'leftBlank', pageInfo, pagesetNS, false, true );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_ODD;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_ANY;
   psc.layout = pageTypes[ 'Front_Matter_Page_Set_right' ]( 'rightPage', pageInfo, pagesetNS, true, false );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_EVEN;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_ANY;
   psc.layout = pageTypes[ 'Front_Matter_Page_Set_right' ]( 'leftPage', pageInfo, pagesetNS, false, false );
   pageSeq.addCondition( psc );

   var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
   pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet
comment='Similar to Default page set, but using "INTRO" as a page prefix.'
doubleSided="yes" pageSetName="Intro_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blank="Default_Page_Set_right" blankLeft="Intentional_Blank"
firstLeft="Default_Page_Set_right" firstRight="Default_Page_Set_right"
left="Default_Page_Set_right" right="Default_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="on"
id="Ab14c3213-4d0d-43cb-881b-aef30431bd6b"><_gte:Target lang="en"
>INTRO-<_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet
comment='This page set is used for the Part list pages of the IPD (not figures or frontmatter), and has the "ITEM NOT ILLUSTRATED" text added'
doubleSided="yes" pageSetName="IPD_List_Page_Set">
<Margins bottom="33mm" evenLeft="Right_Margin" evenRight="Left_Margin"
oddLeft="Left_Margin" oddRight="Right_Margin" paperHeight="Page_Height"
paperWidth="Page_Width" top="2in"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blank="Intentional_Blank_Page_Block"
blankLeft="Intentional_Blank_Page_Block" right="IPD_List_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="A8f3a6516-df70-49f9-ba7e-9020ab449fa6"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M110" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'IPD_List_Page_Set' ];
if ( pageInfo == undefined )
{
   //setup the page, column and other information important to this pageset
   template.pageInfo[ 'IPD_List_Page_Set' ] = pageInfo = {};
   pageInfo.changeBarPlacement = 'left'
   pageInfo.paperHeight = template.sizeDefinitions[ 'Page_Height' ];
   pageInfo.paperWidth = template.sizeDefinitions[ 'Page_Width' ];
   pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
   pageInfo.bottomMargin = new fLength( '33mm' );
   pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
   pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
   pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Right_Margin' ];
   pageInfo.evenRightMargin = template.sizeDefinitions[ 'Left_Margin' ];
   pageInfo.initialColumnCount = 1;
   pageInfo.balanceColumns = true; // RS: Balance columns for EDI output
   pageInfo.verticalJustification = false;
   pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
   var columnInfo = {};
   var column = {};
   pageInfo.columnInfo = [];

   pageInfo.columnInfo[ 2 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = column;

   pageInfo.columnInfo[ 3 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

   pageInfo.columnInfo[ 4 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

   pageInfo.columnInfo[ 5 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

   pageInfo.columnInfo[ 6 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

   pageInfo.columnInfo[ 7 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

   pageInfo.columnInfo[ 8 ] = columnInfo = [];
   column = new fBlockColumn;
   column.width = '1*';
   column.gutter = '1.5pc';
   columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:IPD_List_Page_Set');
if ( pagesetNS.children['PageSequence'] == null )
{

   if ( pagesetNS.children['PageNumber'] == null )
   {
      var primaryStream = template.content.getStream( template.primaryStream );
      var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
      stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"A8f3a6516-df70-49f9-ba7e-9020ab449fa6\">" );

      //stream.write( "<_gte:Target lang=\"en\"><_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );
      // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix
      stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:PageBlockPageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );
   }


   if ( pagesetNS.children['PageRef'] == null )
   {
      var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
      stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
   }


   var pageSeq = new fPageSequenceItem();
   var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'rightBlank', pageInfo, pagesetNS, true, true );
  pageSeq.addCondition( psc );


   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_EVEN;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
   psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'leftBlank', pageInfo, pagesetNS, false, true );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_ODD;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_ANY;
   psc.layout = pageTypes[ 'IPD_List_Page_Set_right' ]( 'rightPage', pageInfo, pagesetNS, true, false );
   pageSeq.addCondition( psc );

   var psc = new fPageSequenceCondition();
   psc.testSide = fPageSequenceCondition.SIDE_EVEN;
   psc.testPosition = fPageSequenceCondition.POSITION_ANY;
   psc.testContent = fPageSequenceCondition.CONTENT_ANY;
   psc.layout = pageTypes[ 'IPD_List_Page_Set_right' ]( 'leftPage', pageInfo, pagesetNS, false, false );
   pageSeq.addCondition( psc );

   var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
   pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet
comment='This page set is used for the Part list pages of the IPD (not figures or frontmatter), and has the "ITEM NOT ILLUSTRATED" text added'
doubleSided="yes" pageSetName="IPD_List_Page_Set_ACMM">
<Margins bottom="33mm" evenLeft="Right_Margin" evenRight="Left_Margin"
oddLeft="Left_Margin" oddRight="Right_Margin" paperHeight="Page_Height"
paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blank="Intentional_Blank_Page_Block"
blankLeft="Intentional_Blank_Page_Block" right="IPD_List_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="Acdbc37cf-5c2f-4f0c-8c2a-2811beb2ed96"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet
comment='RS: Added Landscape page set to better handle landscape tables (indentation was messed up when nested in procsteps using only page mode "landscape for duration of element")'
doubleSided="yes" pageSetName="Landscape_Change_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Intentional_Blank"
right="Landscape_Change_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="A7f8f0309-91b5-4395-817d-3a8f0b483f27"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet
comment='RS: Added Landscape page set to better handle landscape tables (indentation was messed up when nested in procsteps using only page mode "landscape for duration of element")'
doubleSided="yes" pageSetName="Landscape_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Intentional_Blank" right="Landscape_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="Adfaaf44c-dd67-4e9a-a47f-8cf0b031c65b"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet
comment='Similar to Default page set, but using "LEP" as a page prefix.'
doubleSided="yes" pageSetName="LEP_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Intentional_Blank" firstRight="LEP_Page_Set_first"
right="LEP_Page_Set_right"/>
<Columns initialColumnCount="2"></Columns>
<PageNumbers><_gte:Translate translate="off"
id="Ac072f268-2e41-4dcb-9b13-5589660b862b"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet pageSetName="Page_Block_Foldout_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Left_Margin"
evenRight="Right_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="11in" paperWidth="17in" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts right="Foldout_Page"/>
<Columns></Columns>
<PageNumbers pageNumberStyle="1"></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'Page_Block_Foldout_Page_Set' ];
if ( pageInfo == undefined ) {
  //setup the page, column and other information important to this pageset
  template.pageInfo[ 'Page_Block_Foldout_Page_Set' ] = pageInfo = {};
  pageInfo.changeBarPlacement = 'left';
  pageInfo.paperHeight = new fLength( '11in' );
  pageInfo.paperWidth = new fLength( '17in' );
  //pageInfo.topMargin = new fLength( '1.5in' );
  //pageInfo.bottomMargin = new fLength( '1.25in' );
  pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
  //pageInfo.bottomMargin = template.sizeDefinitions[ 'Bottom_Margin' ];
  pageInfo.bottomMargin = new fLength( '27mm' ); // enough for three lines of figure title
  pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.evenRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.initialColumnCount = 1;
  pageInfo.balanceColumns = false;
  pageInfo.verticalJustification = false;
  pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
  var columnInfo = {};
  var column = {};
  pageInfo.columnInfo = [];

  pageInfo.columnInfo[ 2 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = column;

  pageInfo.columnInfo[ 3 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

  pageInfo.columnInfo[ 4 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

  pageInfo.columnInfo[ 5 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

  pageInfo.columnInfo[ 6 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

  pageInfo.columnInfo[ 7 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

  pageInfo.columnInfo[ 8 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:Page_Block_Foldout_Page_Set');
if ( pagesetNS.children['PageSequence'] == null ) {

  if ( pagesetNS.children['PageNumber'] == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"A556a8935-93d8-4e92-a4b4-7f7a94667xfx\">" );

    //stream.write( "<_gte:Target lang=\"en\"><_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );

    // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix, and section suffix (when specified)
    stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    stream.write( "<_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:PageBlockPageNumber/><_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/>/<_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:NextPageBlockPageNumber/>");
    stream.write( "<_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/></_gte:Target></_gte:Translate></_app:Gentext>" );

  }

  if ( pagesetNS.children['PageRef'] == null ) {
    var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
    stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
  }


  var pageSeq = new fPageSequenceItem();
  var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ANY;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Foldout_Page' ]( 'blank', pageInfo, pagesetNS, true, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ANY;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Foldout_Page' ]( 'page', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
  pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet
comment='RS: Added Landscape page set to better handle landscape tables (indentation was messed up when nested in procsteps using only page mode "landscape for duration of element")'
doubleSided="yes" pageSetName="Page_Block_Landscape_Change_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Intentional_Blank_Page_Block"
right="Landscape_Change_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="A9bb5a968-54eb-488d-8165-315a0004acfe"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'Page_Block_Landscape_Change_Page_Set' ];
if ( pageInfo == undefined ) {
  //setup the page, column and other information important to this pageset
  template.pageInfo[ 'Page_Block_Landscape_Change_Page_Set' ] = pageInfo = {};
  pageInfo.changeBarPlacement = 'left';
  pageInfo.paperHeight = template.sizeDefinitions[ 'Page_Height' ];
  pageInfo.paperWidth = template.sizeDefinitions[ 'Page_Width' ];
  pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
  pageInfo.bottomMargin = template.sizeDefinitions[ 'Bottom_Margin' ];
  pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenRightMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.initialColumnCount = 1;
  pageInfo.balanceColumns = false;
  pageInfo.verticalJustification = false;
  pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
  var columnInfo = {};
  var column = {};
  pageInfo.columnInfo = [];

  pageInfo.columnInfo[ 2 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = column;

  pageInfo.columnInfo[ 3 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

  pageInfo.columnInfo[ 4 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

  pageInfo.columnInfo[ 5 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

  pageInfo.columnInfo[ 6 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

  pageInfo.columnInfo[ 7 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

  pageInfo.columnInfo[ 8 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:Page_Block_Landscape_Change_Page_Set');
if ( pagesetNS.children['PageSequence'] == null ) {

  if ( pagesetNS.children['PageNumber'] == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"A9bb5a968-54eb-488d-8165-315a0004acfe\">" );
    //stream.write( "<_gte:Target lang=\"en\"><_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );

    // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix, and section suffix (when specified)
    // Also use the special PageBlockPageNumber (in the APP add-in template)
    stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    stream.write( "<_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:PageBlockPageNumber/><_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    stream.write( "<_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/></_gte:Target></_gte:Translate></_app:Gentext>" );
  }

  if ( pagesetNS.children['PageRef'] == null ) {
    var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
    stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
  }


  var pageSeq = new fPageSequenceItem();
  var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Landscape_Change_Page_Set_right' ]( 'rightBlank', pageInfo, pagesetNS, true, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'leftBlank', pageInfo, pagesetNS, false, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Landscape_Change_Page_Set_right' ]( 'rightPage', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Landscape_Change_Page_Set_right' ]( 'leftPage', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
  pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet
comment='RS: Added Landscape page set to better handle landscape tables (indentation was messed up when nested in procsteps using only page mode "landscape for duration of element")'
doubleSided="yes" pageSetName="Page_Block_Landscape_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Intentional_Blank_Page_Block"
right="Landscape_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="A18ef0459-5cf8-4c61-a5f8-ff9235c6fcb8"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'Page_Block_Landscape_Page_Set' ];
if ( pageInfo == undefined ) {
  //setup the page, column and other information important to this pageset
  template.pageInfo[ 'Page_Block_Landscape_Page_Set' ] = pageInfo = {};
  pageInfo.changeBarPlacement = 'left';
  pageInfo.paperHeight = template.sizeDefinitions[ 'Page_Height' ];
  pageInfo.paperWidth = template.sizeDefinitions[ 'Page_Width' ];
  pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
  pageInfo.bottomMargin = template.sizeDefinitions[ 'Bottom_Margin' ];
  pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenRightMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.initialColumnCount = 1;
  pageInfo.balanceColumns = false;
  pageInfo.verticalJustification = false;
  pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
  var columnInfo = {};
  var column = {};
  pageInfo.columnInfo = [];

  pageInfo.columnInfo[ 2 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = column;

  pageInfo.columnInfo[ 3 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

  pageInfo.columnInfo[ 4 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

  pageInfo.columnInfo[ 5 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

  pageInfo.columnInfo[ 6 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

  pageInfo.columnInfo[ 7 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

  pageInfo.columnInfo[ 8 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:Page_Block_Landscape_Page_Set');
if ( pagesetNS.children['PageSequence'] == null ) {

  if ( pagesetNS.children['PageNumber'] == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"A18ef0459-5cf8-4c61-a5f8-ff9235c6fcb8\">" );
    //stream.write( "<_gte:Target lang=\"en\"><_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );

    // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix, and section suffix (when specified)
    // Also use the special PageBlockPageNumber (in the APP add-in template)
    stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    stream.write( "<_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/><_gte:PageBlockPageNumber/><_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    stream.write( "<_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/></_gte:Target></_gte:Translate></_app:Gentext>" );
  }

  if ( pagesetNS.children['PageRef'] == null ) {
    var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
    stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
  }


  var pageSeq = new fPageSequenceItem();
  var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Landscape_Page_Set_right' ]( 'rightBlank', pageInfo, pagesetNS, true, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'leftBlank', pageInfo, pagesetNS, false, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Landscape_Page_Set_right' ]( 'rightPage', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Landscape_Page_Set_right' ]( 'leftPage', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
  pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet comment="
" doubleSided="yes" pageSetName="Page_Block_Page_1000_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blank="Intentional_Blank_Page_Block"
blankLeft="Intentional_Blank_Page_Block"
firstLeft="Default_Page_Set_right" firstRight="Default_Page_Set_right"
left="Default_Page_Set_right" right="Default_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="Abdbd5f53-2ef3-4958-8a25-b33b8669f4da"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'Page_Block_Page_1000_Set' ];
if ( pageInfo == undefined ) {
  //setup the page, column and other information important to this pageset
  template.pageInfo[ 'Page_Block_Page_1000_Set' ] = pageInfo = {};
  pageInfo.changeBarPlacement = 'left';
  pageInfo.paperHeight = template.sizeDefinitions[ 'Page_Height' ];
  pageInfo.paperWidth = template.sizeDefinitions[ 'Page_Width' ];
  pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
  pageInfo.bottomMargin = template.sizeDefinitions[ 'Bottom_Margin' ];
  pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenRightMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.initialColumnCount = 1;
  pageInfo.balanceColumns = false;
  pageInfo.verticalJustification = false;
  pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
  var columnInfo = {};
  var column = {};
  pageInfo.columnInfo = [];

  pageInfo.columnInfo[ 2 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = column;

  pageInfo.columnInfo[ 3 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

  pageInfo.columnInfo[ 4 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

  pageInfo.columnInfo[ 5 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

  pageInfo.columnInfo[ 6 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

  pageInfo.columnInfo[ 7 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

  pageInfo.columnInfo[ 8 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:Page_Block_Page_1000_Set');
if ( pagesetNS.children['PageSequence'] == null ) {

  if ( pagesetNS.children['PageNumber'] == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"Abdbd5f53-2ef3-4958-8a25-b33b8669f4da\">" );
    // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix, and section suffix (when specified)
    stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    //stream.write( "<_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagelast\"/><_gte:PageBlockPageNumber/>");
    stream.write( "1<_gte:PageBlockPageNumber/>");    stream.write( "<_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/></_gte:Target></_gte:Translate></_app:Gentext>" );

  }

  if ( pagesetNS.children['PageRef'] == null ) {
    var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
    stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
  }


  var pageSeq = new fPageSequenceItem();
  var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'rightBlank', pageInfo, pagesetNS, true, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'leftBlank', pageInfo, pagesetNS, false, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'rightFirst', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'leftFirst', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'rightPage', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'leftPage', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
  pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet comment="
" doubleSided="yes" pageSetName="Page_Block_Page_3000_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blank="Intentional_Blank_Page_Block"
blankLeft="Intentional_Blank_Page_Block"
firstLeft="Default_Page_Set_right" firstRight="Default_Page_Set_right"
left="Default_Page_Set_right" right="Default_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="A4d9aee71-f9b8-427a-b3b2-4a3f95919593"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'Page_Block_Page_3000_Set' ];
if ( pageInfo == undefined ) {
  //setup the page, column and other information important to this pageset
  template.pageInfo[ 'Page_Block_Page_3000_Set' ] = pageInfo = {};
  pageInfo.changeBarPlacement = 'left';
  pageInfo.paperHeight = template.sizeDefinitions[ 'Page_Height' ];
  pageInfo.paperWidth = template.sizeDefinitions[ 'Page_Width' ];
  pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
  pageInfo.bottomMargin = template.sizeDefinitions[ 'Bottom_Margin' ];
  pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenRightMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.initialColumnCount = 1;
  pageInfo.balanceColumns = false;
  pageInfo.verticalJustification = false;
  pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
  var columnInfo = {};
  var column = {};
  pageInfo.columnInfo = [];

  pageInfo.columnInfo[ 2 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = column;

  pageInfo.columnInfo[ 3 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

  pageInfo.columnInfo[ 4 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

  pageInfo.columnInfo[ 5 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

  pageInfo.columnInfo[ 6 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

  pageInfo.columnInfo[ 7 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

  pageInfo.columnInfo[ 8 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:Page_Block_Page_3000_Set');
if ( pagesetNS.children['PageSequence'] == null ) {

  if ( pagesetNS.children['PageNumber'] == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"A4d9aee71-f9b8-427a-b3b2-4a3f95919593\">" );

    // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix, and section suffix (when specified)
    stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    //stream.write( "<_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagelast\"/><_gte:PageBlockPageNumber/>");
    stream.write( "3<_gte:PageBlockPageNumber/>");
    stream.write( "<_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/></_gte:Target></_gte:Translate></_app:Gentext>" );
    //stream.write( "<_gte:Target lang=\"en\"><_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );
  }

  if ( pagesetNS.children['PageRef'] == null ) {
    var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
    stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
  }


  var pageSeq = new fPageSequenceItem();
  var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'rightBlank', pageInfo, pagesetNS, true, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'leftBlank', pageInfo, pagesetNS, false, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'rightFirst', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'leftFirst', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'rightPage', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'leftPage', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
  pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet
comment='Used for pages that have a "page block" number (starting at a multiple of 1000).
Edited to add the "prefix" to the page number (like "TEST-4").'
doubleSided="yes" pageSetName="Page_Block_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blank="Intentional_Blank_Page_Block"
blankLeft="Intentional_Blank_Page_Block"
firstLeft="Default_Page_Set_right" firstRight="Default_Page_Set_right"
left="Default_Page_Set_right" right="Default_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="A556a8935-93d8-4e92-a4b4-7f7a94667cfc"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
<EditedSource minorVersion="2" productVersion="6.0M140" sourceType="app"
stylerVersion="6"><Source type="application/x-javascript"
xml:space="preserve"><![CDATA[var pageInfo = template.pageInfo[ 'Page_Block_Page_Set' ];
if ( pageInfo == undefined ) {
  //setup the page, column and other information important to this pageset
  template.pageInfo[ 'Page_Block_Page_Set' ] = pageInfo = {};
  pageInfo.changeBarPlacement = 'left';
  pageInfo.paperHeight = template.sizeDefinitions[ 'Page_Height' ];
  pageInfo.paperWidth = template.sizeDefinitions[ 'Page_Width' ];
  pageInfo.topMargin = template.sizeDefinitions[ 'Top_Margin' ];
  pageInfo.bottomMargin =  new fLength('32mm'); //template.sizeDefinitions[ 'Bottom_Margin' ];
  pageInfo.oddLeftMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.oddRightMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenLeftMargin = template.sizeDefinitions[ 'Right_Margin' ];
  pageInfo.evenRightMargin = template.sizeDefinitions[ 'Left_Margin' ];
  pageInfo.initialColumnCount = 1;
  pageInfo.balanceColumns = false;
  pageInfo.verticalJustification = false;
  pageInfo.horizontalAlignment = fBlock.ALIGN_LEFT;
  var columnInfo = {};
  var column = {};
  pageInfo.columnInfo = [];

  pageInfo.columnInfo[ 2 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '0pc';
  columnInfo[0] = columnInfo[1] = column;

  pageInfo.columnInfo[ 3 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '0pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = column;

  pageInfo.columnInfo[ 4 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = column;

  pageInfo.columnInfo[ 5 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = column;

  pageInfo.columnInfo[ 6 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = column;

  pageInfo.columnInfo[ 7 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = column;

  pageInfo.columnInfo[ 8 ] = columnInfo = [];
  column = new fBlockColumn;
  column.width = '1*';
  column.gutter = '1.5pc';
  columnInfo[0] = columnInfo[1] = columnInfo[2] = columnInfo[3] = columnInfo[4] = columnInfo[5] = columnInfo[6] = columnInfo[7] = column;
}

var pagesetNS = template.content.getNamespace( template.stylerNamespace + ':PageSets:Page_Block_Page_Set');
if ( pagesetNS.children['PageSequence'] == null ) {

  if ( pagesetNS.children['PageNumber'] == null ) {
    var primaryStream = template.content.getStream( template.primaryStream );
    var stream = template.content.createStream( 'PageNumber', primaryStream.type, pagesetNS );
    stream.write( "<?xml version=\"1.0\"?><_app:Gentext xmlns:_app=\"http://www.arbortext.com/namespace/APP/APPFormattingElements\" xmlns:_gte=\"http://www.arbortext.com/namespace/Styler/GeneratedTextElements\"><_gte:Translate translate=\"off\" id=\"A556a8935-93d8-4e92-a4b4-7f7a94667cfc\">" );

    //stream.write( "<_gte:Target lang=\"en\"><_gte:PageNumber/></_gte:Target></_gte:Translate></_app:Gentext>" );

    // **** SOURCE EDIT: Insert the shortPrefix attribute for the page number prefix, and section suffix (when specified)
    stream.write( "<_gte:Target lang=\"en\"><_gte:AttributeContentPage attr=\"shortPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    //stream.write( "<_gte:AttributeContentPage attr=\"startat\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    stream.write( "<_gte:AttributeContentPage attr=\"pageBlockPrefix\" elem=\"pmEntry\" occur=\"pagefirst\"/>");
    //stream.write( "<_gte:DivisionReference xrefStyle=\"pageBlockPrefix\" which=\"last\" divs=\"pmEntry\"/>");
		stream.write( "<_gte:PageBlockPageNumber/>" );
    stream.write( "<_gte:AttributeContentPage attr=\"authorityName\" elem=\"pmEntry\" occur=\"pagefirst\"/></_gte:Target></_gte:Translate></_app:Gentext>" );
  }

  if ( pagesetNS.children['PageRef'] == null ) {
    var stream = template.content.createStream( 'PageRef', fTag.TYPE_JS_FUNCTION, pagesetNS );
    stream.write( "formatting.currentPage.numberStyle = '1';\nvar formatStreamName = '" + pagesetNS.children['PageNumber'].fullname + "';\nformatting.currentPage.pageString = formatting.evaluateShowString( '$^[format_text \"' + formatStreamName + '\" #40cm]');\n" );
  }


  var pageSeq = new fPageSequenceItem();
  var pageTypes = template.content.functions[ template.stylerNamespace ].PageTypes;

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'rightBlank', pageInfo, pagesetNS, true, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_BLANK;
  psc.layout = pageTypes[ 'Intentional_Blank_Page_Block' ]( 'leftBlank', pageInfo, pagesetNS, false, true );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'rightFirst', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_FIRST;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'leftFirst', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_ODD;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'rightPage', pageInfo, pagesetNS, true, false );
  pageSeq.addCondition( psc );

  var psc = new fPageSequenceCondition();
  psc.testSide = fPageSequenceCondition.SIDE_EVEN;
  psc.testPosition = fPageSequenceCondition.POSITION_ANY;
  psc.testContent = fPageSequenceCondition.CONTENT_ANY;
  psc.layout = pageTypes[ 'Default_Page_Set_right' ]( 'leftPage', pageInfo, pagesetNS, false, false );
  pageSeq.addCondition( psc );

  var pageSeqCtrl = template.content.createControl( 'PageSequence', fTag.TYPE_PAGE_SEQUENCE_CTRL, pagesetNS );
  pageSeqCtrl.addRule( pageSeq );
}
]]></Source></EditedSource>
</PrintPageSet>
<PrintPageSet doubleSided="no" pageSetName="Separator_Page_Set">
<Margins bottom="5in" evenLeft="Left_Margin" evenRight="Right_Margin"
oddLeft="Left_Margin" oddRight="Right_Margin" paperHeight="Page_Height"
paperWidth="Page_Width" top="5in"/>
<Headers></Headers>
<Footers></Footers>
<Layouts right="Separator_Page"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="Acb5aeb95-382a-494b-ab2b-2cde636ed78a"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet
comment='Special page set for storage sections, since the regular page set prefix numbering was getting mixed up before the IPD
Edited to add the "prefix" to the page number (like "TEST-4").'
doubleSided="yes" pageSetName="Storage_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Storage_Intentional_Blank"
right="Storage_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="on"
id="A5622fb22-7361-4ea0-bd49-aaecd5c13889"><_gte:Target lang="en"
>STORE-<_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet
comment='Similar to Default page set, but using "T" as a page prefix.'
doubleSided="yes" pageSetName="Title_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Intentional_Blank_Cover"
right="Title_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="on"
id="A93d055ec-da41-494a-a62a-471c95fdf494"><_gte:Target lang="en"
>T-<_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet comment="For ACMM, don't use &#x22;T&#x22; as a page prefix."
doubleSided="yes" pageSetName="Title_Page_Set_ACMM">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Intentional_Blank_Cover"
right="Title_Page_Set_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="off"
id="A87749019-6a25-4419-89dc-4704d5ae054e"><_gte:Target lang="en"
><_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
<PrintPageSet doubleSided="yes" pageSetName="ToC_Page_Set">
<Margins bottom="Bottom_Margin" evenLeft="Right_Margin"
evenRight="Left_Margin" oddLeft="Left_Margin" oddRight="Right_Margin"
paperHeight="Page_Height" paperWidth="Page_Width" top="Top_Margin"/>
<Headers></Headers>
<Footers></Footers>
<Layouts blankLeft="Intentional_Blank_ToC" right="ToC_right"/>
<Columns></Columns>
<PageNumbers><_gte:Translate translate="on"
id="A00ffdf77-a497-4d71-a684-80bf5c3f73a1"><_gte:Target lang="en"
>TOC-<_gte:PageNumber/></_gte:Target></_gte:Translate></PageNumbers>
</PrintPageSet>
</PrintPageSets>
<PageTypes>
<PageType pageTypeName="ACMM_Page_Set_right">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="ACMM_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Blank_Foldout_Page">
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Default_Page_Set_right">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="main_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="EDI_Page_Set_first">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="main_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content_EDI"/></PageType>
<PageType pageTypeName="EDI_Page_Set_right">
<PageRegionReference pageRegionName="EDI_Continued_Title"/>
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="main_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content_EDI"/></PageType>
<PageType pageTypeName="Foldout_Page">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="foldout_footer"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Front_Cover">
<PageRegionReference pageRegionName="footer_ATA_number_SPM_cover"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="footer_ATA_number_cover"/>
<PageRegionReference pageRegionName="front_cover_-_issue_info"/>
<PageRegionReference pageRegionName="front_cover_-_footer"/>
<PageRegionReference pageRegionName="front_cover_-_export_info"/>
<PageRegionReference pageRegionName="front_cover_-_export_control"/>
<PageRegionReference pageRegionName="front_cover_-_legal_notice"/>
<PageRegionReference pageRegionName="front_cover_-_part_numbers"/>
<PageRegionReference pageRegionName="front_cover_-_title"/>
<PageRegionReference pageRegionName="front_cover_-_company"/></PageType>
<PageType pageTypeName="Front_Matter_Page_Set_right">
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="front_matter_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Inside_Front_Cover">
<PageRegionReference pageRegionName="inside_front_cover_footer"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="inside_front_cover_content"/>
</PageType>
<PageType pageTypeName="Intentional_Blank">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="intentionally_blank_footer"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="intentionally_blank"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Intentional_Blank_ACMM">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="ACMM_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="intentionally_blank"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Intentional_Blank_Cover">
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="intentionally_blank_footer_cover"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="intentionally_blank"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Intentional_Blank_frontmatter">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="front_matter_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="intentionally_blank"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Intentional_Blank_Page_Block">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference
pageRegionName="intentionally_blank_footer_page_block"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="intentionally_blank"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Intentional_Blank_ToC">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="ToC_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="intentionally_blank"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="IPD_List_Page_Set_right">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="IPD_table_header"/>
<PageRegionReference pageRegionName="IPD_not_illustrated"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="main_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Landscape_Change_Page_Set_right">
<PageRegionReference pageRegionName="landscape_change_bar"/>
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="main_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content_landscape"/>
</PageType>
<PageType pageTypeName="Landscape_Page_Set_right">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="main_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content_landscape"/>
</PageType>
<PageType pageTypeName="LEP_Page_Set_first">
<PageRegionReference pageRegionName="LEP_content"/>
<PageRegionReference pageRegionName="LEP_headings"/>
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="LEP_footer_right"/>
<PageRegionReference pageRegionName="LEP_footer"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/></PageType>
<PageType pageTypeName="LEP_Page_Set_right">
<PageRegionReference pageRegionName="LEP_content"/>
<PageRegionReference pageRegionName="LEP_continued_headings"/>
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="LEP_footer_right"/>
<PageRegionReference pageRegionName="LEP_footer"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/></PageType>
<PageType pageTypeName="Separator_Page">
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Storage_Intentional_Blank">
<PageRegionReference pageRegionName="intentionally_blank_storage_footer"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="intentionally_blank"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="Storage_Page_Set_right">
<PageRegionReference pageRegionName="storage_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType
comment="This is for the pages following the cover page (proprietary information with pmType='pmt77').
Like the default page set, but remove the EFFICTIVITY block."
pageTypeName="Title_Page_Set_right">
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="main_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
<PageType pageTypeName="ToC_right">
<PageRegionReference pageRegionName="footer_effectivity_text"/>
<PageRegionReference pageRegionName="footer_effectivity"/>
<PageRegionReference pageRegionName="footer_copyright"/>
<PageRegionReference pageRegionName="ToC_footer_right"/>
<PageRegionReference pageRegionName="footer_ATA_number"/>
<PageRegionReference pageRegionName="main_header"/>
<PageRegionReference pageRegionName="main_content"/></PageType>
</PageTypes>
<PageRegions>
<PageRegion pageRegionName="ACMM_footer_right">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageBottom" width="176mm" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="ACMM_footer_right" verticalAlign="bottom"/>
</PageRegion>
<PageRegion pageRegionName="EDI_Continued_Title">
<PageRegionPosition height="1in" origin="topLeft"
positionHeight="absolute" positionY="fromTopMargin" y="-0.25in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="EDI_Continued_Title" verticalAlign="bottom"/>
<PageRegionRules bottom="yes"/></PageRegion>
<PageRegion
comment='The foldout footer differs just that it has two pages listed, like "Page 16/17".'
pageRegionName="foldout_footer">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageBottom" width="176mm" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="foldout_footer" verticalAlign="bottom"/>
</PageRegion>
<PageRegion pageRegionName="footer_ATA_number">
<PageRegionPosition height="0.75in" origin="topLeft"
positionHeight="absolute" positionWidth="absolute"
positionX="fromLeftMargin" positionY="fromPageTop" width="3.5in"
x="1.4in" y="10.1in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="ATA_number" verticalAlign="top"/></PageRegion>
<PageRegion pageRegionName="footer_ATA_number_cover">
<PageRegionPosition height="0.75in" origin="topLeft"
positionHeight="absolute" positionWidth="absolute"
positionX="fromLeftMargin" positionY="fromPageTop" width="2in" x="4.7in"
y="9.62in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="ATA_number" verticalAlign="top"/></PageRegion>
<PageRegion pageRegionName="footer_ATA_number_SPM_cover">
<PageRegionPosition height="0.75in" origin="topLeft"
positionHeight="absolute" positionWidth="absolute"
positionX="fromLeftMargin" positionY="fromPageTop" width="3.5in"
x="1.25in" y="10.1in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="ATA_number_SPM_Cover" verticalAlign="top"/>
</PageRegion>
<PageRegion pageRegionName="footer_copyright">
<PageRegionPosition height="6mm" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageBottom" width="176mm" y="3mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="footer_copyright" verticalAlign="top"/>
</PageRegion>
<PageRegion pageRegionName="footer_effectivity">
<PageRegionPosition height="1.2in" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionX="fromLeftMargin" positionY="fromPageBottom" width="2.4in"
x="0.9in" y="-10mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="footer_effectivity" verticalAlign="top"/>
</PageRegion>
<PageRegion pageRegionName="footer_effectivity_text">
<PageRegionPosition height="1.2in" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionX="fromLeftMargin" positionY="fromPageBottom" width="23mm"
x="0mm" y="-8mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="footer_effectivity_text" verticalAlign="top"/>
</PageRegion>
<PageRegion pageRegionName="front_cover_-_cage_code">
<PageRegionPosition height="1.25in" positionHeight="absolute"
positionX="fromLeftMargin" positionY="fromPageTop" y="1.5in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="front_cover_cage_codes"/></PageRegion>
<PageRegion pageRegionName="front_cover_-_company">
<PageRegionPosition height="2.25in" positionHeight="absolute"
positionWidth="absolute" positionX="fromPageLeft"
positionY="fromPageTop" width="6.75in" x="1in" y="0.5in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="front_cover_company"/></PageRegion>
<PageRegion pageRegionName="front_cover_-_export_control">
<PageRegionPosition height="0.25in" positionHeight="absolute"
positionWidth="absolute" positionX="fromPageLeft"
positionY="fromPageTop" rotationType="content" width="1.3in" x="1in"
y="7.82in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="front_cover_export_control" leftPadding="0pt"/>
</PageRegion>
<PageRegion pageClip="yes" pageRegionName="front_cover_-_export_info">
<PageRegionPosition height="1.25in" positionHeight="absolute"
positionWidth="absolute" positionY="fromPageTop" rotationType="content"
width="6.75in" x="0in" y="8.05in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="front_cover_export_info" leftPadding="0pt"
verticalAlign="top"/></PageRegion>
<PageRegion pageRegionName="front_cover_-_footer">
<PageRegionPosition height="0.43in" origin="bottomLeft"
positionHeight="absolute" positionY="fromPageBottom" width="0in" x="0in"
y="6.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="front_cover_footer" verticalAlign="top"/>
</PageRegion>
<PageRegion pageRegionName="front_cover_-_graphic">
<PageRegionPosition height="3.5in" origin="topLeft"
positionHeight="absolute" positionWidth="absolute"
positionX="fromPageLeft" positionY="fromPageTop" width="5.5in" x="1.5in"
y="3.75in"/>
<PageRegionGraphicContent
file="ICN-S1000DBIKE-AAA-000000-A-U8025-00014-A-01-01.eps"
horizontalScale="fitRegion" verticalScale="preserveAspect"
yOffset="0.25in"/></PageRegion>
<PageRegion pageRegionName="front_cover_-_issue_info">
<PageRegionPosition height="0.75in" positionHeight="absolute"
positionWidth="absolute" positionX="fromRightMargin"
positionY="fromPageTop" width="2.5in" x="2.75in" y="9.85in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="front_cover_issue_info" verticalAlign="bottom"/>
</PageRegion>
<PageRegion pageRegionName="front_cover_-_legal_notice">
<PageRegionPosition height="0.25in" positionHeight="absolute"
positionWidth="absolute" positionX="fromPageLeft"
positionY="fromPageTop" width="1.3in" x="3.7in" y="7.63in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="front_cover_legal_notice"/></PageRegion>
<PageRegion pageRegionName="front_cover_-_part_numbers">
<PageRegionPosition height="3in" positionHeight="absolute"
positionWidth="absolute" positionX="fromPageLeft"
positionY="fromPageTop" rotationType="content" width="6.75in" x="1in"
y="4.35in"/>
<PageRegionTextContent contentType="main"/></PageRegion>
<PageRegion pageRegionName="front_cover_-_title">
<PageRegionPosition height="2in" origin="topLeft"
positionHeight="absolute" positionWidth="absolute"
positionX="fromPageLeft" positionY="fromPageTop" width="6.75in" x="1in"
y="2.4in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="front_cover_title" verticalAlign="top"/>
</PageRegion>
<PageRegion pageRegionName="front_matter_footer_right">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionY="fromPageBottom" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="front_matter_footer_right" verticalAlign="bottom"/>
</PageRegion>
<PageRegion pageRegionName="inside_front_cover_content">
<PageRegionPosition height="0in" positionHeight="fromContentHeight"
positionY="fromTopMargin" y="0in"/>
<PageRegionTextContent contentType="main"/></PageRegion>
<PageRegion pageRegionName="inside_front_cover_footer">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageBottom" width="176mm" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="inside_front_cover_footer" verticalAlign="bottom"/>
</PageRegion>
<PageRegion pageRegionName="intentionally_blank">
<PageRegionPosition height="0.5in" positionHeight="absolute" y="4in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="intentionally_blank"/></PageRegion>
<PageRegion pageRegionName="intentionally_blank_footer">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionY="fromPageBottom" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="intentionally_blank_footer" verticalAlign="bottom"/>
</PageRegion>
<PageRegion pageRegionName="intentionally_blank_footer_cover">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionY="fromPageBottom" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="intentionally_blank_footer_cover"
verticalAlign="bottom"/></PageRegion>
<PageRegion pageRegionName="intentionally_blank_footer_page_block">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionY="fromPageBottom" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="intentionally_blank_footer_page_block"
verticalAlign="bottom"/></PageRegion>
<PageRegion pageRegionName="intentionally_blank_storage_footer">
<PageRegionPosition height="20mm" origin="bottomLeft"
positionHeight="absolute" positionY="fromPageBottom" y="11.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="intentionally_blank_storage_footer"
verticalAlign="bottom"/>
<PageRegionRules color="#000000" thickness="0.5pt" top="yes"/>
</PageRegion>
<PageRegion pageRegionName="IPD_not_illustrated">
<PageRegionPosition height="5mm" positionHeight="absolute"
positionY="fromBottomMargin" y="2mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="IPD_not_illustrated"/></PageRegion>
<PageRegion pageRegionName="IPD_table_header">
<PageRegionPosition height="1in" origin="bottomLeft"
positionHeight="absolute" positionY="fromTopMargin" y="-1mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="IPD_table_header" verticalAlign="bottom"/>
</PageRegion>
<PageRegion pageRegionName="landscape_change_bar">
<PageRegionPosition positionWidth="absolute" rotationAngle="90.0"
width="0.2in" x="-0.35in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="landscape_change_bar"/></PageRegion>
<PageRegion pageRegionName="LEP_content">
<PageRegionPosition height="-0.54in" y="0.51in"/>
<PageRegionTextContent contentType="main"/></PageRegion>
<PageRegion pageRegionName="LEP_continued_headings">
<PageRegionPosition height="1in" origin="topLeft"
positionHeight="absolute" positionWidth="fromContentWidth"
positionY="fromTopMargin" width="0mm" y="-6pt"/>
<PageRegionTextContent contentType="generated"
generatedContentName="LEP_Continued_Headings" verticalAlign="top"/>
</PageRegion>
<PageRegion pageRegionName="LEP_footer">
<PageRegionPosition height="0.7in" positionHeight="absolute"
positionY="fromBottomMargin" y="0.05in"/>
<PageRegionTextContent contentType="generated"
generatedContentName="LEP_footer"/>
<PageRegionRules top="yes"/></PageRegion>
<PageRegion pageRegionName="LEP_footer_right">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageBottom" width="176mm" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="LEP_footer_right" verticalAlign="bottom"/>
</PageRegion>
<PageRegion pageRegionName="LEP_headings">
<PageRegionPosition height="1in" origin="topLeft"
positionHeight="absolute" positionWidth="fromContentWidth"
positionY="fromTopMargin" width="0mm" y="-6pt"/>
<PageRegionTextContent contentType="generated"
generatedContentName="LEP_Headings" verticalAlign="top"/></PageRegion>
<PageRegion pageRegionName="main_content">
<PageRegionPosition height="0in" y="0in"/>
<PageRegionTextContent contentType="main"/></PageRegion>
<PageRegion pageRegionName="main_content_EDI">
<PageRegionPosition height="-0.88in" y="0.78in"/>
<PageRegionTextContent contentType="main"/></PageRegion>
<PageRegion pageRegionName="main_content_landscape">
<PageRegionPosition rotationAngle="90.0"/>
<PageRegionTextContent contentType="main"/></PageRegion>
<PageRegion pageRegionName="main_footer_right">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageBottom" width="176mm" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="main_footer_right" verticalAlign="bottom"/>
</PageRegion>
<PageRegion comment="Now all pages with headers have the same header"
pageRegionName="main_header">
<PageRegionPosition height="28mm" origin="topLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageTop" width="176mm" y="2.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="main_header" verticalAlign="bottom"/></PageRegion>
<PageRegion
comment="Not used anymore: just use the ATA number page region"
pageRegionName="separator_footer">
<PageRegionPosition height="20mm" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageBottom" width="176mm" y="9mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="separator_footer" verticalAlign="top"/>
<PageRegionRules bottom="no" color="#000000" left="no" right="no"
thickness="0.5pt" top="yes"/></PageRegion>
<PageRegion pageRegionName="storage_footer_right">
<PageRegionPosition height="20mm" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageBottom" width="176mm" y="11.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="storage_footer_right" verticalAlign="bottom"/>
<PageRegionRules bottom="no" color="#000000" left="no" right="no"
thickness="0.5pt" top="yes"/></PageRegion>
<PageRegion pageRegionName="ToC_footer_right">
<PageRegionPosition height="30mm" origin="bottomLeft"
positionHeight="absolute" positionWidth="absolute"
positionY="fromPageBottom" width="176mm" y="8.5mm"/>
<PageRegionTextContent contentType="generated"
generatedContentName="ToC_footer_right" verticalAlign="bottom"/>
</PageRegion>
</PageRegions>
<GeneratedContents>
<GeneratedContent generatedContentName="ACMM_footer_right">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A72a14202-de11-47b1-971e-8fbba4837ee4"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="4"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"/><_dtd:colspec
colname="col2" colwidth="200.00*"/><_dtd:colspec colname="COLSPEC1"
colwidth="1.35in"/><_dtd:colspec colname="col3" colwidth="2.55in"
/><_dtd:tbody><_dtd:row valign="top"><?PubTbl row rht="13.00mm"?><_dtd:entry
align="left"></_dtd:entry><_dtd:entry align="center" valign="bottom"
></_dtd:entry><_dtd:entry align="right" valign="bottom"></_dtd:entry
><_dtd:entry align="right" valign="bottom"><_ufe:FooterBlockStyle
><_ufe:FooterPage>Page <_gte:FormattedPageNumber/> of <_gte:FinalPageNumber
scopingDivision=""/></_ufe:FooterPage><_ufe:FooterDateStyle><_ufe:FooterDate
><_gte:AttributeContentPage attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_ufe:FooterBlockStyle></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="ATA_number">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A8a1e69e8-5175-4b93-b037-5c8c6bb90058"><_gte:Target
lang="en"><_ufe:Right><_ufe:FooterSNS></_ufe:FooterSNS></_ufe:Right
></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext
></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="ATA_number_SPM_Cover">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A80b8934e-8c10-491a-b4c9-cf4ec85705fd"><_gte:Target
lang="en"><_ufe:CoverATAForSPM></_ufe:CoverATAForSPM></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="EDI_Continued_Title">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A270ea57e-393a-4f9a-b00a-e4af32985464"><_gte:Target
lang="en"><_ufe:IPD_FunctionalItemRefsTitle></_ufe:IPD_FunctionalItemRefsTitle
><_ufe:IPD_EDI_TableHeader></_ufe:IPD_EDI_TableHeader></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent
comment='The foldout footer differs just that it has two pages listed, like "Page 16/17".'
generatedContentName="foldout_footer">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A586704d3-e547-46da-83a8-a6313379dfa3"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="3"
><?PubTbl tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"
colsep="0"/><_dtd:colspec colname="col2" colwidth="200.00*" colsep="0"
/><_dtd:colspec colname="col3" colwidth="2.55in"/><_dtd:tbody><_dtd:row
rowsep="0" valign="top"><_dtd:entry align="left"></_dtd:entry><_dtd:entry
align="center" valign="bottom"></_dtd:entry><_dtd:entry align="right"
valign="bottom"><_ufe:FooterBlockStyle><_ufe:FooterSpecialSectionName
><_gte:AttributeContentPage attr="specialSectionName" elem="pmEntry"
occur="pagefirst"></_gte:AttributeContentPage></_ufe:FooterSpecialSectionName
><_ufe:FooterPage>Pages <_gte:FormattedPageNumber/></_ufe:FooterPage
></_ufe:FooterBlockStyle><_ufe:FooterDateStyle><_ufe:FooterDate><_gte:AttributeContentPage
attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="footer_copyright">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A27bb6775-d5d3-4a41-9dc3-6eb51cd409e7"><_gte:Target
lang="en"><_ufe:Centre><_gte:Font TypeSize="8pt"><_gte:ElementContentPage
include="contentOnly"
xpath="/pm/identAndStatusSection/pmStatus/dataRestrictions/restrictionInfo/copyright/copyrightPara"
/></_gte:Font></_ufe:Centre></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="footer_effectivity">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="Ae9c70167-8736-491b-a3d5-ffbdcb257af2"><_gte:Target
lang="en"><_ufe:IfNotSPM><_dtd:table><?PubTbl table border-bottom-style="none"
border-left-style="none"?><_dtd:tgroup cols="1"><?PubTbl tgroup
cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt" ctmarg="0.00pt"?><_dtd:colspec
colname="col1"/><_dtd:tbody><_dtd:row valign="top"><?PubTbl
row rht="1.00cm"?><_dtd:entry colsep="0" align="left"><_dtd:_cellfont
TypeSize="10pt"/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_ufe:IfNotSPM></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="footer_effectivity_text">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A52165200-541b-4fd2-9c0b-1a7021332afb"><_gte:Target
lang="en"><_ufe:IfNotSPM><_dtd:table frame="none"><_dtd:tgroup cols="1"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="0.00pt"?><_dtd:colspec colname="col1"/><_dtd:tbody><_dtd:row
valign="top"><_dtd:entry colsep="0" align="left"><_dtd:_cellfont
TypeSize="10pt"/><_ufe:Effectivity position="absolute" top="-9pt"
></_ufe:Effectivity></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_ufe:IfNotSPM></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_cover_cage_codes">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A04972a60-ab48-4027-9cd7-06ddaf6f8f73"><_gte:Target
lang="en"></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext
></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_cover_company">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="Ab1dc7711-f0ca-4ef3-bcd6-373f7ff28bdc"><_gte:Target
lang="en"><_ufe:CoverCompany><_dtd:table frame="none"><_dtd:tgroup
cols="2"><?PubTbl tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="0.00pt"?><_dtd:colspec colname="col1" colwidth="2.00in"/><_dtd:colspec
colname="COLSPEC0" colwidth="100.00*"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0"><_ufe:HeaderLogo></_ufe:HeaderLogo></_dtd:entry><_dtd:entry
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup><_ufe:CoverCompanyText
></_ufe:CoverCompanyText></_dtd:table></_ufe:CoverCompany></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_cover_export_control">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A4d007932-4b5b-4e80-beff-f4271b67d6f9"><_gte:Target
lang="en"><_gte:Font Weight="bold" TypeSize="10pt" FamName="Arial"
> Export Control</_gte:Font></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_cover_export_info">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="Aa0ada5ad-82cc-4cf4-ae32-790552211006"><_gte:Target
lang="en"><_ufe:Cover_ExportRegistration padding-bottom="5pt"><_gte:Font
TypeSize="10pt" FamName="Arial"><_gte:ElementContentPage
include="contentOnly"
xpath="/pm/identAndStatusSection/pmStatus/dataRestrictions/restrictionInstructions/exportControl/exportRegistrationStmt"
/></_gte:Font></_ufe:Cover_ExportRegistration></_gte:Target></_gte:Translate
></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_cover_footer">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A7ecdfdd0-8a9a-44f5-b5bc-ac137414ddab"><_gte:Target
lang="en"><_dtd:table frame="none"><_dtd:tgroup cols="1"><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt" ctmarg="0.00pt"
dispwid="670.00px"?><_dtd:colspec colname="col1" colwidth="1.28*"
/><_dtd:tbody><_dtd:row valign="top"><_dtd:entry align="left"
valign="middle"><_ufe:CoverFooterDocumentNumber> Revision <_gte:XPathString
expr="number(/pm/identAndStatusSection/pmAddress/pmIdent/issueInfo/@issueNumber)"
/></_ufe:CoverFooterDocumentNumber></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_cover_issue_info">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A846a9227-a1a1-467e-8786-da8cb834834f"><_gte:Target
lang="en"><_ufe:CoverIssueInfoStyle><_ufe:IfNotACMM>Page <_gte:AttributeContentPage
attr="shortPrefix" elem="pmEntry" occur="1"></_gte:AttributeContentPage
><_gte:FormattedPageNumber/></_ufe:IfNotACMM><_ufe:IfACMM>Page <_gte:FormattedPageNumber
/> of <_gte:FinalPageNumber scopingDivision=""/></_ufe:IfACMM><_ufe:CoverInitialDate
></_ufe:CoverInitialDate><_ufe:CoverDateLabel></_ufe:CoverDateLabel
> <_gte:AttributeContentPage attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:CoverIssueInfoStyle></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_cover_legal_notice">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="Aebf15e53-5ba6-48ef-879c-e81f69bc66a1"><_gte:Target
lang="en"><_gte:Font Weight="bold" TypeSize="10pt" FamName="Arial"
> Legal Notice</_gte:Font></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_cover_pmTitle">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="Ad4b37296-88ae-4200-b5aa-5e54e3cbff18"><_gte:Target
lang="en"><_ufe:CoverTitle><_gte:ElementContentPage
include="contentOnly"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/pmTitle"
/></_ufe:CoverTitle></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_cover_title">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A57ff4bbe-37e9-45de-9395-42d20ec2ac2d"><_gte:Target
lang="en"><_ufe:CoverCMP><_ufe:HeaderDocTitle></_ufe:HeaderDocTitle
><_ufe:CoverWithIPL></_ufe:CoverWithIPL></_ufe:CoverCMP><_ufe:CoverTitle
><_gte:ElementContentPage include="contentOnly"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/pmTitle"
/></_ufe:CoverTitle></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="front_matter_footer_right">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A012ec23f-e276-45fb-8a7b-2c4e860416de"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="4"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"
dispwid="663.00px"?><_dtd:colspec colname="col1" colwidth="40.00mm"
/><_dtd:colspec colname="col2" colwidth="100.00*"/><_dtd:colspec
colname="COLSPEC3" colwidth="1.35in"/><_dtd:colspec colname="col3"
colwidth="2.55in"/><_dtd:tbody><_dtd:row><?PubTbl row rht="5.00mm"?><_dtd:entry
align="left" nameend="col2" namest="col1" rowsep="0"></_dtd:entry
><_dtd:entry align="right" nameend="col3" namest="COLSPEC3" rowsep="0"
></_dtd:entry></_dtd:row><_dtd:row valign="top"><?PubTbl row
rht="13.00mm"?><_dtd:entry align="left"></_dtd:entry><_dtd:entry
align="center" valign="bottom"></_dtd:entry><_dtd:entry align="right"
valign="bottom"> </_dtd:entry><_dtd:entry align="right" valign="bottom"
><_ufe:FooterBlockStyle><_ufe:FooterPage>Page <_gte:FormattedPageNumber
/></_ufe:FooterPage></_ufe:FooterBlockStyle><_ufe:FooterDateStyle
><_ufe:FooterDate><_gte:AttributeContentPage attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="inside_front_cover_footer">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="Aa675ce47-5948-4e11-aceb-3e91ad8e844f"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="4"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"/><_dtd:colspec
colname="col2" colwidth="200.00*"/><_dtd:colspec colname="COLSPEC1"
colwidth="1.35in"/><_dtd:colspec colname="col3" colwidth="2.55in"
/><_dtd:tbody><_dtd:row valign="top"><?PubTbl row rht="13.00mm"?><_dtd:entry
align="left"></_dtd:entry><_dtd:entry align="center" valign="bottom"
></_dtd:entry><_dtd:entry align="right" valign="bottom"></_dtd:entry
><_dtd:entry align="right" valign="bottom"><_ufe:FooterBlockStyle
><_ufe:FooterPage>Page <_gte:AttributeContentPage attr="shortPrefix"
elem="pmEntry" occur="1"></_gte:AttributeContentPage><_gte:FormattedPageNumber
/></_ufe:FooterPage><_ufe:FooterDateStyle><_ufe:FooterDate><_gte:AttributeContentPage
attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_ufe:FooterBlockStyle></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="intentionally_blank">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A2bfd2461-1566-40e6-a848-de0b5a528bfa"><_gte:Target
lang="en"><_ufe:IntentionallyBlank></_ufe:IntentionallyBlank></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent
comment='A special footer for "intentionally blank" pages, which uses a different method to set the
page prefix than regular pages, since they were coming in with the following page&#x27;s
prefix rather than the previous. We&#x27;ll invoke a UFE to output the actual page number,
and get the prefix via a page attribute (_gte:AttributeContentPage).
UPDATE: Removed page prefix. UPADTE: Replaced page prefix.'
generatedContentName="intentionally_blank_footer">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="Ad15bce3a-6a04-4887-aaae-49d76061a835"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="3"
><?PubTbl tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"/><_dtd:colspec
colname="col2" colwidth="100.00*"/><_dtd:colspec colname="col3"
colwidth="2.55in"/><_dtd:tbody><_dtd:row valign="top"><?PubTbl
row
rht="13.00mm"?><_dtd:entry align="left"></_dtd:entry><_dtd:entry
align="center" valign="bottom"></_dtd:entry><_dtd:entry align="right"
valign="bottom"><_ufe:FooterBlockStyle><_ufe:IfNotACMM><_ufe:FooterSpecialSectionName
><_gte:AttributeContentPage attr="specialSectionName" elem="pmEntry"
occur="pagelast"></_gte:AttributeContentPage></_ufe:FooterSpecialSectionName
><_ufe:FooterPage>Page <_gte:AttributeContentPage attr="shortPrefix"
elem="pmEntry" occur="pagelast"></_gte:AttributeContentPage><_ufe:BlankFooterPageNumber
></_ufe:BlankFooterPageNumber><_gte:AttributeContentPage
attr="authorityName" elem="pmEntry" occur="pagelast"></_gte:AttributeContentPage
></_ufe:FooterPage></_ufe:IfNotACMM><_ufe:IfACMM>Page <_gte:FormattedPageNumber
/> of <_gte:FinalPageNumber scopingDivision=""/></_ufe:IfACMM></_ufe:FooterBlockStyle
><_ufe:FooterDateStyle><_ufe:FooterDate><_gte:AttributeContentPage
attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
> </_gte:AttributeContentPage><_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent
comment='A special footer for "intentionally blank" pages, which uses a different method to set the
page prefix than regular pages, since they were coming in with the following page&#x27;s
prefix rather than the previous. We&#x27;ll invoke a UFE to output the actual page number,
and get the prefix via a page attribute (_gte:AttributeContentPage).
UPDATE: Removed page prefix. UPADTE: Replaced page prefix.'
generatedContentName="intentionally_blank_footer_cover">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A824f2257-0eea-40d2-a7d4-79a99e0b994a"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="4"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt" dispwid="736.00px"?><_dtd:colspec colname="col1"
colwidth="40.00mm"/><_dtd:colspec colname="col2" colwidth="100.00*"
/><_dtd:colspec colname="COLSPEC2" colwidth="1.35in"/><_dtd:colspec
colname="col3" colwidth="2.55in"/><_dtd:tbody><_dtd:row valign="top"
><?PubTbl row
rht="13.00mm"?><_dtd:entry align="left"></_dtd:entry><_dtd:entry
align="center" valign="bottom"></_dtd:entry><_dtd:entry align="right"
valign="bottom"> </_dtd:entry><_dtd:entry align="right" valign="bottom"
><_ufe:FooterBlockStyle><_ufe:FooterPage>Page <_gte:AttributeContentPage
attr="shortPrefix" elem="pmEntry" occur="1"></_gte:AttributeContentPage
><_ufe:BlankFooterPageNumber></_ufe:BlankFooterPageNumber></_ufe:FooterPage
></_ufe:FooterBlockStyle><_ufe:FooterDateStyle><_ufe:FooterDate><_gte:AttributeContentPage
attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent
comment='A special footer for "intentionally blank" pages, which uses a different method to set the
page prefix than regular pages, since they were coming in with the following page&#x27;s
prefix rather than the previous. We&#x27;ll invoke a UFE to output the actual page number,
and get the prefix via a page attribute (_gte:AttributeContentPage).
UPDATE: Removed page prefix. UPADTE: Replaced page prefix.'
generatedContentName="intentionally_blank_footer_page_block">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A4fd82007-721e-487b-8eab-4e6e23dce81e"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="3"
><?PubTbl tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"/><_dtd:colspec
colname="col2" colwidth="100.00*"/><_dtd:colspec colname="col3"
colwidth="2.55in"/><_dtd:tbody><_dtd:row valign="top"><?PubTbl
row
rht="13.00mm"?><_dtd:entry align="left"></_dtd:entry><_dtd:entry
align="center" valign="bottom"></_dtd:entry><_dtd:entry align="right"
valign="bottom"><_ufe:FooterBlockStyle><_ufe:FooterSpecialSectionName
><_gte:AttributeContentPage attr="specialSectionName" elem="pmEntry"
occur="pagelast"></_gte:AttributeContentPage></_ufe:FooterSpecialSectionName
><_ufe:FooterPage>Page <_gte:AttributeContentPage attr="shortPrefix"
elem="pmEntry" occur="pagelast"></_gte:AttributeContentPage><_ufe:BlankFooterPageNumberPageBlock
></_ufe:BlankFooterPageNumberPageBlock><_gte:AttributeContentPage
attr="authorityName" elem="pmEntry" occur="pagelast"></_gte:AttributeContentPage
></_ufe:FooterPage></_ufe:FooterBlockStyle><_ufe:FooterDateStyle><_ufe:FooterDate
><_gte:AttributeContentPage attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
> </_gte:AttributeContentPage><_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent
comment='A special footer for storage "intentionally blank" pages, to set the section name to "STORAGE PROCEDURES AND DATA" since it was incorrectly pulling in the following IPD section name.'
generatedContentName="intentionally_blank_storage_footer">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A1eb50f23-b911-44dd-a66b-933cc0bd6a96"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="4"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt" dispwid="736.00px"?><_dtd:colspec colname="col1"
colwidth="40.00mm"/><_dtd:colspec colname="col2" colwidth="100.00*"
/><_dtd:colspec colname="COLSPEC2" colwidth="1.35in"/><_dtd:colspec
colname="col3" colwidth="2.55in"/><_dtd:tbody><_dtd:row><?PubTbl
row rht="5.00mm"?><_dtd:entry align="right" nameend="col3" namest="col1"
rowsep="0"><_ufe:FooterBlockStyle><_gte:Font AllCap="yes">STORAGE
PROCEDURES AND DATA</_gte:Font></_ufe:FooterBlockStyle></_dtd:entry
></_dtd:row><_dtd:row valign="top"><?PubTbl row
rht="13.00mm"?><_dtd:entry align="left"></_dtd:entry><_dtd:entry
align="center" valign="bottom"></_dtd:entry><_dtd:entry align="right"
valign="bottom"> </_dtd:entry><_dtd:entry align="right" valign="bottom"
><_ufe:FooterDateStyle><_ufe:FooterDate><_gte:AttributeContentPage
attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage><_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage><_gte:AttributeContentPage attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
><_ufe:FooterBlockStyle><_ufe:FooterPage>Page <_gte:FormattedPageNumber
/></_ufe:FooterPage></_ufe:FooterBlockStyle></_dtd:entry></_dtd:row
></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate
></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="IPD_not_illustrated">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="Af72d9e02-5df6-4c95-b1ca-7879b8a0e7c2"><_gte:Target
lang="en">- ITEM NOT ILLUSTRATED</_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="IPD_table_header">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A83923c92-64c6-40c4-b7a8-95b0daf568d9"><_gte:Target
lang="en"></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext
></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="landscape_change_bar">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="Acab67f77-4f12-402c-bdb0-9f75e58d5d70"><_gte:Target
lang="en"><_gte:Leaders leaderType="rule" lenType="fit" minLen="0.00pt"
vshift="0.00pt" ruleThick="4.00pt"/></_gte:Target></_gte:Translate
></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent
comment='Added a couple nbsp after "Date" to shift it slightly to the left'
generatedContentName="LEP_Continued_Headings">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A38611275-3fb4-43ac-8d40-a3b7569e6589"><_gte:Target
lang="en"><_ufe:LEP_title_style>LIST OF EFFECTIVE PAGES (Cont)</_ufe:LEP_title_style
><_dtd:table frame="none"><_dtd:tgroup cols="5"><?PubTbl tgroup
cbmarg="2.00pt"
clmarg="0.00pt" crmarg="0.00pt" ctmarg="0.00pt"?><_dtd:colspec
colname="col1" colwidth="2.40in"/><_dtd:colspec colname="col2"
colwidth="3.02*"/><_dtd:colspec colname="COLSPEC0" colwidth="1.50pi"
/><_dtd:colspec colname="col3" colwidth="2.40in"/><_dtd:colspec
colname="col4" colwidth="2.99*"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0"><_ufe:LEP_subheading_style>Subheading and Page</_ufe:LEP_subheading_style
></_dtd:entry><_dtd:entry colsep="0" align="center"><_ufe:LEP_subheading_style
>Date<_gte:Font Underline="no">  </_gte:Font></_ufe:LEP_subheading_style
></_dtd:entry><_dtd:entry colsep="0" align="center"></_dtd:entry><_dtd:entry
colsep="0"><_ufe:LEP_subheading_style>Subheading and Page</_ufe:LEP_subheading_style
></_dtd:entry><_dtd:entry align="center"><_ufe:LEP_subheading_style
>Date<_gte:Font Underline="no">  </_gte:Font></_ufe:LEP_subheading_style
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="LEP_footer">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A9987c85c-a52e-4792-9e86-3e56483ac68c"><_gte:Target
lang="en"><_dtd:table frame="none"><_dtd:tgroup cols="4"><?PubTbl
tgroup
cbmarg="1.00pt" clmarg="0.00pt" crmarg="0.00pt"?><_dtd:colspec
colname="col1" colwidth="1.33*" colsep="0"/><_dtd:colspec
colname="COLSPEC0" colwidth="0.23in" colsep="0"/><_dtd:colspec
colname="col2" colwidth="1.33*" colsep="0"/><_dtd:colspec colname="col3"
colwidth="1.33*"/><_dtd:tbody><_dtd:row rowsep="0" valign="top"><?PubTbl
row rht="0.20in"?><_dtd:entry align="left"></_dtd:entry><_dtd:entry
align="left" valign="bottom">*</_dtd:entry><_dtd:entry align="left"
valign="bottom">Indicates a changed or added page.</_dtd:entry><_dtd:entry
align="right"></_dtd:entry></_dtd:row><_dtd:row><_dtd:entry align="left"
></_dtd:entry><_dtd:entry align="left">F</_dtd:entry><_dtd:entry
align="left">Indicates a foldout page.</_dtd:entry><_dtd:entry
align="right"></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext
></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="LEP_footer_right">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A97a060fa-b507-4ac7-826a-5bab9c482ecb"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="4"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"/><_dtd:colspec
colname="col2" colwidth="200.00*"/><_dtd:colspec colname="COLSPEC1"
colwidth="1.35in"/><_dtd:colspec colname="col3" colwidth="2.55in"
/><_dtd:tbody><_dtd:row valign="top"><?PubTbl row rht="13.00mm"?><_dtd:entry
align="left"></_dtd:entry><_dtd:entry align="center" valign="bottom"
></_dtd:entry><_dtd:entry align="right" valign="bottom"></_dtd:entry
><_dtd:entry align="right" valign="bottom"><_ufe:FooterBlockStyle
><_ufe:FooterPage>Page LEP-<_gte:FormattedPageNumber/></_ufe:FooterPage
><_ufe:FooterDateStyle><_ufe:FooterDate><_gte:AttributeContentPage
attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_ufe:FooterBlockStyle></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent
comment='Added a couple nbsp after "Date" to shift it slightly to the left'
generatedContentName="LEP_Headings">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A4a136c5a-faac-4f1d-91a0-03594ef08267"><_gte:Target
lang="en"><_ufe:LEP_title_style>LIST OF EFFECTIVE PAGES</_ufe:LEP_title_style
><_dtd:table frame="none"><_dtd:tgroup cols="5"><?PubTbl tgroup
cbmarg="2.00pt"
clmarg="0.00pt" crmarg="0.00pt" ctmarg="0.00pt"?><_dtd:colspec
colname="col1" colwidth="2.40in"/><_dtd:colspec colname="col2"
colwidth="3.02*"/><_dtd:colspec colname="COLSPEC0" colwidth="1.50pi"
/><_dtd:colspec colname="col3" colwidth="2.40in"/><_dtd:colspec
colname="col4" colwidth="2.99*"/><_dtd:tbody><_dtd:row><_dtd:entry
colsep="0"><_ufe:LEP_subheading_style>Subheading and Page</_ufe:LEP_subheading_style
></_dtd:entry><_dtd:entry colsep="0" align="center"><_ufe:LEP_subheading_style
>Date<_gte:Font Underline="no">  </_gte:Font></_ufe:LEP_subheading_style
></_dtd:entry><_dtd:entry colsep="0" align="center"></_dtd:entry><_dtd:entry
colsep="0"><_ufe:LEP_subheading_style>Subheading and Page</_ufe:LEP_subheading_style
></_dtd:entry><_dtd:entry align="center"><_ufe:LEP_subheading_style
>Date<_gte:Font Underline="no">  </_gte:Font></_ufe:LEP_subheading_style
></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target
></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="main_footer_right">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A585356f5-fcbf-40e1-acb0-d390f97c6eba"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="3"
><?PubTbl tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"/><_dtd:colspec
colname="col2" colwidth="200.00*"/><_dtd:colspec colname="col3"
colwidth="2.55in"/><_dtd:tbody><_dtd:row valign="top"><?PubTbl
row rht="13.00mm"?><_dtd:entry align="left"></_dtd:entry><_dtd:entry
align="center" valign="bottom"></_dtd:entry><_dtd:entry align="right"
valign="bottom"><_ufe:FooterBlockStyle><_ufe:IfNotACMM><_ufe:FooterSpecialSectionName
><_gte:AttributeContentPage attr="specialSectionName" elem="pmEntry"
occur="pagefirst"></_gte:AttributeContentPage></_ufe:FooterSpecialSectionName
><_ufe:FooterPage>Page <_gte:FormattedPageNumber/></_ufe:FooterPage
></_ufe:IfNotACMM><_ufe:IfACMM>Page <_gte:FormattedPageNumber/> of <_gte:FinalPageNumber
scopingDivision=""/></_ufe:IfACMM><_ufe:FooterDateStyle><_ufe:FooterDate
><_gte:AttributeContentPage attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_ufe:FooterBlockStyle></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="main_header">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="A8dbdddb7-604e-4383-9bb3-f509d7bb63b9"><_gte:Target
lang="en"><_dtd:table frame="bottom" colsep="no"><?PubTbl
table border-bottom-width="0.50pt"
border-left-width="0.50pt"
border-right-width="0.50pt" border-top-width="0.50pt"?><_dtd:tgroup
cols="3"><?PubTbl tgroup cbmarg="3.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="0.00pt" rth="0.00pt"?><_dtd:colspec colname="col1"
colwidth="109.60*" align="center"/><_dtd:colspec colname="COLSPEC1"
colwidth="79.42*"/><_dtd:colspec colname="COLSPEC0" colwidth="110.97*"
/><_dtd:tbody><_dtd:row><?PubTbl row rht="12.12mm"?><_dtd:entry
rowsep="0"><?PubTbl cell border-bottom-width="0.50pt" border-right-width="0.50pt"?></_dtd:entry
><_dtd:entry rowsep="0"><?PubTbl cell border-bottom-width="0.50pt"
border-right-width="0.50pt"?><_ufe:HeaderLogo></_ufe:HeaderLogo></_dtd:entry
><_dtd:entry rowsep="0"><?PubTbl cell border-bottom-width="0.50pt"?></_dtd:entry
></_dtd:row><_dtd:row><?PubTbl row rht="10.00mm"?><_dtd:entry
nameend="COLSPEC0" namest="col1" rowsep="0"><_ufe:HeaderTitleStyle
><_ufe:HeaderDocTitle></_ufe:HeaderDocTitle></_ufe:HeaderTitleStyle
><_gte:ElementContentPage include="contentOnly"
xpath="//identAndStatusSection/pmAddress/pmAddressItems/shortPmTitle"
/></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup></_dtd:table
></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter></_sfe:Gentext
></Content>
</GeneratedContent>
<GeneratedContent
comment="Not used anymore: just use the ATA number page region"
generatedContentName="separator_footer">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="off" id="Ae79e0a0d-91a8-4317-8ebe-3efe700ff376"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="4"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"/><_dtd:colspec
colname="col2" colwidth="200.00*"/><_dtd:colspec colname="COLSPEC1"
colwidth="1.35in"/><_dtd:colspec colname="col3" colwidth="1.55in"
/><_dtd:tbody><_dtd:row><?PubTbl row rht="5.00mm"?><_dtd:entry
align="right" nameend="col3" namest="col1" rowsep="0"></_dtd:entry
></_dtd:row><_dtd:row valign="top"><?PubTbl row rht="13.00mm"?><_dtd:entry
align="left"></_dtd:entry><_dtd:entry align="center" valign="bottom"
nameend="COLSPEC1" namest="col2"><_ufe:FooterBlockStyle><_ufe:FooterSNS
></_ufe:FooterSNS></_ufe:FooterBlockStyle></_dtd:entry><_dtd:entry
align="right" valign="bottom"></_dtd:entry></_dtd:row></_dtd:tbody
></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="storage_footer_right">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A04d2e3d7-9a2d-47ef-b69a-93fda2649a3e"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="4"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"/><_dtd:colspec
colname="col2" colwidth="200.00*"/><_dtd:colspec colname="COLSPEC1"
colwidth="1.35in"/><_dtd:colspec colname="col3" colwidth="1.55in"
/><_dtd:tbody><_dtd:row><?PubTbl row rht="5.00mm"?><_dtd:entry
align="right" nameend="col3" namest="col1" rowsep="0"><_ufe:FooterBlockStyle
><_gte:Font AllCap="yes">STORAGE PROCEDURES AND DATA</_gte:Font></_ufe:FooterBlockStyle
></_dtd:entry></_dtd:row><_dtd:row valign="top"><?PubTbl row
rht="13.00mm"?><_dtd:entry align="left"></_dtd:entry><_dtd:entry
align="center" valign="bottom"></_dtd:entry><_dtd:entry align="right"
valign="bottom"></_dtd:entry><_dtd:entry align="right" valign="bottom"
><_ufe:FooterDateStyle><_ufe:FooterDate><_gte:AttributeContentPage
attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage><_gte:AttributeContentPage attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
><_ufe:FooterBlockStyle><_ufe:FooterPage>Page <_gte:FormattedPageNumber
/></_ufe:FooterPage></_ufe:FooterBlockStyle></_dtd:entry></_dtd:row
></_dtd:tbody></_dtd:tgroup></_dtd:table></_gte:Target></_gte:Translate
></_sfe:HeaderOrFooter></_sfe:Gentext></Content>
</GeneratedContent>
<GeneratedContent generatedContentName="ToC_footer_right">
<Content><_sfe:Gentext><_sfe:HeaderOrFooter><_gte:Translate
translate="on" id="A19c22269-177c-4654-bda3-279ebdaa161d"><_gte:Target
lang="en"><_dtd:table frame="none" colsep="no"><_dtd:tgroup cols="4"
><?PubTbl
tgroup cbmarg="0.00pt" clmarg="0.00pt" crmarg="0.00pt"
ctmarg="4.00pt"?><_dtd:colspec colname="col1" colwidth="40.00mm"/><_dtd:colspec
colname="col2" colwidth="200.00*"/><_dtd:colspec colname="COLSPEC1"
colwidth="1.35in"/><_dtd:colspec colname="col3" colwidth="2.55in"
/><_dtd:tbody><_dtd:row valign="top"><?PubTbl row rht="13.00mm"?><_dtd:entry
align="left"></_dtd:entry><_dtd:entry align="center" valign="bottom"
></_dtd:entry><_dtd:entry align="right" valign="bottom"></_dtd:entry
><_dtd:entry align="right" valign="bottom"><_ufe:FooterBlockStyle
><_ufe:FooterPage>Page <_gte:FormattedPageNumber/></_ufe:FooterPage
><_ufe:FooterDateStyle><_ufe:FooterDate><_gte:AttributeContentPage
attr="day"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="month"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage> <_gte:AttributeContentPage attr="year"
xpath="/pm/identAndStatusSection/pmAddress/pmAddressItems/issueDate"
></_gte:AttributeContentPage></_ufe:FooterDate></_ufe:FooterDateStyle
></_ufe:FooterBlockStyle></_dtd:entry></_dtd:row></_dtd:tbody></_dtd:tgroup
></_dtd:table></_gte:Target></_gte:Translate></_sfe:HeaderOrFooter
></_sfe:Gentext></Content>
</GeneratedContent>
</GeneratedContents>
<TablesOfContents>
<TableOfContents
comment='For the List of Figures, we are now using the special hidden UFE FigureTitleForToc (output by the figure tag) so that ToC links will
go to the first page of a multi-sheet figure, rather than the last (where the actual title is located). So we removed the previous inclusions
of four different title in figure contexts in the "Customize" dialog.'
leaderMinLength="2pc" tocName="List_of_Figures" useForBookmarks="no">
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="1in" numberAlignment="left" numbered="yes"
tabtoAfter="1in" tocLevel="1"/>
<TocLevelIndent alignAt="2em" followWith="space" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="2"/>
<TocLevelIndent alignAt="4em" followWith="space" includeLabel="yes"
indentFollowing="8em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="3"/>
<TocLevelIndent alignAt="6em" followWith="space" includeLabel="yes"
indentFollowing="10em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="4"/>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/>
<TocLevelIndent alignAt="10em" followWith="space" includeLabel="yes"
indentFollowing="14em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="6"/>
<TocLevelIndent alignAt="12em" followWith="space" includeLabel="yes"
indentFollowing="16em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="7"/>
<TocLevelIndent alignAt="14em" followWith="space" includeLabel="yes"
indentFollowing="18em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="8"/>
<TocLevelIndent alignAt="16em" followWith="space" includeLabel="yes"
indentFollowing="20em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="9"/>
<TocLevelIndent alignAt="18em" followWith="space" includeLabel="yes"
indentFollowing="22em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="10"/>
<TocTitleContexts>
<TocTitleContext titleContextSelector="_ufe:FigureTitleForToC/title">
<TocEntry tocLevel="1" tocNameReference="List_of_Figures">
<TocEntryContents><_sfe:TocEntry1_List_of_Figures><_sfe:TocLabel_List_of_Figures
><_gte:LabelAndNumberMarker><_gte:Translate translate="off"
id="A11a4f065-ebd3-4862-b356-b32db99bdcd1"><_gte:Target lang="en"
><_gte:ElementLabelAndNumber/> </_gte:Target></_gte:Translate></_gte:LabelAndNumberMarker
></_sfe:TocLabel_List_of_Figures><_sfe:TocTitle_List_of_Figures><_gte:ElementContent
/></_sfe:TocTitle_List_of_Figures><_sfe:TocPage_List_of_Figures><_gte:Leaders
leaderType="dots" lenType="fit" minLen="2pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_List_of_Figures></_sfe:TocEntry1_List_of_Figures
></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="1in" numberAlignment="left" numbered="yes"
tabtoAfter="1in" tocLevel="1"/></TocEntry>
</TocTitleContext>
</TocTitleContexts>
</TableOfContents>
<TableOfContents leaderMinLength="2pc" tocName="List_of_IPL_Figures"
useForBookmarks="no">
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="1in" numberAlignment="left" numbered="yes"
tabtoAfter="1in" tocLevel="1"/>
<TocLevelIndent alignAt="2em" followWith="space" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="2"/>
<TocLevelIndent alignAt="4em" followWith="space" includeLabel="yes"
indentFollowing="8em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="3"/>
<TocLevelIndent alignAt="6em" followWith="space" includeLabel="yes"
indentFollowing="10em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="4"/>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/>
<TocLevelIndent alignAt="10em" followWith="space" includeLabel="yes"
indentFollowing="14em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="6"/>
<TocLevelIndent alignAt="12em" followWith="space" includeLabel="yes"
indentFollowing="16em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="7"/>
<TocLevelIndent alignAt="14em" followWith="space" includeLabel="yes"
indentFollowing="18em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="8"/>
<TocLevelIndent alignAt="16em" followWith="space" includeLabel="yes"
indentFollowing="20em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="9"/>
<TocLevelIndent alignAt="18em" followWith="space" includeLabel="yes"
indentFollowing="22em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="10"/>
<TocTitleContexts>
<TocTitleContext titleContextSelector="_ufe:IPLFigureTitleForToC/title">
<TocEntry tocLevel="1" tocNameReference="List_of_IPL_Figures">
<TocEntryContents><_sfe:TocEntry1_List_of_IPL_Figures><_sfe:TocLabel_List_of_IPL_Figures
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_List_of_IPL_Figures><_sfe:TocTitle_List_of_IPL_Figures
><_gte:ElementContent/></_sfe:TocTitle_List_of_IPL_Figures><_sfe:TocPage_List_of_IPL_Figures
><_gte:Leaders leaderType="dots" lenType="fit" minLen="2pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_List_of_IPL_Figures
></_sfe:TocEntry1_List_of_IPL_Figures></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="1in" numberAlignment="left" numbered="yes"
tabtoAfter="1in" tocLevel="1"/></TocEntry>
</TocTitleContext>
</TocTitleContexts>
</TableOfContents>
<TableOfContents leaderMinLength="2pc" tocName="List_of_Tables"
useForBookmarks="no">
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="1in" numberAlignment="left" numbered="yes"
tabtoAfter="1in" tocLevel="1"/>
<TocLevelIndent alignAt="2em" followWith="space" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="2"/>
<TocLevelIndent alignAt="4em" followWith="space" includeLabel="yes"
indentFollowing="8em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="3"/>
<TocLevelIndent alignAt="6em" followWith="space" includeLabel="yes"
indentFollowing="10em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="4"/>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/>
<TocLevelIndent alignAt="10em" followWith="space" includeLabel="yes"
indentFollowing="14em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="6"/>
<TocLevelIndent alignAt="12em" followWith="space" includeLabel="yes"
indentFollowing="16em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="7"/>
<TocLevelIndent alignAt="14em" followWith="space" includeLabel="yes"
indentFollowing="18em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="8"/>
<TocLevelIndent alignAt="16em" followWith="space" includeLabel="yes"
indentFollowing="20em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="9"/>
<TocLevelIndent alignAt="18em" followWith="space" includeLabel="yes"
indentFollowing="22em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="10"/>
<TocCondition>
<Tests>
<XPathTest expression="count(ancestor::pmEntry)>1"/></Tests>
</TocCondition>
<TocTitleContexts>
<TocTitleContext titleContextSelector="table/title">
<TocEntry tocLevel="1" tocNameReference="List_of_Tables">
<TocEntryContents><_sfe:TocEntry1_List_of_Tables><_sfe:TocLabel_List_of_Tables
><_gte:LabelAndNumberMarker><_gte:Translate translate="off"
id="A2a4b379b-e29c-41ff-8d27-b53f2c90b372"><_gte:Target lang="en"
><_gte:AttributeContent attr="shortPrefix" xpath="ancestor::pmEntry"
/><_gte:ElementNumber/><_gte:XPathString
expr="ancestor::pmEntry[count(ancestor::pmEntry)=1]/@authorityName"
/></_gte:Target></_gte:Translate></_gte:LabelAndNumberMarker></_sfe:TocLabel_List_of_Tables
><_sfe:TocTitle_List_of_Tables><_gte:ElementContent/></_sfe:TocTitle_List_of_Tables
><_sfe:TocPage_List_of_Tables><_gte:Leaders leaderType="dots"
lenType="fit" minLen="2pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_List_of_Tables></_sfe:TocEntry1_List_of_Tables></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="1in" numberAlignment="left" numbered="yes"
tabtoAfter="1in" tocLevel="1"/></TocEntry>
</TocTitleContext>
</TocTitleContexts>
</TableOfContents>
<TableOfContents
comment="Special conditions:
- If it's a pmEntryTitle, don't include it in the ToC if its shortPrefix is empty
- Only include level 1 levelled para titles
- Exclude top level IPD and Maintenance titles, since they are only &#x22;containers&#x22;, pointing to the same page as the next title...
- Exclude leveled paras in the copyright dmodule." tocDivLevels="2"
tocIndented="yes" tocName="Main_ToC" useForBookmarks="no">
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.5in" numberAlignment="left" numbered="no"
tabtoAfter="0.5in" tocLevel="3"/>
<TocLevelIndent alignAt="6em" followWith="space" includeLabel="yes"
indentFollowing="10em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="4"/>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/>
<TocLevelIndent alignAt="10em" followWith="space" includeLabel="yes"
indentFollowing="14em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="6"/>
<TocLevelIndent alignAt="12em" followWith="space" includeLabel="yes"
indentFollowing="16em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="7"/>
<TocLevelIndent alignAt="14em" followWith="space" includeLabel="yes"
indentFollowing="18em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="8"/>
<TocLevelIndent alignAt="16em" followWith="space" includeLabel="yes"
indentFollowing="20em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="9"/>
<TocLevelIndent alignAt="18em" followWith="space" includeLabel="yes"
indentFollowing="22em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="10"/>
<TocCondition>
<Tests logic="and">
<XPathTest
expression="count(ancestor::pmEntry)=2 or count(parent::pmEntry/descendant::pmEntry)>0 or ancestor::pmEntry/preceding-sibling::pmEntry/@pmEntryType='pmt58' "/>
<XPathTest expression="not(count(ancestor::proceduralStep)>1)"/></Tests>
</TocCondition>
<TocTitleContexts>
<TocTitleContext titleContextSelector="_ufe:FrontToCTitle">
<TocEntry tocLevel="1" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry1_Main_ToC><_sfe:TocTitle_Main_ToC
><_gte:ElementContent/></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC
></_sfe:TocEntry1_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="pmEntryTitle/pmEntryTitle/pmEntryTitle">
<TocEntry tocLevel="3" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry3_Main_ToC><_sfe:TocLabel_Main_ToC
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Main_ToC><_sfe:TocTitle_Main_ToC><_gte:ElementContent
/></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_Main_ToC></_sfe:TocEntry3_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="4em" followWith="space" includeLabel="yes"
indentFollowing="8em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="3"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntryTitle/pmEntryTitle">
<TocEntry tocLevel="2" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry2_Main_ToC><_sfe:TocLabel_Main_ToC
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Main_ToC><_sfe:TocTitle_Main_ToC><_gte:ElementContent
/></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_Main_ToC></_sfe:TocEntry2_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="2em" followWith="space" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="levelledPara/title">
<TocEntry tocLevel="3" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry3_Main_ToC><_sfe:TocTitle_Main_ToC
><_gte:Translate translate="off"
id="A068dacad-afe9-4e28-a74b-91e4b5d91487"><_gte:Target lang="en"
><_ufe:ToC_Indent></_ufe:ToC_Indent><_gte:AttributeContent
attr="titleNumber" occur="1" scope="title"/>	<_gte:ElementContent
/> <_gte:AttributeContent attr="authorityText" occur="1" scope="title"
/></_gte:Target></_gte:Translate></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC
></_sfe:TocEntry3_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.5in" numberAlignment="left" numbered="no"
tabtoAfter="0.5in" tocLevel="3"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="proceduralStep/title">
<TocEntry tocLevel="3" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry3_Main_ToC><_sfe:TocTitle_Main_ToC
><_gte:Translate translate="off"
id="Ad51a6eb8-09a8-43d8-b5b9-1879debf4462"><_gte:Target lang="en"
><_ufe:ToC_Indent></_ufe:ToC_Indent><_gte:AttributeContent
attr="titleNumber" occur="1" scope="title"/>	<_ufe:RelativeIndent
></_ufe:RelativeIndent><_gte:ElementContent/> <_gte:AttributeContent
attr="authorityText" occur="1" scope="title"/></_gte:Target></_gte:Translate
></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_Main_ToC></_sfe:TocEntry3_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.5in" numberAlignment="left" numbered="no"
tabtoAfter="0.5in" tocLevel="3"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="pmEntry/pmEntryTitle/_ufe:NumericTitle">
<TocEntry tocLevel="1" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry1_Main_ToC><_sfe:TocLabel_Main_ToC
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Main_ToC><_sfe:TocTitle_Main_ToC><_gte:ElementContent
/></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_Main_ToC></_sfe:TocEntry1_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntryTitle">
<TocEntry tocLevel="1" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry1_Main_ToC><_sfe:TocTitle_Main_ToC
><_gte:ElementContent/></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC
></_sfe:TocEntry1_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntry/pmEntryTitle">
<TocEntry tocLevel="2" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry2_Main_ToC><_sfe:TocTitle_Main_ToC
><_gte:Translate translate="off"
id="A4fd184ea-b997-44db-8066-47a278c21e3e"><_gte:Target lang="en"
><_gte:XPathString
expr="count((ancestor::pmEntry)[last()]/preceding-sibling::pmEntry)+1"
/> <_dtd:_hardspace/><_gte:ElementContent/> <_gte:AttributeContent
attr="authorityText" occur="ancestor" elem="pmEntryTitle"/></_gte:Target
></_gte:Translate></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC
></_sfe:TocEntry2_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntryTitle">
<TocEntry tocLevel="1" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry1_Main_ToC><_sfe:TocTitle_Main_ToC
><_gte:ElementContent/></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC
></_sfe:TocEntry1_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntry/pmEntryTitle">
<TocEntry tocLevel="2" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry2_Main_ToC><_sfe:TocTitle_Main_ToC
><_gte:Translate translate="off"
id="Af563763b-e024-41be-a752-ddc12b4f5cbc"><_gte:Target lang="en"
><_gte:XPathString
expr="count((ancestor::pmEntry)[last()]/preceding-sibling::pmEntry)+1"
/> <_dtd:_hardspace/><_gte:ElementContent/> <_gte:AttributeContent
attr="authorityText" occur="ancestor" elem="pmEntryTitle"/></_gte:Target
></_gte:Translate></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC
></_sfe:TocEntry2_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="proceduralStep[count(ancestor::pmEntry)=1]/title">
<TocEntry tocLevel="2" tocNameReference="Main_ToC">
<TocEntryContents><_sfe:TocEntry2_Main_ToC><_sfe:TocTitle_Main_ToC
><_gte:Translate translate="off"
id="Ad8cf8dcb-651a-4b71-a783-2f8fa86e7730"><_gte:Target lang="en"
><_ufe:ToC_Indent></_ufe:ToC_Indent><_gte:AttributeContent
attr="titleNumber" occur="1" scope="title"/>	<_gte:ElementContent
/> <_gte:AttributeContent attr="authorityText" occur="1" scope="title"
/></_gte:Target></_gte:Translate></_sfe:TocTitle_Main_ToC><_sfe:TocPage_Main_ToC
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC
></_sfe:TocEntry2_Main_ToC></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/></TocEntry>
</TocTitleContext>
</TocTitleContexts>
</TableOfContents>
<TableOfContents
comment="New ToC for IM/SDIM/SDOM that uses a different section structure"
tocDivLevels="2" tocName="Main_ToC_IM" useForBookmarks="no">
<TocLevelIndent alignAt="0em" followWith="space" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="1"/>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.5in" numberAlignment="left" numbered="no"
tabtoAfter="0.5in" tocLevel="3"/>
<TocLevelIndent alignAt="6em" followWith="space" includeLabel="yes"
indentFollowing="10em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="4"/>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/>
<TocLevelIndent alignAt="10em" followWith="space" includeLabel="yes"
indentFollowing="14em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="6"/>
<TocLevelIndent alignAt="12em" followWith="space" includeLabel="yes"
indentFollowing="16em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="7"/>
<TocLevelIndent alignAt="14em" followWith="space" includeLabel="yes"
indentFollowing="18em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="8"/>
<TocLevelIndent alignAt="16em" followWith="space" includeLabel="yes"
indentFollowing="20em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="9"/>
<TocLevelIndent alignAt="18em" followWith="space" includeLabel="yes"
indentFollowing="22em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="10"/>
<TocCondition>
<Tests>
<XPathTest
expression="count(ancestor::pmEntry)=2 or count(parent::pmEntry/descendant::pmEntry)>0 or  ancestor::pmEntry/@pmEntryType='pmt91' or ancestor::pmEntry/preceding-sibling::pmEntry[@pmEntryType='pmt91']"/>
<XPathTest expression="not(count(ancestor::proceduralStep)>1)"/></Tests>
</TocCondition>
<TocTitleContexts>
<TocTitleContext titleContextSelector="pmEntry/pmEntry/pmEntryTitle">
<TocEntry tocLevel="2" tocNameReference="Main_ToC_IM">
<TocEntryContents><_sfe:TocEntry2_Main_ToC_IM><_sfe:TocTitle_Main_ToC_IM
><_gte:Translate translate="off"
id="Ae022bcef-bdfb-4ae9-a532-d93f402aa44c"><_gte:Target lang="en"
><_gte:XPathString
expr="count((ancestor::pmEntry)[last()]/preceding-sibling::pmEntry)+1"
/> <_dtd:_hardspace/><_gte:ElementContent/> <_gte:AttributeContent
attr="authorityText" occur="ancestor" elem="pmEntryTitle"/></_gte:Target
></_gte:Translate></_sfe:TocTitle_Main_ToC_IM><_sfe:TocPage_Main_ToC_IM
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC_IM
></_sfe:TocEntry2_Main_ToC_IM></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntryTitle">
<TocEntry tocLevel="1" tocNameReference="Main_ToC_IM">
<TocEntryContents><_sfe:TocEntry1_Main_ToC_IM><_sfe:TocLabel_Main_ToC_IM
><_gte:LabelAndNumberMarker><_gte:Translate translate="off"
id="A983fb6b1-3d5d-465e-a8fe-f33f74a4f0f9"><_gte:Target lang="en"
><_gte:Font Weight="bold"><_gte:ElementLabelAndNumber/></_gte:Font
><_dtd:_newline/></_gte:Target></_gte:Translate></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Main_ToC_IM><_sfe:TocTitle_Main_ToC_IM><_gte:ElementContent
/></_sfe:TocTitle_Main_ToC_IM><_sfe:TocPage_Main_ToC_IM><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_Main_ToC_IM></_sfe:TocEntry1_Main_ToC_IM></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="space" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="_ufe:FrontToCTitle">
<TocEntry tocLevel="1" tocNameReference="Main_ToC_IM">
<TocEntryContents><_sfe:TocEntry1_Main_ToC_IM><_sfe:TocLabel_Main_ToC_IM
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_Main_ToC_IM><_sfe:TocTitle_Main_ToC_IM><_gte:ElementContent
/></_sfe:TocTitle_Main_ToC_IM><_sfe:TocPage_Main_ToC_IM><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_Main_ToC_IM></_sfe:TocEntry1_Main_ToC_IM></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="space" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="levelledPara/title">
<TocEntry tocLevel="3" tocNameReference="Main_ToC_IM">
<TocEntryContents><_sfe:TocEntry3_Main_ToC_IM><_sfe:TocTitle_Main_ToC_IM
><_gte:Translate translate="off"
id="Aff8880d0-738c-44f8-9817-c76a041b8a28"><_gte:Target lang="en"
><_ufe:ToC_Indent></_ufe:ToC_Indent><_gte:AttributeContent
attr="titleNumber" occur="1" scope="title"/>	<_gte:ElementContent
/> <_gte:AttributeContent attr="authorityText" occur="1" scope="title"
/></_gte:Target></_gte:Translate></_sfe:TocTitle_Main_ToC_IM><_sfe:TocPage_Main_ToC_IM
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC_IM
></_sfe:TocEntry3_Main_ToC_IM></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.5in" numberAlignment="left" numbered="no"
tabtoAfter="0.5in" tocLevel="3"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="proceduralStep[count(ancestor::pmEntry)=1]/title">
<TocEntry tocLevel="2" tocNameReference="Main_ToC_IM">
<TocEntryContents><_sfe:TocEntry2_Main_ToC_IM><_sfe:TocTitle_Main_ToC_IM
><_gte:Translate translate="off"
id="A91f38f6b-d3c6-4e73-94b9-561acb4f08ce"><_gte:Target lang="en"
><_ufe:ToC_Indent></_ufe:ToC_Indent><_gte:AttributeContent
attr="titleNumber" occur="1" scope="title"/>	<_gte:ElementContent
/> <_gte:AttributeContent attr="authorityText" occur="1" scope="title"
/></_gte:Target></_gte:Translate></_sfe:TocTitle_Main_ToC_IM><_sfe:TocPage_Main_ToC_IM
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_Main_ToC_IM
></_sfe:TocEntry2_Main_ToC_IM></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="proceduralStep/title">
<TocEntry tocLevel="3" tocNameReference="Main_ToC_IM">
<TocEntryContents><_sfe:TocEntry3_Main_ToC_IM><_sfe:TocTitle_Main_ToC_IM
><_gte:Translate translate="off"
id="A3a04d52a-2f30-4d01-b2ad-4fdf5a2cf96c"><_gte:Target lang="en"
><_ufe:ToC_Indent></_ufe:ToC_Indent><_gte:AttributeContent
attr="titleNumber" occur="1" scope="title"/>	<_ufe:RelativeIndent
></_ufe:RelativeIndent><_gte:ElementContent/> <_gte:AttributeContent
attr="authorityText" occur="1" scope="title"/></_gte:Target></_gte:Translate
></_sfe:TocTitle_Main_ToC_IM><_sfe:TocPage_Main_ToC_IM><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_Main_ToC_IM></_sfe:TocEntry3_Main_ToC_IM></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.5in" numberAlignment="left" numbered="no"
tabtoAfter="0.5in" tocLevel="3"/></TocEntry>
</TocTitleContext>
</TocTitleContexts>
</TableOfContents>
<TableOfContents
comment="Special conditions:
- If it's a pmEntryTitle, don't include it in the ToC if its shortPrefix is empty
- Only include level 1 levelled para titles
- Exclude top level IPD and Maintenance titles, since they are only &#x22;containers&#x22;, pointing to the same page as the next title...
- Exclude leveled paras in the copyright dmodule." tocDivLevels="2"
tocName="PDF_Bookmarks" useForBookmarks="yes">
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.5in" numberAlignment="left" numbered="no"
tabtoAfter="0.5in" tocLevel="3"/>
<TocLevelIndent alignAt="6em" followWith="space" includeLabel="yes"
indentFollowing="10em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="4"/>
<TocLevelIndent alignAt="8em" followWith="space" includeLabel="yes"
indentFollowing="12em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="5"/>
<TocLevelIndent alignAt="10em" followWith="space" includeLabel="yes"
indentFollowing="14em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="6"/>
<TocLevelIndent alignAt="12em" followWith="space" includeLabel="yes"
indentFollowing="16em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="7"/>
<TocLevelIndent alignAt="14em" followWith="space" includeLabel="yes"
indentFollowing="18em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="8"/>
<TocLevelIndent alignAt="16em" followWith="space" includeLabel="yes"
indentFollowing="20em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="9"/>
<TocLevelIndent alignAt="18em" followWith="space" includeLabel="yes"
indentFollowing="22em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="10"/>
<TocTitleContexts>
<TocTitleContext titleContextSelector="pmEntry/pmEntry/pmEntryTitle_bak">
<TocEntry tocLevel="2" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry2_PDF_Bookmarks><_sfe:TocLabel_PDF_Bookmarks
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks><_gte:ElementContent
/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_PDF_Bookmarks></_sfe:TocEntry2_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="2em" followWith="space" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntryTitle_bak">
<TocEntry tocLevel="1" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry1_PDF_Bookmarks><_sfe:TocLabel_PDF_Bookmarks
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks><_gte:ElementContent
/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_PDF_Bookmarks></_sfe:TocEntry1_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="space" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="pmEntry/pmEntry/_ufe:LeveledParaTitle">
<TocEntry tocLevel="2" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry2_PDF_Bookmarks><_sfe:TocLabel_PDF_Bookmarks
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks><_gte:ElementContent
/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_PDF_Bookmarks></_sfe:TocEntry2_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="2em" followWith="space" includeLabel="yes"
indentFollowing="6em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/_ufe:LeveledParaTitle">
<TocEntry tocLevel="1" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry1_PDF_Bookmarks><_sfe:TocLabel_PDF_Bookmarks
><_gte:LabelAndNumberMarker><_gte:ElementLabelAndNumber/></_gte:LabelAndNumberMarker
></_sfe:TocLabel_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks><_gte:ElementContent
/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks><_gte:Leaders
leaderType="dots" lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_PDF_Bookmarks></_sfe:TocEntry1_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="space" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="yes"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntry/pmEntryTitle">
<TocEntry tocLevel="2" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry2_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks
><_gte:Translate translate="off"
id="Aa248a779-58b6-4962-934a-04be70c43885"><_gte:Target lang="en"
><_gte:XPathString
expr="count((ancestor::pmEntry)[last()]/preceding-sibling::pmEntry)+1"
/> <_dtd:_hardspace/><_gte:ElementContent/> <_gte:AttributeContent
attr="authorityText" occur="ancestor" elem="pmEntryTitle"/></_gte:Target
></_gte:Translate></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_PDF_Bookmarks
></_sfe:TocEntry2_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntryTitle">
<TocEntry tocLevel="1" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry1_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks
><_gte:ElementContent/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_PDF_Bookmarks
></_sfe:TocEntry1_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntryTitle">
<TocEntry tocLevel="1" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry1_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks
><_gte:ElementContent/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_PDF_Bookmarks
></_sfe:TocEntry1_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="proceduralStep/title">
<TocEntry tocLevel="3" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry3_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks
><_gte:Translate translate="off"
id="A052b32d3-e84c-48af-8c3d-d5306ae0e263"><_gte:Target lang="en"
><_gte:ElementContent/> <_gte:AttributeContent attr="authorityText"
occur="ancestor" elem="title"/></_gte:Target></_gte:Translate></_sfe:TocTitle_PDF_Bookmarks
><_sfe:TocPage_PDF_Bookmarks><_gte:Leaders leaderType="dots"
lenType="fit" minLen="3pc" leaderSpacing="3pt"/><_gte:PageNumberReference
/></_sfe:TocPage_PDF_Bookmarks></_sfe:TocEntry3_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.5in" numberAlignment="left" numbered="no"
tabtoAfter="0.5in" tocLevel="3"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="levelledPara/title">
<TocEntry tocLevel="3" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry3_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks
><_gte:ElementContent/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_PDF_Bookmarks
></_sfe:TocEntry3_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.5in" numberAlignment="left" numbered="no"
tabtoAfter="0.5in" tocLevel="3"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntry/pmEntryTitle">
<TocEntry tocLevel="2" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry2_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks
><_gte:ElementContent/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_PDF_Bookmarks
></_sfe:TocEntry2_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="0.25in" numberAlignment="left" numbered="no"
tabtoAfter="0.25in" tocLevel="2"/></TocEntry>
</TocTitleContext>
<TocTitleContext titleContextSelector="pmEntry/pmEntryTitle">
<TocEntry tocLevel="1" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry1_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks
><_gte:ElementContent/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_PDF_Bookmarks
></_sfe:TocEntry1_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
<TocTitleContext
titleContextSelector="pmEntry/pmEntryTitle[parent::pmEntry[not(descendant::pmEntry)] and parent::pmEntry[not(ancestor::pmEntry)]]">
<TocEntry tocLevel="1" tocNameReference="PDF_Bookmarks">
<TocEntryContents><_sfe:TocEntry1_PDF_Bookmarks><_sfe:TocTitle_PDF_Bookmarks
><_gte:ElementContent/></_sfe:TocTitle_PDF_Bookmarks><_sfe:TocPage_PDF_Bookmarks
><_gte:Leaders leaderType="dots" lenType="fit" minLen="3pc"
leaderSpacing="3pt"/><_gte:PageNumberReference/></_sfe:TocPage_PDF_Bookmarks
></_sfe:TocEntry1_PDF_Bookmarks></TocEntryContents>
<TocLevelIndent alignAt="0em" followWith="tab" includeLabel="yes"
indentFollowing="4em" numberAlignment="left" numbered="no"
tabtoAfter="0em" tocLevel="1"/></TocEntry>
</TocTitleContext>
</TocTitleContexts>
</TableOfContents>
</TablesOfContents>
<FootnoteModels>
<FootnoteModel columnOrPageWide="page"
footnoteModelName="Default_Footnotes" footnoteNumberStyle="1"
insertSeparator="yes" separatorAlign="left"
separatorLengthType="specified" separatorRuleLength="9pc"
separatorRuleThickness="0.5pt" spaceAboveFootnote="15pt"
spaceBelowSeparator="2pt"/></FootnoteModels>
<Tables></Tables>
<CustomTables></CustomTables>
<SizeDefinitions>
<SizeDefinition sizeName="Bottom_Margin" sizeValue="34mm"/>
<SizeDefinition sizeName="Footer_from_Bottom" sizeValue="1in"/>
<SizeDefinition sizeName="Header_from_Top" sizeValue="1in"/>
<SizeDefinition sizeName="Honeywell_Standard_Space" sizeValue="10pt"/>
<SizeDefinition sizeName="Inside_Mirror_Margin" sizeValue="1.25in"/>
<SizeDefinition comment="0.8 cm requested for indent: about 23 pt."
sizeName="IPL_Nomenclature_Indent" sizeValue="23pt"/>
<SizeDefinition sizeName="Left_Margin" sizeValue="25mm"/>
<SizeDefinition
comment="Made for space between paras in the List of Effective Data Modules"
sizeName="Medium_Space_Above" sizeValue="10pt"/>
<SizeDefinition sizeName="Outside_Mirror_Margin" sizeValue="0.75in"/>
<SizeDefinition sizeName="Page_Height" sizeValue="11in"/>
<SizeDefinition sizeName="Page_Width" sizeValue="8.5in"/>
<SizeDefinition sizeName="Right_Margin" sizeValue="15mm"/>
<SizeDefinition sizeName="Small_Indent" sizeValue="16pt"/>
<SizeDefinition sizeName="Standard_Indent" sizeValue="20mm"/>
<SizeDefinition sizeName="Top_Margin" sizeValue="33mm"/>
</SizeDefinitions>
<CombinedFonts></CombinedFonts>
<Modules></Modules>
</Styler>
